{"version":3,"file":"ng-datefns-pipes-all-locales.umd.min.js","sources":["../../../node_modules/date-fns/is_date/index.js","../../../node_modules/date-fns/parse/index.js","../../../node_modules/date-fns/start_of_year/index.js","../../../node_modules/date-fns/start_of_day/index.js","../../../node_modules/date-fns/difference_in_calendar_days/index.js","../../../node_modules/date-fns/get_day_of_year/index.js","../../../node_modules/date-fns/start_of_week/index.js","../../../node_modules/date-fns/start_of_iso_week/index.js","../../../node_modules/date-fns/get_iso_year/index.js","../../../node_modules/date-fns/start_of_iso_year/index.js","../../../node_modules/date-fns/get_iso_week/index.js","../../../node_modules/date-fns/is_valid/index.js","../../../node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js","../../../node_modules/date-fns/locale/en/build_format_locale/index.js","../../../node_modules/date-fns/locale/en/index.js","../../../node_modules/date-fns/format/index.js","~/ng-datefns-pipes-all-locales/src/app/date-pipes/providers/date-pipe-manager.ts","../../../node_modules/date-fns/locale/ru/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/ru/build_format_locale/index.js","../../../node_modules/date-fns/locale/ru/index.js","../../../node_modules/date-fns/locale/eo/build_format_locale/index.js","../../../node_modules/date-fns/locale/eo/index.js","../../../node_modules/date-fns/locale/eo/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/zh_cn/build_format_locale/index.js","../../../node_modules/date-fns/locale/zh_cn/index.js","../../../node_modules/date-fns/locale/zh_cn/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/de/build_format_locale/index.js","../../../node_modules/date-fns/locale/de/index.js","../../../node_modules/date-fns/locale/de/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/ja/build_format_locale/index.js","../../../node_modules/date-fns/locale/ja/index.js","../../../node_modules/date-fns/locale/ja/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/es/build_format_locale/index.js","../../../node_modules/date-fns/locale/es/index.js","../../../node_modules/date-fns/locale/es/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/nl/build_format_locale/index.js","../../../node_modules/date-fns/locale/nl/index.js","../../../node_modules/date-fns/locale/nl/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/nb/build_format_locale/index.js","../../../node_modules/date-fns/locale/nb/index.js","../../../node_modules/date-fns/locale/nb/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/ca/build_format_locale/index.js","../../../node_modules/date-fns/locale/ca/index.js","../../../node_modules/date-fns/locale/ca/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/id/build_format_locale/index.js","../../../node_modules/date-fns/locale/id/index.js","../../../node_modules/date-fns/locale/id/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/it/build_format_locale/index.js","../../../node_modules/date-fns/locale/it/index.js","../../../node_modules/date-fns/locale/it/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/pl/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/pl/build_format_locale/index.js","../../../node_modules/date-fns/locale/pl/index.js","../../../node_modules/date-fns/locale/pt/build_format_locale/index.js","../../../node_modules/date-fns/locale/pt/index.js","../../../node_modules/date-fns/locale/pt/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/sv/build_format_locale/index.js","../../../node_modules/date-fns/locale/sv/index.js","../../../node_modules/date-fns/locale/sv/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/fr/build_format_locale/index.js","../../../node_modules/date-fns/locale/fr/index.js","../../../node_modules/date-fns/locale/fr/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/tr/build_format_locale/index.js","../../../node_modules/date-fns/locale/tr/index.js","../../../node_modules/date-fns/locale/tr/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/ko/build_format_locale/index.js","../../../node_modules/date-fns/locale/ko/index.js","../../../node_modules/date-fns/locale/ko/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/el/build_format_locale/index.js","../../../node_modules/date-fns/locale/el/index.js","../../../node_modules/date-fns/locale/el/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/sk/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/sk/build_format_locale/index.js","../../../node_modules/date-fns/locale/sk/index.js","../../../node_modules/date-fns/locale/fil/build_format_locale/index.js","../../../node_modules/date-fns/locale/fil/index.js","../../../node_modules/date-fns/locale/fil/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/da/build_format_locale/index.js","../../../node_modules/date-fns/locale/da/index.js","../../../node_modules/date-fns/locale/da/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/is/build_format_locale/index.js","../../../node_modules/date-fns/locale/is/index.js","../../../node_modules/date-fns/locale/is/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/fi/build_format_locale/index.js","../../../node_modules/date-fns/locale/fi/index.js","../../../node_modules/date-fns/locale/fi/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/th/build_format_locale/index.js","../../../node_modules/date-fns/locale/th/index.js","../../../node_modules/date-fns/locale/th/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/hr/build_format_locale/index.js","../../../node_modules/date-fns/locale/hr/index.js","../../../node_modules/date-fns/locale/hr/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/ar/build_format_locale/index.js","../../../node_modules/date-fns/locale/ar/index.js","../../../node_modules/date-fns/locale/ar/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/bg/build_format_locale/index.js","../../../node_modules/date-fns/locale/bg/index.js","../../../node_modules/date-fns/locale/bg/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/cs/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/cs/build_format_locale/index.js","../../../node_modules/date-fns/locale/cs/index.js","../../../node_modules/date-fns/locale/mk/build_format_locale/index.js","../../../node_modules/date-fns/locale/mk/index.js","../../../node_modules/date-fns/locale/mk/build_distance_in_words_locale/index.js","../../../node_modules/date-fns/locale/ro/build_format_locale/index.js","../../../node_modules/date-fns/locale/ro/index.js","../../../node_modules/date-fns/locale/ro/build_distance_in_words_locale/index.js","~/ng-datefns-pipes-all-locales/src/app/date-pipes/providers/locale-manager/locale-map.ts","~/ng-datefns-pipes-all-locales/src/app/date-pipes/providers/locale-manager/locale-manager.ts","~/ng-datefns-pipes-all-locales/src/app/date-pipes/date/date.ts","../../../node_modules/date-fns/max/index.js","~/ng-datefns-pipes-all-locales/src/app/date-pipes/max-date/max-date.ts","../../../node_modules/date-fns/min/index.js","~/ng-datefns-pipes-all-locales/src/app/date-pipes/min-date/min-date.ts","../../../node_modules/date-fns/compare_desc/index.js","../../../node_modules/date-fns/difference_in_milliseconds/index.js","../../../node_modules/date-fns/difference_in_seconds/index.js","../../../node_modules/date-fns/difference_in_calendar_months/index.js","../../../node_modules/date-fns/compare_asc/index.js","../../../node_modules/date-fns/difference_in_months/index.js","../../../node_modules/date-fns/distance_in_words/index.js","~/ng-datefns-pipes-all-locales/src/app/date-pipes/distance-between-dates/distance-between-dates.ts","../../../node_modules/date-fns/distance_in_words_to_now/index.js","~/ng-datefns-pipes-all-locales/src/app/date-pipes/time-ago-pipe/time-ago-pipe.ts","~/ng-datefns-pipes-all-locales/src/app/date-pipes/date-pipes.module.ts"],"sourcesContent":["/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone)\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = new Date(timestamp + time).getTimezoneOffset()\n      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset()\n    }\n\n    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","import { Injectable, InjectionToken, Inject } from '@angular/core';\n\n// DatePipe Manager by Aaron Sterling\n// injection token\nexport interface AgoPipeOptions {\n    refreshRate?: number;\n    prefix?: string;\n    suffix?: string;\n    includeSeconds?: boolean;\n}\nexport interface DatePipeConfiguration {\n    defaultDateFormat?: string;\n    dateDistanceIncludesSeconds?: boolean;\n    agoPipeOptions?: AgoPipeOptions;\n}\nexport const /** @type {?} */ DATE_PIPE_CONFIGURATION_TOKEN = new InjectionToken<DatePipeConfiguration>('date pipe configuration');\n\n// default constants\n\nconst /** @type {?} */ INITIAL_DEFAULT_DATE_FORMAT = 'MMMM Do, YYYY';\nconst /** @type {?} */ DEFAULT_DATE_DISTANCE_INCLUDES_SECONDS = false;\nconst /** @type {?} */ DEFAULT_AGO_PIPE_OPTIONS: AgoPipeOptions = {\n    refreshRate: 15000,\n    prefix: '',\n    suffix: ' ago',\n    includeSeconds: false\n};\nexport class DatePipeManager {\nprivate dateFormat: string;\nprivate formatToRevertTo: string;\nprivate includeSeconds = DEFAULT_DATE_DISTANCE_INCLUDES_SECONDS;\nprivate agoPipeOptions = Object.assign({}, DEFAULT_AGO_PIPE_OPTIONS);\nprivate optionsToRevertTo: AgoPipeOptions;\n/**\n * @param {?} userProvidedConfig\n */\nconstructor( userProvidedConfig: DatePipeConfiguration) {\n        // set default date string\n        if (userProvidedConfig && userProvidedConfig.defaultDateFormat) {\n            this.initializeDefaultDateFormat(userProvidedConfig.defaultDateFormat);\n        } else {\n            this.initializeDefaultDateFormat(INITIAL_DEFAULT_DATE_FORMAT);\n        }\n        // set default whether distance includes seconds\n        if (userProvidedConfig && userProvidedConfig.dateDistanceIncludesSeconds\n                               && userProvidedConfig.dateDistanceIncludesSeconds === true) {\n            this.includeSeconds = userProvidedConfig.dateDistanceIncludesSeconds;\n        } else if (userProvidedConfig && typeof userProvidedConfig.dateDistanceIncludesSeconds === 'boolean'\n                                      && userProvidedConfig.dateDistanceIncludesSeconds === false) {\n            this.includeSeconds = false;\n        }\n        // set ago pipe defaults\n        if (userProvidedConfig && userProvidedConfig.agoPipeOptions) {\n            this.agoPipeOptions = Object.assign({}, this.agoPipeOptions, userProvidedConfig.agoPipeOptions);\n            this.optionsToRevertTo = Object.assign({}, this.agoPipeOptions);\n        }\n    }\n/**\n * @param {?} defaultFormat\n * @return {?}\n */\nprivate initializeDefaultDateFormat(defaultFormat: string) {\n        this.setDefaultFormat(defaultFormat);\n        this.formatToRevertTo = defaultFormat;\n    }\n/**\n * @param {?=} overrideFormat\n * @return {?}\n */\ngetDefaultFormat(overrideFormat?: string): string {\n        if (overrideFormat) {\n            return overrideFormat;\n        } else {\n            return this.dateFormat;\n        }\n    }\n/**\n * @param {?} newFormat\n * @return {?}\n */\nsetDefaultFormat(newFormat: string) {\n        this.dateFormat = newFormat;\n    }\n/**\n * @return {?}\n */\nresetDefaultFormat() {\n        this.dateFormat = this.formatToRevertTo;\n    }\n/**\n * @return {?}\n */\nincludeSecondsInDistance() {\n        this.includeSeconds = true;\n    }\n/**\n * @return {?}\n */\ndoNotIncludeSecondsInDistance() {\n        this.includeSeconds = false;\n    }\n/**\n * @return {?}\n */\nsecondsIncludedInDistance(): boolean {\n        return this.includeSeconds;\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nsetAgoPipeOptions(options: AgoPipeOptions) {\n        this.agoPipeOptions = Object.assign({}, this.agoPipeOptions, options);\n    }\n/**\n * @return {?}\n */\ngetAgoPipeOptions(): AgoPipeOptions {\n        return this.agoPipeOptions;\n    }\n/**\n * @return {?}\n */\nresetAgoPipeOptions() {\n        this.agoPipeOptions = Object.assign({}, this.optionsToRevertTo);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DATE_PIPE_CONFIGURATION_TOKEN, ] }, ]},\n];\n}\n\nfunction DatePipeManager_tsickle_Closure_declarations() {\n/** @type {?} */\nDatePipeManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipeManager.ctorParameters;\n/** @type {?} */\nDatePipeManager.prototype.dateFormat;\n/** @type {?} */\nDatePipeManager.prototype.formatToRevertTo;\n/** @type {?} */\nDatePipeManager.prototype.includeSeconds;\n/** @type {?} */\nDatePipeManager.prototype.agoPipeOptions;\n/** @type {?} */\nDatePipeManager.prototype.optionsToRevertTo;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","function declension (scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one\n  }\n\n  var rem10 = count % 10\n  var rem100 = count % 100\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count)\n\n  // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if ((rem10 >= 2 && rem10 <= 4) && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count)\n\n  // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count)\n  }\n}\n\nfunction buildLocalizeTokenFn (scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count)\n        } else {\n          return 'через ' + declension(scheme.regular, count)\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count)\n        } else {\n          return declension(scheme.regular, count) + ' назад'\n        }\n      }\n    } else {\n      return declension(scheme.regular, count)\n    }\n  }\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: buildLocalizeTokenFn({\n      regular: {\n        one: 'меньше секунды',\n        singularNominative: 'меньше {{count}} секунды',\n        singularGenitive: 'меньше {{count}} секунд',\n        pluralGenitive: 'меньше {{count}} секунд'\n      },\n      future: {\n        one: 'меньше, чем через секунду',\n        singularNominative: 'меньше, чем через {{count}} секунду',\n        singularGenitive: 'меньше, чем через {{count}} секунды',\n        pluralGenitive: 'меньше, чем через {{count}} секунд'\n      }\n    }),\n\n    xSeconds: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} секунда',\n        singularGenitive: '{{count}} секунды',\n        pluralGenitive: '{{count}} секунд'\n      },\n      past: {\n        singularNominative: '{{count}} секунду назад',\n        singularGenitive: '{{count}} секунды назад',\n        pluralGenitive: '{{count}} секунд назад'\n      },\n      future: {\n        singularNominative: 'через {{count}} секунду',\n        singularGenitive: 'через {{count}} секунды',\n        pluralGenitive: 'через {{count}} секунд'\n      }\n    }),\n\n    halfAMinute: function (_, options) {\n      if (options.addSuffix) {\n        if (options.comparison > 0) {\n          return 'через полминуты'\n        } else {\n          return 'полминуты назад'\n        }\n      }\n\n      return 'полминуты'\n    },\n\n    lessThanXMinutes: buildLocalizeTokenFn({\n      regular: {\n        one: 'меньше минуты',\n        singularNominative: 'меньше {{count}} минуты',\n        singularGenitive: 'меньше {{count}} минут',\n        pluralGenitive: 'меньше {{count}} минут'\n      },\n      future: {\n        one: 'меньше, чем через минуту',\n        singularNominative: 'меньше, чем через {{count}} минуту',\n        singularGenitive: 'меньше, чем через {{count}} минуты',\n        pluralGenitive: 'меньше, чем через {{count}} минут'\n      }\n    }),\n\n    xMinutes: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} минута',\n        singularGenitive: '{{count}} минуты',\n        pluralGenitive: '{{count}} минут'\n      },\n      past: {\n        singularNominative: '{{count}} минуту назад',\n        singularGenitive: '{{count}} минуты назад',\n        pluralGenitive: '{{count}} минут назад'\n      },\n      future: {\n        singularNominative: 'через {{count}} минуту',\n        singularGenitive: 'через {{count}} минуты',\n        pluralGenitive: 'через {{count}} минут'\n      }\n    }),\n\n    aboutXHours: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} часа',\n        singularGenitive: 'около {{count}} часов',\n        pluralGenitive: 'около {{count}} часов'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} час',\n        singularGenitive: 'приблизительно через {{count}} часа',\n        pluralGenitive: 'приблизительно через {{count}} часов'\n      }\n    }),\n\n    xHours: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} час',\n        singularGenitive: '{{count}} часа',\n        pluralGenitive: '{{count}} часов'\n      }\n    }),\n\n    xDays: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} день',\n        singularGenitive: '{{count}} дня',\n        pluralGenitive: '{{count}} дней'\n      }\n    }),\n\n    aboutXMonths: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} месяца',\n        singularGenitive: 'около {{count}} месяцев',\n        pluralGenitive: 'около {{count}} месяцев'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} месяц',\n        singularGenitive: 'приблизительно через {{count}} месяца',\n        pluralGenitive: 'приблизительно через {{count}} месяцев'\n      }\n    }),\n\n    xMonths: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} месяц',\n        singularGenitive: '{{count}} месяца',\n        pluralGenitive: '{{count}} месяцев'\n      }\n    }),\n\n    aboutXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} года',\n        singularGenitive: 'около {{count}} лет',\n        pluralGenitive: 'около {{count}} лет'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} год',\n        singularGenitive: 'приблизительно через {{count}} года',\n        pluralGenitive: 'приблизительно через {{count}} лет'\n      }\n    }),\n\n    xYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} год',\n        singularGenitive: '{{count}} года',\n        pluralGenitive: '{{count}} лет'\n      }\n    }),\n\n    overXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'больше {{count}} года',\n        singularGenitive: 'больше {{count}} лет',\n        pluralGenitive: 'больше {{count}} лет'\n      },\n      future: {\n        singularNominative: 'больше, чем через {{count}} год',\n        singularGenitive: 'больше, чем через {{count}} года',\n        pluralGenitive: 'больше, чем через {{count}} лет'\n      }\n    }),\n\n    almostXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'почти {{count}} год',\n        singularGenitive: 'почти {{count}} года',\n        pluralGenitive: 'почти {{count}} лет'\n      },\n      future: {\n        singularNominative: 'почти через {{count}} год',\n        singularGenitive: 'почти через {{count}} года',\n        pluralGenitive: 'почти через {{count}} лет'\n      }\n    })\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n    return distanceInWordsLocale[token](count, options)\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // http://new.gramota.ru/spravka/buro/search-answer?s=242637\n  var monthsShort = ['янв.', 'фев.', 'март', 'апр.', 'май', 'июнь', 'июль', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.']\n  var monthsFull = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']\n  var monthsGenitive = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n  var weekdays2char = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\n  var weekdays3char = ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'суб']\n  var weekdaysFull = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота']\n  var meridiem = ['ночи', 'утра', 'дня', 'вечера']\n\n  var formatters = {\n    // Month: янв., фев., ..., дек.\n    'MMM': function (date) {\n      return monthsShort[date.getMonth()]\n    },\n\n    // Month: январь, февраль, ..., декабрь\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: вс, пн, ..., сб\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: вск, пнд, ..., суб\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: воскресенье, понедельник, ..., суббота\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // Time of day: ночи, утра, дня, вечера\n    'A': function (date) {\n      var hours = date.getHours()\n      if (hours >= 17) {\n        return meridiem[3]\n      } else if (hours >= 12) {\n        return meridiem[2]\n      } else if (hours >= 4) {\n        return meridiem[1]\n      } else {\n        return meridiem[0]\n      }\n    },\n\n    'Do': function (date, formatters) {\n      return formatters.D(date) + '-е'\n    },\n\n    'Wo': function (date, formatters) {\n      return formatters.W(date) + '-я'\n    }\n  }\n\n  formatters.a = formatters.A\n  formatters.aa = formatters.A\n\n  // Generate ordinal version of formatters: M -> Mo, DDD -> DDDo, etc.\n  var ordinalFormatters = ['M', 'DDD', 'd', 'Q']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date) + '-й'\n    }\n  })\n\n  // Generate formatters like 'D MMMM',\n  // where month is in the genitive case: января, февраля, ..., декабря\n  var monthsGenitiveFormatters = ['D', 'Do', 'DD']\n  monthsGenitiveFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + ' MMMM'] = function (date, commonFormatters) {\n      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]\n      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Russian locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aŭg', 'sep', 'okt', 'nov', 'dec']\n  var monthsFull = ['januaro', 'februaro', 'marto', 'aprilo', 'majo', 'junio', 'julio', 'aŭgusto', 'septembro', 'oktobro', 'novembro', 'decembro']\n  var weekdays2char = ['di', 'lu', 'ma', 'me', 'ĵa', 've', 'sa']\n  var weekdays3char = ['dim', 'lun', 'mar', 'mer', 'ĵaŭ', 'ven', 'sab']\n  var weekdaysFull = ['dimanĉo', 'lundo', 'mardo', 'merkredo', 'ĵaŭdo', 'vendredo', 'sabato']\n  var meridiemUppercase = ['A.T.M.', 'P.T.M.']\n  var meridiemLowercase = ['a.t.m.', 'p.t.m.']\n  var meridiemFull = ['antaŭtagmeze', 'posttagmeze']\n\n  var formatters = {\n    // Month: jan, feb, ..., deс\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: januaro, februaro, ..., decembro\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: di, lu, ..., sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: dim, lun, ..., sab\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: dimanĉo, lundo, ..., sabato\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // A.T.M., P.T.M.\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // a.t.m., p.t.m.\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // antaŭtagmeze, posttagmeze\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date) + '-a'\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Esperanto locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'malpli ol sekundo',\n      other: 'malpli ol {{count}} sekundoj'\n    },\n\n    xSeconds: {\n      one: '1 sekundo',\n      other: '{{count}} sekundoj'\n    },\n\n    halfAMinute: 'duonminuto',\n\n    lessThanXMinutes: {\n      one: 'malpli ol minuto',\n      other: 'malpli ol {{count}} minutoj'\n    },\n\n    xMinutes: {\n      one: '1 minuto',\n      other: '{{count}} minutoj'\n    },\n\n    aboutXHours: {\n      one: 'proksimume 1 horo',\n      other: 'proksimume {{count}} horoj'\n    },\n\n    xHours: {\n      one: '1 horo',\n      other: '{{count}} horoj'\n    },\n\n    xDays: {\n      one: '1 tago',\n      other: '{{count}} tagoj'\n    },\n\n    aboutXMonths: {\n      one: 'proksimume 1 monato',\n      other: 'proksimume {{count}} monatoj'\n    },\n\n    xMonths: {\n      one: '1 monato',\n      other: '{{count}} monatoj'\n    },\n\n    aboutXYears: {\n      one: 'proksimume 1 jaro',\n      other: 'proksimume {{count}} jaroj'\n    },\n\n    xYears: {\n      one: '1 jaro',\n      other: '{{count}} jaroj'\n    },\n\n    overXYears: {\n      one: 'pli ol 1 jaro',\n      other: 'pli ol {{count}} jaroj'\n    },\n\n    almostXYears: {\n      one: 'preskaŭ 1 jaro',\n      other: 'preskaŭ {{count}} jaroj'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'post ' + result\n      } else {\n        return 'antaŭ ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n  var monthsFull = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n  var weekdays2char = ['日', '一', '二', '三', '四', '五', '六']\n  var weekdays3char = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n  var weekdaysFull = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n  var meridiemFull = ['上午', '下午']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    }\n  }\n\n  // AM, PM / am, pm / a.m., p.m. all translates to 上午, 下午\n  formatters.a = formatters.aa = formatters.A = function (date) {\n    return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number.toString()\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Chinese Simplified locale.\n * @author Changyu Geng [@KingMario]{@link https://github.com/KingMario}\n * @author Song Shuoyun [@fnlctrl]{@link https://github.com/fnlctrl}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: '不到 1 秒',\n      other: '不到 {{count}} 秒'\n    },\n\n    xSeconds: {\n      one: '1 秒',\n      other: '{{count}} 秒'\n    },\n\n    halfAMinute: '半分钟',\n\n    lessThanXMinutes: {\n      one: '不到 1 分钟',\n      other: '不到 {{count}} 分钟'\n    },\n\n    xMinutes: {\n      one: '1 分钟',\n      other: '{{count}} 分钟'\n    },\n\n    xHours: {\n      one: '1 小时',\n      other: '{{count}} 小时'\n    },\n\n    aboutXHours: {\n      one: '大约 1 小时',\n      other: '大约 {{count}} 小时'\n    },\n\n    xDays: {\n      one: '1 天',\n      other: '{{count}} 天'\n    },\n\n    aboutXMonths: {\n      one: '大约 1 个月',\n      other: '大约 {{count}} 个月'\n    },\n\n    xMonths: {\n      one: '1 个月',\n      other: '{{count}} 个月'\n    },\n\n    aboutXYears: {\n      one: '大约 1 年',\n      other: '大约 {{count}} 年'\n    },\n\n    xYears: {\n      one: '1 年',\n      other: '{{count}} 年'\n    },\n\n    overXYears: {\n      one: '超过 1 年',\n      other: '超过 {{count}} 年'\n    },\n\n    almostXYears: {\n      one: '将近 1 年',\n      other: '将近 {{count}} 年'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return result + '内'\n      } else {\n        return result + '前'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in German, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']\n  var monthsFull = ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember']\n  var weekdays2char = ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa']\n  var weekdays3char = ['Son', 'Mon', 'Die', 'Mit', 'Don', 'Fre', 'Sam']\n  var weekdaysFull = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary German locale.\n * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}\n * @author Asia [@asia-t]{@link https://github.com/asia-t}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      standalone: {\n        one: 'weniger als eine Sekunde',\n        other: 'weniger als {{count}} Sekunden'\n      },\n      withPreposition: {\n        one: 'weniger als einer Sekunde',\n        other: 'weniger als {{count}} Sekunden'\n      }\n    },\n\n    xSeconds: {\n      standalone: {\n        one: 'eine Sekunde',\n        other: '{{count}} Sekunden'\n      },\n      withPreposition: {\n        one: 'einer Sekunde',\n        other: '{{count}} Sekunden'\n      }\n    },\n\n    halfAMinute: {\n      standalone: 'eine halbe Minute',\n      withPreposition: 'einer halben Minute'\n    },\n\n    lessThanXMinutes: {\n      standalone: {\n        one: 'weniger als eine Minute',\n        other: 'weniger als {{count}} Minuten'\n      },\n      withPreposition: {\n        one: 'weniger als einer Minute',\n        other: 'weniger als {{count}} Minuten'\n      }\n    },\n\n    xMinutes: {\n      standalone: {\n        one: 'eine Minute',\n        other: '{{count}} Minuten'\n      },\n      withPreposition: {\n        one: 'einer Minute',\n        other: '{{count}} Minuten'\n      }\n    },\n\n    aboutXHours: {\n      standalone: {\n        one: 'etwa eine Stunde',\n        other: 'etwa {{count}} Stunden'\n      },\n      withPreposition: {\n        one: 'etwa einer Stunde',\n        other: 'etwa {{count}} Stunden'\n      }\n    },\n\n    xHours: {\n      standalone: {\n        one: 'eine Stunde',\n        other: '{{count}} Stunden'\n      },\n      withPreposition: {\n        one: 'einer Stunde',\n        other: '{{count}} Stunden'\n      }\n    },\n\n    xDays: {\n      standalone: {\n        one: 'ein Tag',\n        other: '{{count}} Tage'\n      },\n      withPreposition: {\n        one: 'einem Tag',\n        other: '{{count}} Tagen'\n      }\n\n    },\n\n    aboutXMonths: {\n      standalone: {\n        one: 'etwa ein Monat',\n        other: 'etwa {{count}} Monate'\n      },\n      withPreposition: {\n        one: 'etwa einem Monat',\n        other: 'etwa {{count}} Monaten'\n      }\n    },\n\n    xMonths: {\n      standalone: {\n        one: 'ein Monat',\n        other: '{{count}} Monate'\n      },\n      withPreposition: {\n        one: 'einem Monat',\n        other: '{{count}} Monaten'\n      }\n    },\n\n    aboutXYears: {\n      standalone: {\n        one: 'etwa ein Jahr',\n        other: 'etwa {{count}} Jahre'\n      },\n      withPreposition: {\n        one: 'etwa einem Jahr',\n        other: 'etwa {{count}} Jahren'\n      }\n    },\n\n    xYears: {\n      standalone: {\n        one: 'ein Jahr',\n        other: '{{count}} Jahre'\n      },\n      withPreposition: {\n        one: 'einem Jahr',\n        other: '{{count}} Jahren'\n      }\n    },\n\n    overXYears: {\n      standalone: {\n        one: 'mehr als ein Jahr',\n        other: 'mehr als {{count}} Jahre'\n      },\n      withPreposition: {\n        one: 'mehr als einem Jahr',\n        other: 'mehr als {{count}} Jahren'\n      }\n    },\n\n    almostXYears: {\n      standalone: {\n        one: 'fast ein Jahr',\n        other: 'fast {{count}} Jahre'\n      },\n      withPreposition: {\n        one: 'fast einem Jahr',\n        other: 'fast {{count}} Jahren'\n      }\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var usageGroup = options.addSuffix\n      ? distanceInWordsLocale[token].withPreposition\n      : distanceInWordsLocale[token].standalone\n\n    var result\n    if (typeof usageGroup === 'string') {\n      result = usageGroup\n    } else if (count === 1) {\n      result = usageGroup.one\n    } else {\n      result = usageGroup.other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return 'vor ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n  var monthsFull = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n  var weekdays2char = ['日', '月', '火', '水', '木', '金', '土']\n  var weekdays3char = ['日曜', '月曜', '火曜', '水曜', '木曜', '金曜', '土曜']\n  var weekdaysFull = ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日']\n  var meridiemUppercase = ['午前', '午後']\n  var meridiemLowercase = ['午前', '午後']\n  var meridiemFull = ['午前', '午後']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '日'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Japanese locale.\n * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}\n * @author Yamagishi Kazutoshi [@ykzts]{@link https://github.com/ykzts}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: '1秒以下',\n      other: '{{count}}秒以下'\n    },\n\n    xSeconds: {\n      one: '1秒',\n      other: '{{count}}秒'\n    },\n\n    halfAMinute: '30秒ぐらい',\n\n    lessThanXMinutes: {\n      one: '1分以下',\n      other: '{{count}}分以下'\n    },\n\n    xMinutes: {\n      one: '1分',\n      other: '{{count}}分'\n    },\n\n    aboutXHours: {\n      one: '1時間ぐらい',\n      other: '{{count}}時間ぐらい'\n    },\n\n    xHours: {\n      one: '1時間',\n      other: '{{count}}時間'\n    },\n\n    xDays: {\n      one: '1日',\n      other: '{{count}}日'\n    },\n\n    aboutXMonths: {\n      one: '1ヶ月ぐらい',\n      other: '{{count}}ヶ月ぐらい'\n    },\n\n    xMonths: {\n      one: '1ヶ月',\n      other: '{{count}}ヶ月'\n    },\n\n    aboutXYears: {\n      one: '1年ぐらい',\n      other: '{{count}}年ぐらい'\n    },\n\n    xYears: {\n      one: '1年',\n      other: '{{count}}年'\n    },\n\n    overXYears: {\n      one: '1年以上',\n      other: '{{count}}年以上'\n    },\n\n    almostXYears: {\n      one: '1年以下',\n      other: '{{count}}年以下'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return result + '後'\n      } else {\n        return result + '前'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic']\n  var monthsFull = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre']\n  var weekdays2char = ['do', 'lu', 'ma', 'mi', 'ju', 'vi', 'sa']\n  var weekdays3char = ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb']\n  var weekdaysFull = ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + 'º'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Spanish locale.\n * @author Juan Angosto [@juanangosto]{@link https://github.com/juanangosto}\n * @author Guillermo Grau [@guigrpa]{@link https://github.com/guigrpa}\n * @author Fernando Agüero [@fjaguero]{@link https://github.com/fjaguero}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'menos de un segundo',\n      other: 'menos de {{count}} segundos'\n    },\n\n    xSeconds: {\n      one: '1 segundo',\n      other: '{{count}} segundos'\n    },\n\n    halfAMinute: 'medio minuto',\n\n    lessThanXMinutes: {\n      one: 'menos de un minuto',\n      other: 'menos de {{count}} minutos'\n    },\n\n    xMinutes: {\n      one: '1 minuto',\n      other: '{{count}} minutos'\n    },\n\n    aboutXHours: {\n      one: 'alrededor de 1 hora',\n      other: 'alrededor de {{count}} horas'\n    },\n\n    xHours: {\n      one: '1 hora',\n      other: '{{count}} horas'\n    },\n\n    xDays: {\n      one: '1 día',\n      other: '{{count}} días'\n    },\n\n    aboutXMonths: {\n      one: 'alrededor de 1 mes',\n      other: 'alrededor de {{count}} meses'\n    },\n\n    xMonths: {\n      one: '1 mes',\n      other: '{{count}} meses'\n    },\n\n    aboutXYears: {\n      one: 'alrededor de 1 año',\n      other: 'alrededor de {{count}} años'\n    },\n\n    xYears: {\n      one: '1 año',\n      other: '{{count}} años'\n    },\n\n    overXYears: {\n      one: 'más de 1 año',\n      other: 'más de {{count}} años'\n    },\n\n    almostXYears: {\n      one: 'casi 1 año',\n      other: 'casi {{count}} años'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'en ' + result\n      } else {\n        return 'hace ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']\n  var monthsFull = ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december']\n  var weekdays2char = ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za']\n  var weekdays3char = ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat']\n  var weekdaysFull = ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + 'e'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Dutch locale.\n * @author Jorik Tangelder [@jtangelder]{@link https://github.com/jtangelder}\n * @author Ruben Stolk [@rubenstolk]{@link https://github.com/rubenstolk}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'minder dan een seconde',\n      other: 'minder dan {{count}} seconden'\n    },\n\n    xSeconds: {\n      one: '1 seconde',\n      other: '{{count}} seconden'\n    },\n\n    halfAMinute: 'een halve minuut',\n\n    lessThanXMinutes: {\n      one: 'minder dan een minuut',\n      other: 'minder dan {{count}} minuten'\n    },\n\n    xMinutes: {\n      one: 'een minuut',\n      other: '{{count}} minuten'\n    },\n\n    aboutXHours: {\n      one: 'ongeveer 1 uur',\n      other: 'ongeveer {{count}} uur'\n    },\n\n    xHours: {\n      one: '1 uur',\n      other: '{{count}} uur'\n    },\n\n    xDays: {\n      one: '1 dag',\n      other: '{{count}} dagen'\n    },\n\n    aboutXMonths: {\n      one: 'ongeveer 1 maand',\n      other: 'ongeveer {{count}} maanden'\n    },\n\n    xMonths: {\n      one: '1 maand',\n      other: '{{count}} maanden'\n    },\n\n    aboutXYears: {\n      one: 'ongeveer 1 jaar',\n      other: 'ongeveer {{count}} jaar'\n    },\n\n    xYears: {\n      one: '1 jaar',\n      other: '{{count}} jaar'\n    },\n\n    overXYears: {\n      one: 'meer dan 1 jaar',\n      other: 'meer dan {{count}} jaar'\n    },\n\n    almostXYears: {\n      one: 'bijna 1 jaar',\n      other: 'bijna {{count}} jaar'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'over ' + result\n      } else {\n        return result + ' geleden'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan.', 'feb.', 'mars', 'april', 'mai', 'juni', 'juli', 'aug.', 'sep.', 'okt.', 'nov.', 'des.']\n  var monthsFull = ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember']\n  var weekdays2char = ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø']\n  var weekdays3char = ['sø.', 'ma.', 'ti.', 'on.', 'to.', 'fr.', 'lø.']\n  var weekdaysFull = ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Norwegian Bokmål locale.\n * @author Hans-Kristian Koren [@Hanse]{@link https://github.com/Hanse}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'mindre enn ett sekund',\n      other: 'mindre enn {{count}} sekunder'\n    },\n\n    xSeconds: {\n      one: 'ett sekund',\n      other: '{{count}} sekunder'\n    },\n\n    halfAMinute: 'et halvt minutt',\n\n    lessThanXMinutes: {\n      one: 'mindre enn ett minutt',\n      other: 'mindre enn {{count}} minutter'\n    },\n\n    xMinutes: {\n      one: 'ett minutt',\n      other: '{{count}} minutter'\n    },\n\n    aboutXHours: {\n      one: 'rundt en time',\n      other: 'rundt {{count}} timer'\n    },\n\n    xHours: {\n      one: 'en time',\n      other: '{{count}} timer'\n    },\n\n    xDays: {\n      one: 'en dag',\n      other: '{{count}} dager'\n    },\n\n    aboutXMonths: {\n      one: 'rundt en måned',\n      other: 'rundt {{count}} måneder'\n    },\n\n    xMonths: {\n      one: 'en måned',\n      other: '{{count}} måneder'\n    },\n\n    aboutXYears: {\n      one: 'rundt ett år',\n      other: 'rundt {{count}} år'\n    },\n\n    xYears: {\n      one: 'ett år',\n      other: '{{count}} år'\n    },\n\n    overXYears: {\n      one: 'over ett år',\n      other: 'over {{count}} år'\n    },\n\n    almostXYears: {\n      one: 'nesten ett år',\n      other: 'nesten {{count}} år'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'om ' + result\n      } else {\n        return result + ' siden'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['gen', 'feb', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'oct', 'nov', 'des']\n  var monthsFull = ['gener', 'febrer', 'març', 'abril', 'maig', 'juny', 'juliol', 'agost', 'setembre', 'octobre', 'novembre', 'desembre']\n  var weekdays2char = ['dg', 'dl', 'dt', 'dc', 'dj', 'dv', 'ds']\n  var weekdays3char = ['dge', 'dls', 'dts', 'dcs', 'djs', 'dvs', 'dss']\n  var weekdaysFull = ['diumenge', 'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres', 'dissabte']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  switch (number) {\n    case 1:\n      return '1r'\n    case 2:\n      return '2n'\n    case 3:\n      return '3r'\n    case 4:\n      return '4t'\n    default:\n      return number + 'è'\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Catalan locale.\n * @author Guillermo Grau [@guigrpa]{@link https://github.com/guigrpa}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: \"menys d'un segon\",\n      other: 'menys de {{count}} segons'\n    },\n\n    xSeconds: {\n      one: '1 segon',\n      other: '{{count}} segons'\n    },\n\n    halfAMinute: 'mig minut',\n\n    lessThanXMinutes: {\n      one: \"menys d'un minut\",\n      other: 'menys de {{count}} minuts'\n    },\n\n    xMinutes: {\n      one: '1 minut',\n      other: '{{count}} minuts'\n    },\n\n    aboutXHours: {\n      one: 'aproximadament una hora',\n      other: 'aproximadament {{count}} hores'\n    },\n\n    xHours: {\n      one: '1 hora',\n      other: '{{count}} hores'\n    },\n\n    xDays: {\n      one: '1 dia',\n      other: '{{count}} dies'\n    },\n\n    aboutXMonths: {\n      one: 'aproximadament un mes',\n      other: 'aproximadament {{count}} mesos'\n    },\n\n    xMonths: {\n      one: '1 mes',\n      other: '{{count}} mesos'\n    },\n\n    aboutXYears: {\n      one: 'aproximadament un any',\n      other: 'aproximadament {{count}} anys'\n    },\n\n    xYears: {\n      one: '1 any',\n      other: '{{count}} anys'\n    },\n\n    overXYears: {\n      one: \"més d'un any\",\n      other: 'més de {{count}} anys'\n    },\n\n    almostXYears: {\n      one: 'gairebé un any',\n      other: 'gairebé {{count}} anys'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'en ' + result\n      } else {\n        return 'fa ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in Indonesian, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des']\n  var monthsFull = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']\n  var weekdays2char = ['Mi', 'Sn', 'Sl', 'Ra', 'Ka', 'Ju', 'Sa']\n  var weekdays3char = ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab']\n  var weekdaysFull = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  switch (number) {\n    case 1:\n      return 'pertama'\n    case 2:\n      return 'kedua'\n    case 3:\n      return 'ketiga'\n    default:\n      return 'ke-' + number\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Indonesian locale.\n * @author Rahmat Budiharso [@rbudiharso]{@link https://github.com/rbudiharso}\n * @author Benget Nata [@bentinata]{@link https://github.com/bentinata}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'kurang dari 1 detik',\n      other: 'kurang dari {{count}} detik'\n    },\n\n    xSeconds: {\n      one: '1 detik',\n      other: '{{count}} detik'\n    },\n\n    halfAMinute: 'setengah menit',\n\n    lessThanXMinutes: {\n      one: 'kurang dari 1 menit',\n      other: 'kurang dari {{count}} menit'\n    },\n\n    xMinutes: {\n      one: '1 menit',\n      other: '{{count}} menit'\n    },\n\n    aboutXHours: {\n      one: 'sekitar 1 jam',\n      other: 'sekitar {{count}} jam'\n    },\n\n    xHours: {\n      one: '1 jam',\n      other: '{{count}} jam'\n    },\n\n    xDays: {\n      one: '1 hari',\n      other: '{{count}} hari'\n    },\n\n    aboutXMonths: {\n      one: 'sekitar 1 bulan',\n      other: 'sekitar {{count}} bulan'\n    },\n\n    xMonths: {\n      one: '1 bulan',\n      other: '{{count}} bulan'\n    },\n\n    aboutXYears: {\n      one: 'sekitar 1 tahun',\n      other: 'sekitar {{count}} tahun'\n    },\n\n    xYears: {\n      one: '1 tahun',\n      other: '{{count}} tahun'\n    },\n\n    overXYears: {\n      one: 'lebih dari 1 tahun',\n      other: 'lebih dari {{count}} tahun'\n    },\n\n    almostXYears: {\n      one: 'hampir 1 tahun',\n      other: 'hampir {{count}} tahun'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'dalam waktu ' + result\n      } else {\n        return result + ' yang lalu'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic']\n  var monthsFull = ['gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre']\n  var weekdays2char = ['do', 'lu', 'ma', 'me', 'gi', 've', 'sa']\n  var weekdays3char = ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab']\n  var weekdaysFull = ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + 'º'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Italian locale.\n * @author Alberto Restifo [@albertorestifo]{@link https://github.com/albertorestifo}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'meno di un secondo',\n      other: 'meno di {{count}} secondi'\n    },\n\n    xSeconds: {\n      one: 'un secondo',\n      other: '{{count}} secondi'\n    },\n\n    halfAMinute: 'alcuni secondi',\n\n    lessThanXMinutes: {\n      one: 'meno di un minuto',\n      other: 'meno di {{count}} minuti'\n    },\n\n    xMinutes: {\n      one: 'un minuto',\n      other: '{{count}} minuti'\n    },\n\n    aboutXHours: {\n      one: 'circa un\\'ora',\n      other: 'circa {{count}} ore'\n    },\n\n    xHours: {\n      one: 'un\\'ora',\n      other: '{{count}} ore'\n    },\n\n    xDays: {\n      one: 'un giorno',\n      other: '{{count}} giorni'\n    },\n\n    aboutXMonths: {\n      one: 'circa un mese',\n      other: 'circa {{count}} mesi'\n    },\n\n    xMonths: {\n      one: 'un mese',\n      other: '{{count}} mesi'\n    },\n\n    aboutXYears: {\n      one: 'circa un anno',\n      other: 'circa {{count}} anni'\n    },\n\n    xYears: {\n      one: 'un anno',\n      other: '{{count}} anni'\n    },\n\n    overXYears: {\n      one: 'più di un anno',\n      other: 'più di {{count}} anni'\n    },\n\n    almostXYears: {\n      one: 'quasi un anno',\n      other: 'quasi {{count}} anni'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'tra ' + result\n      } else {\n        return result + ' fa'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","function declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  var rem100 = count % 100\n\n  // ends with 11-20\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other\n  }\n\n  var rem10 = rem100 % 10\n\n  // ends with 2, 3, 4\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour\n  }\n\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  time = time || 'regular'\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: {\n        regular: 'mniej niż sekunda',\n        past: 'mniej niż sekundę',\n        future: 'mniej niż sekundę'\n      },\n      twoFour: 'mniej niż {{count}} sekundy',\n      other: 'mniej niż {{count}} sekund'\n    },\n\n    xSeconds: {\n      one: {\n        regular: 'sekunda',\n        past: 'sekundę',\n        future: 'sekundę'\n      },\n      twoFour: '{{count}} sekundy',\n      other: '{{count}} sekund'\n    },\n\n    halfAMinute: {\n      one: 'pół minuty',\n      twoFour: 'pół minuty',\n      other: 'pół minuty'\n    },\n\n    lessThanXMinutes: {\n      one: {\n        regular: 'mniej niż minuta',\n        past: 'mniej niż minutę',\n        future: 'mniej niż minutę'\n      },\n      twoFour: 'mniej niż {{count}} minuty',\n      other: 'mniej niż {{count}} minut'\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutę',\n        future: 'minutę'\n      },\n      twoFour: '{{count}} minuty',\n      other: '{{count}} minut'\n    },\n\n    aboutXHours: {\n      one: {\n        regular: 'około godzina',\n        past: 'około godziny',\n        future: 'około godzinę'\n      },\n      twoFour: 'około {{count}} godziny',\n      other: 'około {{count}} godzin'\n    },\n\n    xHours: {\n      one: {\n        regular: 'godzina',\n        past: 'godzinę',\n        future: 'godzinę'\n      },\n      twoFour: '{{count}} godziny',\n      other: '{{count}} godzin'\n    },\n\n    xDays: {\n      one: {\n        regular: 'dzień',\n        past: 'dzień',\n        future: '1 dzień'\n      },\n      twoFour: '{{count}} dni',\n      other: '{{count}} dni'\n    },\n\n    aboutXMonths: {\n      one: 'około miesiąc',\n      twoFour: 'około {{count}} miesiące',\n      other: 'około {{count}} miesięcy'\n    },\n\n    xMonths: {\n      one: 'miesiąc',\n      twoFour: '{{count}} miesiące',\n      other: '{{count}} miesięcy'\n    },\n\n    aboutXYears: {\n      one: 'około rok',\n      twoFour: 'około {{count}} lata',\n      other: 'około {{count}} lat'\n    },\n\n    xYears: {\n      one: 'rok',\n      twoFour: '{{count}} lata',\n      other: '{{count}} lat'\n    },\n\n    overXYears: {\n      one: 'ponad rok',\n      twoFour: 'ponad {{count}} lata',\n      other: 'ponad {{count}} lat'\n    },\n\n    almostXYears: {\n      one: 'prawie rok',\n      twoFour: 'prawie {{count}} lata',\n      other: 'prawie {{count}} lat'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var scheme = distanceInWordsLocale[token]\n    if (!options.addSuffix) {\n      return declension(scheme, count)\n    }\n\n    if (options.comparison > 0) {\n      return 'za ' + declension(scheme, count, 'future')\n    } else {\n      return declension(scheme, count, 'past') + ' temu'\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['sty', 'lut', 'mar', 'kwi', 'maj', 'cze', 'lip', 'sie', 'wrz', 'paź', 'lis', 'gru']\n  var monthsFull = ['styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec', 'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień']\n  var weekdays2char = ['nd', 'pn', 'wt', 'śr', 'cz', 'pt', 'sb']\n  var weekdays3char = ['niedz.', 'pon.', 'wt.', 'śr.', 'czw.', 'piąt.', 'sob.']\n  var weekdaysFull = ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota']\n  var meridiem = ['w nocy', 'rano', 'po południu', 'wieczorem']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // Time of day\n    'A': function (date) {\n      var hours = date.getHours()\n      if (hours >= 17) {\n        return meridiem[3]\n      } else if (hours >= 12) {\n        return meridiem[2]\n      } else if (hours >= 4) {\n        return meridiem[1]\n      } else {\n        return meridiem[0]\n      }\n    }\n  }\n\n  formatters.a = formatters.A\n  formatters.aa = formatters.A\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      // Well, it should be just a number without any suffix\n      return formatters[formatterToken](date).toString()\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Polish locale.\n * @author Mateusz Derks [@ertrzyiks]{@link https://github.com/ertrzyiks}\n * @author Just RAG [@justrag]{@link https://github.com/justrag}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']\n  var monthsFull = ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro']\n  var weekdays2char = ['do', 'se', 'te', 'qa', 'qi', 'se', 'sa']\n  var weekdays3char = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb']\n  var weekdaysFull = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + 'º'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Portuguese locale.\n * @author Dário Freire [@dfreire]{@link https://github.com/dfreire}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'menos de um segundo',\n      other: 'menos de {{count}} segundos'\n    },\n\n    xSeconds: {\n      one: '1 segundo',\n      other: '{{count}} segundos'\n    },\n\n    halfAMinute: 'meio minuto',\n\n    lessThanXMinutes: {\n      one: 'menos de um minuto',\n      other: 'menos de {{count}} minutos'\n    },\n\n    xMinutes: {\n      one: '1 minuto',\n      other: '{{count}} minutos'\n    },\n\n    aboutXHours: {\n      one: 'aproximadamente 1 hora',\n      other: 'aproximadamente {{count}} horas'\n    },\n\n    xHours: {\n      one: '1 hora',\n      other: '{{count}} horas'\n    },\n\n    xDays: {\n      one: '1 dia',\n      other: '{{count}} dias'\n    },\n\n    aboutXMonths: {\n      one: 'aproximadamente 1 mês',\n      other: 'aproximadamente {{count}} meses'\n    },\n\n    xMonths: {\n      one: '1 mês',\n      other: '{{count}} meses'\n    },\n\n    aboutXYears: {\n      one: 'aproximadamente 1 ano',\n      other: 'aproximadamente {{count}} anos'\n    },\n\n    xYears: {\n      one: '1 ano',\n      other: '{{count}} anos'\n    },\n\n    overXYears: {\n      one: 'mais de 1 ano',\n      other: 'mais de {{count}} anos'\n    },\n\n    almostXYears: {\n      one: 'quase 1 ano',\n      other: 'quase {{count}} anos'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'daqui a ' + result\n      } else {\n        return 'há ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']\n  var monthsFull = ['januari', 'februari', 'mars', 'april', 'maj', 'juni', 'juli', 'augusti', 'september', 'oktober', 'november', 'december']\n  var weekdays2char = ['sö', 'må', 'ti', 'on', 'to', 'fr', 'lö']\n  var weekdays3char = ['sön', 'mån', 'tis', 'ons', 'tor', 'fre', 'lör']\n  var weekdaysFull = ['söndag', 'måndag', 'tisdag', 'onsdag', 'torsdag', 'fredag', 'lördag']\n  var meridiemFull = ['f.m.', 'e.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  formatters.A = formatters.aa\n  formatters.a = formatters.aa\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n      case 2:\n        return number + ':a'\n    }\n  }\n  return number + ':e'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Swedish locale.\n * @author Johannes Ulén [@ejulen]{@link https://github.com/ejulen}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      singular: 'mindre än en sekund',\n      plural: 'mindre än {{count}} sekunder'\n    },\n\n    xSeconds: {\n      singular: 'en sekund',\n      plural: '{{count}} sekunder'\n    },\n\n    halfAMinute: 'en halv minut',\n\n    lessThanXMinutes: {\n      singular: 'mindre än en minut',\n      plural: 'mindre än {{count}} minuter'\n    },\n\n    xMinutes: {\n      singular: 'en minut',\n      plural: '{{count}} minuter'\n    },\n\n    aboutXHours: {\n      singular: 'ungefär en timme',\n      plural: 'ungefär {{count}} timmar'\n    },\n\n    xHours: {\n      singular: 'en timme',\n      plural: '{{count}} timmar'\n    },\n\n    xDays: {\n      singular: 'en dag',\n      plural: '{{count}} dagar'\n    },\n\n    aboutXMonths: {\n      singular: 'ungefär en månad',\n      plural: 'ungefär {{count}} månader'\n    },\n\n    xMonths: {\n      singular: 'en månad',\n      plural: '{{count}} månader'\n    },\n\n    aboutXYears: {\n      singular: 'ungefär ett år',\n      plural: 'ungefär {{count}} år'\n    },\n\n    xYears: {\n      singular: 'ett år',\n      plural: '{{count}} år'\n    },\n\n    overXYears: {\n      singular: 'över ett år',\n      plural: 'över {{count}} år'\n    },\n\n    almostXYears: {\n      singular: 'nästan ett år',\n      plural: 'nästan {{count}} år'\n    }\n  }\n\n  var wordMapping = [\n    'noll',\n    'en',\n    'två',\n    'tre',\n    'fyra',\n    'fem',\n    'sex',\n    'sju',\n    'åtta',\n    'nio',\n    'tio',\n    'elva',\n    'tolv'\n  ]\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var translation = distanceInWordsLocale[token]\n    var result\n    if (typeof translation === 'string') {\n      result = translation\n    } else if (count === 0 || count > 1) {\n      result = translation.plural.replace('{{count}}', count < 13 ? wordMapping[count] : count)\n    } else {\n      result = translation.singular\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'om ' + result\n      } else {\n        return result + ' sedan'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juill.', 'août', 'sept.', 'oct.', 'nov.', 'déc.']\n  var monthsFull = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre']\n  var weekdays2char = ['di', 'lu', 'ma', 'me', 'je', 've', 'sa']\n  var weekdays3char = ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.']\n  var weekdaysFull = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['du matin', 'de l’après-midi', 'du soir']\n\n  var formatters = {\n    // Month: Jan, Feb, …, Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, …, December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, …, Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, …, Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, …, Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      var hours = date.getHours()\n\n      if (hours <= 12) {\n        return meridiemFull[0]\n      }\n\n      if (hours <= 16) {\n        return meridiemFull[1]\n      }\n\n      return meridiemFull[2]\n    },\n\n    // ISO week, ordinal version: 1st, 2nd, …, 53rd\n    // NOTE: Week has feminine grammatical gender in French: semaine\n    'Wo': function (date, formatters) {\n      return feminineOrdinal(formatters.W(date))\n    }\n  }\n\n  // Generate ordinal version of formatters: M → Mo, D → Do, etc.\n  // NOTE: For words with masculine grammatical gender in French: mois, jour, trimestre\n  var formatterTokens = ['M', 'D', 'DDD', 'd', 'Q']\n  formatterTokens.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return masculineOrdinal(formatters[formatterToken](date))\n    }\n  })\n\n  // Special case for day of month ordinals in long date format context:\n  // 1er mars, 2 mars, 3 mars, …\n  // See https://github.com/date-fns/date-fns/issues/437\n  //\n  // NOTE: The below implementation works because parsing of tokens inside a\n  // format string is done by a greedy regular expression, i.e. longer tokens\n  // have priority. E.g. formatter for \"Do MMMM\" has priority over individual\n  // formatters for \"Do\" and \"MMMM\".\n  var monthsTokens = ['MMM', 'MMMM']\n  monthsTokens.forEach(function (monthToken) {\n    formatters['Do ' + monthToken] = function (date, commonFormatters) {\n      var dayOfMonthToken = date.getDate() === 1\n        ? 'Do'\n        : 'D'\n      var dayOfMonthFormatter = formatters[dayOfMonthToken] || commonFormatters[dayOfMonthToken]\n\n      return dayOfMonthFormatter(date, commonFormatters) + ' ' + formatters[monthToken](date)\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction masculineOrdinal (number) {\n  if (number === 1) {\n    return '1er'\n  }\n\n  return number + 'e'\n}\n\nfunction feminineOrdinal (number) {\n  if (number === 1) {\n    return '1re'\n  }\n\n  return number + 'e'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary French locale.\n * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}\n * @author François B [@fbonzon]{@link https://github.com/fbonzon}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'moins d’une seconde',\n      other: 'moins de {{count}} secondes'\n    },\n\n    xSeconds: {\n      one: '1 seconde',\n      other: '{{count}} secondes'\n    },\n\n    halfAMinute: '30 secondes',\n\n    lessThanXMinutes: {\n      one: 'moins d’une minute',\n      other: 'moins de {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'environ 1 heure',\n      other: 'environ {{count}} heures'\n    },\n\n    xHours: {\n      one: '1 heure',\n      other: '{{count}} heures'\n    },\n\n    xDays: {\n      one: '1 jour',\n      other: '{{count}} jours'\n    },\n\n    aboutXMonths: {\n      one: 'environ 1 mois',\n      other: 'environ {{count}} mois'\n    },\n\n    xMonths: {\n      one: '1 mois',\n      other: '{{count}} mois'\n    },\n\n    aboutXYears: {\n      one: 'environ 1 an',\n      other: 'environ {{count}} ans'\n    },\n\n    xYears: {\n      one: '1 an',\n      other: '{{count}} ans'\n    },\n\n    overXYears: {\n      one: 'plus d’un an',\n      other: 'plus de {{count}} ans'\n    },\n\n    almostXYears: {\n      one: 'presqu’un an',\n      other: 'presque {{count}} ans'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'dans ' + result\n      } else {\n        return 'il y a ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in Turkish, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara']\n  var monthsFull = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık']\n  var weekdays2char = ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct']\n  var weekdays3char = ['Paz', 'Pts', 'Sal', 'Çar', 'Per', 'Cum', 'Cts']\n  var weekdaysFull = ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi']\n  var meridiemUppercase = ['ÖÖ', 'ÖS']\n  var meridiemLowercase = ['öö', 'ös']\n  var meridiemFull = ['ö.ö.', 'ö.s.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var suffixes = {\n    1: '\\'inci',\n    2: '\\'inci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    5: '\\'inci',\n    6: '\\'ıncı',\n    7: '\\'inci',\n    8: '\\'inci',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    20: '\\'inci',\n    30: '\\'uncu',\n    50: '\\'inci',\n    60: '\\'ıncı',\n    70: '\\'inci',\n    80: '\\'inci',\n    90: '\\'ıncı',\n    100: '\\'üncü'\n  }\n\n  if (number === 0) {\n    return '0\\'ıncı'\n  }\n\n  var x = number % 10\n  var y = number % 100 - x\n  var z = number >= 100 ? 100 : null\n\n  return number + (suffixes[x] || suffixes[y] || suffixes[z])\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Turkish locale.\n * @author Alpcan Aydın [@alpcanaydin]{@link https://github.com/alpcanaydin}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'bir saniyeden az',\n      other: '{{count}} saniyeden az'\n    },\n\n    xSeconds: {\n      one: '1 saniye',\n      other: '{{count}} saniye'\n    },\n\n    halfAMinute: 'yarım dakika',\n\n    lessThanXMinutes: {\n      one: 'bir dakikadan az',\n      other: '{{count}} dakikadan az'\n    },\n\n    xMinutes: {\n      one: '1 dakika',\n      other: '{{count}} dakika'\n    },\n\n    aboutXHours: {\n      one: 'yaklaşık 1 saat',\n      other: 'yaklaşık {{count}} saat'\n    },\n\n    xHours: {\n      one: '1 saat',\n      other: '{{count}} saat'\n    },\n\n    xDays: {\n      one: '1 gün',\n      other: '{{count}} gün'\n    },\n\n    aboutXMonths: {\n      one: 'yaklaşık 1 ay',\n      other: 'yaklaşık {{count}} ay'\n    },\n\n    xMonths: {\n      one: '1 ay',\n      other: '{{count}} ay'\n    },\n\n    aboutXYears: {\n      one: 'yaklaşık 1 yıl',\n      other: 'yaklaşık {{count}} yıl'\n    },\n\n    xYears: {\n      one: '1 yıl',\n      other: '{{count}} yıl'\n    },\n\n    overXYears: {\n      one: '1 yıldan fazla',\n      other: '{{count}} yıldan fazla'\n    },\n\n    almostXYears: {\n      one: 'neredeyse 1 yıl',\n      other: 'neredeyse {{count}} yıl'\n    }\n  }\n\n  var extraWordTokens = [\n    'lessThanXSeconds',\n    'lessThanXMinutes',\n    'overXYears'\n  ]\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      var extraWord = ''\n      if (extraWordTokens.indexOf(token) > -1) {\n        extraWord = ' bir süre'\n      }\n\n      if (options.comparison > 0) {\n        return result + extraWord + ' içinde'\n      } else {\n        return result + extraWord + ' önce'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']\n  var monthsFull = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']\n  var weekdays2char = ['일', '월', '화', '수', '목', '금', '토']\n  var weekdays3char = ['일', '월', '화', '수', '목', '금', '토']\n  var weekdaysFull = ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일']\n  var meridiemUppercase = ['오전', '오후']\n  var meridiemLowercase = ['오전', '오후']\n  var meridiemFull = ['오전', '오후']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '일'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Korean locale.\n * @author Hong Chulju [@angdev]{@link https://github.com/angdev}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: '1초 미만',\n      other: '{{count}}초 미만'\n    },\n\n    xSeconds: {\n      one: '1초',\n      other: '{{count}}초'\n    },\n\n    halfAMinute: '30초',\n\n    lessThanXMinutes: {\n      one: '1분 미만',\n      other: '{{count}}분 미만'\n    },\n\n    xMinutes: {\n      one: '1분',\n      other: '{{count}}분'\n    },\n\n    aboutXHours: {\n      one: '약 1시간',\n      other: '약 {{count}}시간'\n    },\n\n    xHours: {\n      one: '1시간',\n      other: '{{count}}시간'\n    },\n\n    xDays: {\n      one: '1일',\n      other: '{{count}}일'\n    },\n\n    aboutXMonths: {\n      one: '약 1개월',\n      other: '약 {{count}}개월'\n    },\n\n    xMonths: {\n      one: '1개월',\n      other: '{{count}}개월'\n    },\n\n    aboutXYears: {\n      one: '약 1년',\n      other: '약 {{count}}년'\n    },\n\n    xYears: {\n      one: '1년',\n      other: '{{count}}년'\n    },\n\n    overXYears: {\n      one: '1년 이상',\n      other: '{{count}}년 이상'\n    },\n\n    almostXYears: {\n      one: '거의 1년',\n      other: '거의 {{count}}년'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return result + ' 후'\n      } else {\n        return result + ' 전'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['Ιαν', 'Φεβ', 'Μαρ', 'Απρ', 'Μαϊ', 'Ιουν', 'Ιουλ', 'Αυγ', 'Σεπ', 'Οκτ', 'Νοε', 'Δεκ']\n  var monthsFull = ['Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος']\n  var monthsGenitive = ['Ιανουαρίου', 'Φεβρουαρίου', 'Μαρτίου', 'Απριλίου', 'Μαΐου', 'Ιουνίου', 'Ιουλίου', 'Αυγούστου', 'Σεπτεμβρίου', 'Οκτωβρίου', 'Νοεμβρίου', 'Δεκεμβρίου']\n  var weekdays2char = ['Κυ', 'Δε', 'Τρ', 'Τε', 'Πέ', 'Πα', 'Σά']\n  var weekdays3char = ['Κυρ', 'Δευ', 'Τρί', 'Τετ', 'Πέμ', 'Παρ', 'Σάβ']\n  var weekdaysFull = ['Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο']\n  var meridiemUppercase = ['ΠΜ', 'ΜΜ']\n  var meridiemLowercase = ['πμ', 'μμ']\n  var meridiemFull = ['π.μ.', 'μ.μ.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalGenders = {\n    'M': 'ος',\n    'D': 'η',\n    'DDD': 'η',\n    'd': 'η',\n    'Q': 'ο',\n    'W': 'η'\n  }\n  var ordinalKeys = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalKeys.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date) + ordinalGenders[formatterToken]\n    }\n  })\n\n  // Generate genitive variant of full months\n  var formatsWithGenitive = ['D', 'Do', 'DD']\n  formatsWithGenitive.forEach(function (formatterToken) {\n    formatters[formatterToken + ' MMMM'] = function (date, commonFormatters) {\n      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]\n      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Greek locale.\n * @author Theodoros Orfanidis [@teoulas]{@link https://github.com/teoulas}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'λιγότερο από ένα δευτερόλεπτο',\n      other: 'λιγότερο από {{count}} δευτερόλεπτα'\n    },\n\n    xSeconds: {\n      one: '1 δευτερόλεπτο',\n      other: '{{count}} δευτερόλεπτα'\n    },\n\n    halfAMinute: 'μισό λεπτό',\n\n    lessThanXMinutes: {\n      one: 'λιγότερο από ένα λεπτό',\n      other: 'λιγότερο από {{count}} λεπτά'\n    },\n\n    xMinutes: {\n      one: '1 λεπτό',\n      other: '{{count}} λεπτά'\n    },\n\n    aboutXHours: {\n      one: 'περίπου 1 ώρα',\n      other: 'περίπου {{count}} ώρες'\n    },\n\n    xHours: {\n      one: '1 ώρα',\n      other: '{{count}} ώρες'\n    },\n\n    xDays: {\n      one: '1 ημέρα',\n      other: '{{count}} ημέρες'\n    },\n\n    aboutXMonths: {\n      one: 'περίπου 1 μήνας',\n      other: 'περίπου {{count}} μήνες'\n    },\n\n    xMonths: {\n      one: '1 μήνας',\n      other: '{{count}} μήνες'\n    },\n\n    aboutXYears: {\n      one: 'περίπου 1 χρόνο',\n      other: 'περίπου {{count}} χρόνια'\n    },\n\n    xYears: {\n      one: '1 χρόνο',\n      other: '{{count}} χρόνια'\n    },\n\n    overXYears: {\n      one: 'πάνω από 1 χρόνο',\n      other: 'πάνω από {{count}} χρόνια'\n    },\n\n    almostXYears: {\n      one: 'περίπου 1 χρόνο',\n      other: 'περίπου {{count}} χρόνια'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'σε ' + result\n      } else {\n        return result + ' πρίν'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","function declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  if (count >= 2 && count <= 4) {\n    return scheme.twoFour\n  }\n\n  // if count === null || count === 0 || count >= 5\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction extractPreposition (token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition))\n  })\n\n  return result[0]\n}\n\nfunction prefixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'almost') {\n    translation = 'takmer'\n  }\n\n  if (preposition === 'about') {\n    translation = 'približne'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction suffixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'lessThan') {\n    translation = 'menej než'\n  }\n\n  if (preposition === 'over') {\n    translation = 'viac než'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction lowercaseFirstLetter (string) {\n  return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    xSeconds: {\n      one: {\n        regular: 'sekunda',\n        past: 'sekundou',\n        future: 'sekundu'\n      },\n      twoFour: {\n        regular: '{{count}} sekundy',\n        past: '{{count}} sekundami',\n        future: '{{count}} sekundy'\n      },\n      other: {\n        regular: '{{count}} sekúnd',\n        past: '{{count}} sekundami',\n        future: '{{count}} sekúnd'\n      }\n    },\n\n    halfAMinute: {\n      other: {\n        regular: 'pol minúty',\n        past: 'pol minútou',\n        future: 'pol minúty'\n      }\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minúta',\n        past: 'minútou',\n        future: 'minútu'\n      },\n      twoFour: {\n        regular: '{{count}} minúty',\n        past: '{{count}} minútami',\n        future: '{{count}} minúty'\n      },\n      other: {\n        regular: '{{count}} minút',\n        past: '{{count}} minútami',\n        future: '{{count}} minút'\n      }\n    },\n\n    xHours: {\n      one: {\n        regular: 'hodina',\n        past: 'hodinou',\n        future: 'hodinu'\n      },\n      twoFour: {\n        regular: '{{count}} hodiny',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodiny'\n      },\n      other: {\n        regular: '{{count}} hodín',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodín'\n      }\n    },\n\n    xDays: {\n      one: {\n        regular: 'deň',\n        past: 'dňom',\n        future: 'deň'\n      },\n      twoFour: {\n        regular: '{{count}} dni',\n        past: '{{count}} dňami',\n        future: '{{count}} dni'\n      },\n      other: {\n        regular: '{{count}} dní',\n        past: '{{count}} dňami',\n        future: '{{count}} dní'\n      }\n    },\n\n    xMonths: {\n      one: {\n        regular: 'mesiac',\n        past: 'mesiacom',\n        future: 'mesiac'\n      },\n      twoFour: {\n        regular: '{{count}} mesiace',\n        past: '{{count}} mesiacmi',\n        future: '{{count}} mesiace'\n      },\n      other: {\n        regular: '{{count}} mesiacov',\n        past: '{{count}} mesiacmi',\n        future: '{{count}} mesiacov'\n      }\n    },\n\n    xYears: {\n      one: {\n        regular: 'rok',\n        past: 'rokom',\n        future: 'rok'\n      },\n      twoFour: {\n        regular: '{{count}} roky',\n        past: '{{count}} rokmi',\n        future: '{{count}} roky'\n      },\n      other: {\n        regular: '{{count}} rokov',\n        past: '{{count}} rokmi',\n        future: '{{count}} rokov'\n      }\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var preposition = extractPreposition(token) || ''\n    var key = lowercaseFirstLetter(token.substring(preposition.length))\n    var scheme = distanceInWordsLocale[key]\n\n    if (!options.addSuffix) {\n      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')\n    }\n\n    if (options.comparison > 0) {\n      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')\n    } else {\n      return prefixPreposition(preposition) + 'pred ' + suffixPreposition(preposition) + declension(scheme, count, 'past')\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'máj', 'jún', 'júl', 'aug', 'sep', 'okt', 'nov', 'dec']\n  var monthsFull = ['január', 'február', 'marec', 'apríl', 'máj', 'jún', 'júl', 'august', 'september', 'október', 'november', 'december']\n  var weekdays2char = ['ne', 'po', 'ut', 'st', 'št', 'pi', 'so']\n  var weekdays3char = ['neď', 'pon', 'uto', 'str', 'štv', 'pia', 'sob']\n  var weekdaysFull = ['nedeľa', 'pondelok', 'utorok', 'streda', 'štvrtok', 'piatok', 'sobota']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: jan, feb, ..., dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: január, február, ..., december\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: ne, po, ..., so\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: neď, pon, ..., sob\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: neďeľa, pondelok, ..., sobota\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Slovak locale.\n * @author Marek Suscak [@mareksuscak]{@link https://github.com/mareksuscak}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['Ene', 'Peb', 'Mar', 'Abr', 'May', 'Hun', 'Hul', 'Ago', 'Set', 'Okt', 'Nob', 'Dis']\n  var monthsFull = ['Enero', 'Pebrero', 'Marso', 'Abril', 'Mayo', 'Hunyo', 'Hulyo', 'Agosto', 'Setyembre', 'Oktubre', 'Nobyembre', 'Disyembre']\n  var weekdays2char = ['Li', 'Lu', 'Ma', 'Mi', 'Hu', 'Bi', 'Sa']\n  var weekdays3char = ['Lin', 'Lun', 'Mar', 'Miy', 'Huw', 'Biy', 'Sab']\n  var weekdaysFull = ['Linggo', 'Lunes', 'Martes', 'Miyerkules', 'Huwebes', 'Biyernes', 'Sabado']\n  var meridiemUppercase = ['NU', 'NT', 'NH', 'NG']\n  var meridiemLowercase = ['nu', 'nt', 'nh', 'ng']\n  var meridiemFull = ['ng umaga', 'ng tanghali', 'ng hapon', 'ng gabi']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      if (date.getHours() > 12) {\n        var modulo = date.getHours() % 12\n        if (modulo < 6) {\n          return meridiemUppercase[2]\n        } else {\n          return meridiemUppercase[3]\n        }\n      } else if (date.getHours() < 12) {\n        return meridiemUppercase[0]\n      } else {\n        return meridiemUppercase[1]\n      }\n    },\n\n    // am, pm\n    'a': function (date) {\n      if (date.getHours() > 12) {\n        var modulo = date.getHours() % 12\n        if (modulo < 6) {\n          return meridiemLowercase[2]\n        } else {\n          return meridiemLowercase[3]\n        }\n      } else if (date.getHours() < 12) {\n        return meridiemLowercase[0]\n      } else {\n        return meridiemLowercase[1]\n      }\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      if (date.getHours() > 12) {\n        var modulo = date.getHours() % 12\n        if (modulo < 6) {\n          return meridiemFull[2]\n        } else {\n          return meridiemFull[3]\n        }\n      } else if (date.getHours() < 12) {\n        return meridiemFull[0]\n      } else {\n        return meridiemFull[1]\n      }\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return 'ika-' + number\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Filipino locale.\n * @author Ian De La Cruz [@RIanDeLaCruz]{@link https://github.com/RIanDeLaCruz}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'mas maliit sa isang segundo',\n      other: 'mas maliit sa {{count}} segundo'\n    },\n\n    xSeconds: {\n      one: '1 segundo',\n      other: '{{count}} segundo'\n    },\n\n    halfAMinute: 'kalahating minuto',\n\n    lessThanXMinutes: {\n      one: 'mas maliit sa isang minuto',\n      other: 'mas maliit sa {{count}} minuto'\n    },\n\n    xMinutes: {\n      one: '1 minuto',\n      other: '{{count}} minuto'\n    },\n\n    aboutXHours: {\n      one: 'mga 1 oras',\n      other: 'mga {{count}} oras'\n    },\n\n    xHours: {\n      one: '1 oras',\n      other: '{{count}} oras'\n    },\n\n    xDays: {\n      one: '1 araw',\n      other: '{{count}} araw'\n    },\n\n    aboutXMonths: {\n      one: 'mga 1 buwan',\n      other: 'mga {{count}} buwan'\n    },\n\n    xMonths: {\n      one: '1 buwan',\n      other: '{{count}} buwan'\n    },\n\n    aboutXYears: {\n      one: 'mga 1 taon',\n      other: 'mga {{count}} taon'\n    },\n\n    xYears: {\n      one: '1 taon',\n      other: '{{count}} taon'\n    },\n\n    overXYears: {\n      one: 'higit sa 1 taon',\n      other: 'higit sa {{count}} taon'\n    },\n\n    almostXYears: {\n      one: 'halos 1 taon',\n      other: 'halos {{count}} taon'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'sa loob ng ' + result\n      } else {\n        return result + ' ang nakalipas'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']\n  var monthsFull = ['januar', 'februar', 'marts', 'april', 'maj', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'december']\n  var weekdays2char = ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø']\n  var weekdays3char = ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør']\n  var weekdaysFull = ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Danish locale.\n * @author Anders B. Hansen [@Andersbiha]{@link https://github.com/Andersbiha}\n * @author [@kgram]{@link https://github.com/kgram}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'mindre end et sekund',\n      other: 'mindre end {{count}} sekunder'\n    },\n\n    xSeconds: {\n      one: '1 sekund',\n      other: '{{count}} sekunder'\n    },\n\n    halfAMinute: 'et halvt minut',\n\n    lessThanXMinutes: {\n      one: 'mindre end et minut',\n      other: 'mindre end {{count}} minutter'\n    },\n\n    xMinutes: {\n      one: '1 minut',\n      other: '{{count}} minutter'\n    },\n\n    aboutXHours: {\n      one: 'cirka 1 time',\n      other: 'cirka {{count}} timer'\n    },\n\n    xHours: {\n      one: '1 time',\n      other: '{{count}} timer'\n    },\n\n    xDays: {\n      one: '1 dag',\n      other: '{{count}} dage'\n    },\n\n    aboutXMonths: {\n      one: 'cirka 1 måned',\n      other: 'cirka {{count}} måneder'\n    },\n\n    xMonths: {\n      one: '1 måned',\n      other: '{{count}} måneder'\n    },\n\n    aboutXYears: {\n      one: 'cirka 1 år',\n      other: 'cirka {{count}} år'\n    },\n\n    xYears: {\n      one: '1 år',\n      other: '{{count}} år'\n    },\n\n    overXYears: {\n      one: 'over 1 år',\n      other: 'over {{count}} år'\n    },\n\n    almostXYears: {\n      one: 'næsten 1 år',\n      other: 'næsten {{count}} år'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'om ' + result\n      } else {\n        return result + ' siden'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'maí', 'jún', 'júl', 'ágú', 'sep', 'okt', 'nóv', 'des']\n  var monthsFull = ['janúar', 'febrúar', 'mars', 'apríl', 'maí', 'júní', 'júlí', 'ágúst', 'september', 'október', 'nóvember', 'desember']\n  var weekdays2char = ['su', 'má', 'þr', 'mi', 'fi', 'fö', 'la']\n  var weekdays3char = ['sun', 'mán', 'þri', 'mið', 'fim', 'fös', 'lau']\n  var weekdaysFull = ['sunnudaginn', 'mánudaginn', 'þriðjudaginn', 'miðvikudaginn', 'fimmtudaginn', 'föstudaginn', 'laugardaginn']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return '' + number\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Icelandic locale.\n * @author Derek Blank [@derekblank]{@link https://github.com/derekblank}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'minna en 1 sekúnda',\n      other: 'minna en {{count}} sekúndur'\n    },\n\n    xSeconds: {\n      one: '1 sekúnda',\n      other: '{{count}} sekúndur'\n    },\n\n    halfAMinute: 'hálf mínúta',\n\n    lessThanXMinutes: {\n      one: 'minna en 1 mínúta',\n      other: 'minna en {{count}} mínútur'\n    },\n\n    xMinutes: {\n      one: '1 mínúta',\n      other: '{{count}} mínútur'\n    },\n\n    aboutXHours: {\n      one: 'u.þ.b. 1 klukkustund',\n      other: 'u.þ.b. {{count}} klukkustundir'\n    },\n\n    xHours: {\n      one: '1 klukkustund',\n      other: '{{count}} klukkustundir'\n    },\n\n    xDays: {\n      one: '1 dagur',\n      other: '{{count}} dagar'\n    },\n\n    aboutXMonths: {\n      one: 'u.þ.b. 1 mánuður',\n      other: 'u.þ.b. {{count}} mánuðir'\n    },\n\n    xMonths: {\n      one: '1 mánuður',\n      other: '{{count}} mánuðir'\n    },\n\n    aboutXYears: {\n      one: 'u.þ.b. 1 ár',\n      other: 'u.þ.b. {{count}} ár'\n    },\n\n    xYears: {\n      one: '1 ár',\n      other: '{{count}} ár'\n    },\n\n    overXYears: {\n      one: 'meira en 1 ár',\n      other: 'meira en {{count}} ár'\n    },\n\n    almostXYears: {\n      one: 'næstum 1 ár',\n      other: 'næstum {{count}} ár'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'í ' + result\n      } else {\n        return result + ' síðan'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesä', 'heinä', 'elo', 'syys', 'loka', 'marras', 'joulu']\n  var monthsFull = ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu']\n  var weekdays2char = ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la']\n  var weekdaysFull = ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai']\n\n  // In Finnish `a.m.` / `p.m.` are virtually never used, but it seems `AP` (aamupäivä) / `IP` (iltapäivä) are acknowleded terms:\n  // https://fi.wikipedia.org/wiki/24_tunnin_kello\n  function meridiem (date) {\n    return date.getHours() < 12 ? 'AP' : 'IP'\n  }\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      // Finnish doesn't use two-char weekdays\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': meridiem,\n\n    // am, pm\n    'a': meridiem,\n\n    // a.m., p.m.\n    'aa': meridiem\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date).toString() + '.'\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Finnish locale.\n * @author Pyry-Samuli Lahti [@Pyppe]{@link https://github.com/Pyppe}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  function futureSeconds (text) {\n    return text.replace(/sekuntia?/, 'sekunnin')\n  }\n\n  function futureMinutes (text) {\n    return text.replace(/minuuttia?/, 'minuutin')\n  }\n\n  function futureHours (text) {\n    return text.replace(/tuntia?/, 'tunnin')\n  }\n\n  function futureDays (text) {\n    return text.replace(/päivää?/, 'päivän')\n  }\n\n  function futureMonths (text) {\n    return text.replace(/(kuukausi|kuukautta)/, 'kuukauden')\n  }\n\n  function futureYears (text) {\n    return text.replace(/(vuosi|vuotta)/, 'vuoden')\n  }\n\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'alle sekunti',\n      other: 'alle {{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    xSeconds: {\n      one: 'sekunti',\n      other: '{{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    halfAMinute: {\n      one: 'puoli minuuttia',\n      other: 'puoli minuuttia',\n      futureTense: function (text) {\n        return 'puolen minuutin'\n      }\n    },\n\n    lessThanXMinutes: {\n      one: 'alle minuutti',\n      other: 'alle {{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    xMinutes: {\n      one: 'minuutti',\n      other: '{{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    aboutXHours: {\n      one: 'noin tunti',\n      other: 'noin {{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xHours: {\n      one: 'tunti',\n      other: '{{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xDays: {\n      one: 'päivä',\n      other: '{{count}} päivää',\n      futureTense: futureDays\n    },\n\n    aboutXMonths: {\n      one: 'noin kuukausi',\n      other: 'noin {{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    xMonths: {\n      one: 'kuukausi',\n      other: '{{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    aboutXYears: {\n      one: 'noin vuosi',\n      other: 'noin {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    xYears: {\n      one: 'vuosi',\n      other: '{{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    overXYears: {\n      one: 'yli vuosi',\n      other: 'yli {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    almostXYears: {\n      one: 'lähes vuosi',\n      other: 'lähes {{count}} vuotta',\n      futureTense: futureYears\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var distance = distanceInWordsLocale[token]\n    var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count)\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return distance.futureTense(result) + ' kuluttua'\n      } else {\n        return result + ' sitten'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.', 'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.']\n  var monthsFull = ['มกราคาม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม']\n  var weekdays2char = ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.']\n  var weekdays3char = ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.']\n  var weekdaysFull = ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัสบดี', 'ศุกร์', 'เสาร์']\n  var meridiemUppercase = ['น.']\n  var meridiemLowercase = ['น.']\n  var meridiemFull = ['นาฬิกา']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return meridiemFull[0]\n    }\n  }\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Thai locale.\n * @author Athiwat Hirunworawongkun [@athivvat]{@link https://github.com/athivvat}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'น้อยกว่า 1 วินาที',\n      other: 'น้อยกว่า {{count}} วินาที'\n    },\n\n    xSeconds: {\n      one: '1 วินาที',\n      other: '{{count}} วินาที'\n    },\n\n    halfAMinute: 'ครึ่งนาที',\n\n    lessThanXMinutes: {\n      one: 'น้อยกว่า 1 นาที',\n      other: 'น้อยกว่า {{count}} นาที'\n    },\n\n    xMinutes: {\n      one: '1 นาที',\n      other: '{{count}} นาที'\n    },\n\n    aboutXHours: {\n      one: 'ประมาณ 1 ชั่วโมง',\n      other: 'ประมาณ {{count}} ชั่วโมง'\n    },\n\n    xHours: {\n      one: '1 ชั่วโมง',\n      other: '{{count}} ชั่วโมง'\n    },\n\n    xDays: {\n      one: '1 วัน',\n      other: '{{count}} วัน'\n    },\n\n    aboutXMonths: {\n      one: 'ประมาณ 1 เดือน',\n      other: 'ประมาณ {{count}} เดือน'\n    },\n\n    xMonths: {\n      one: '1 เดือน',\n      other: '{{count}} เดือน'\n    },\n\n    aboutXYears: {\n      one: 'ประมาณ 1 ปี',\n      other: 'ประมาณ {{count}} ปี'\n    },\n\n    xYears: {\n      one: '1 ปี',\n      other: '{{count}} ปี'\n    },\n\n    overXYears: {\n      one: 'มากกว่า 1 ปี',\n      other: 'มากกว่า {{count}} ปี'\n    },\n\n    almostXYears: {\n      one: 'เกือบ 1 ปี',\n      other: 'เกือบ {{count}} ปี'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (token === 'halfAMinute') {\n          return 'ใน' + result\n        } else {\n          return 'ใน ' + result\n        }\n      } else {\n        return result + 'ที่ผ่านมา'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['sij', 'velj', 'ožu', 'tra', 'svi', 'lip', 'srp', 'kol', 'ruj', 'lis', 'stu', 'pro']\n  var monthsFull = ['siječanj', 'veljača', 'ožujak', 'travanj', 'svibanj', 'lipanj', 'srpanj', 'kolovoz', 'rujan', 'listopad', 'studeni', 'prosinac']\n  var monthsGenitive = ['siječnja', 'veljače', 'ožujka', 'travnja', 'svibnja', 'lipnja', 'srpnja', 'kolovoza', 'rujna', 'listopada', 'studenog', 'prosinca']\n  var weekdays2char = ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su']\n  var weekdays3char = ['ned', 'pon', 'uto', 'sri', 'čet', 'pet', 'sub']\n  var weekdaysFull = ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota']\n  var meridiemUppercase = ['ujutro', 'popodne']\n  var meridiemLowercase = ['ujutro', 'popodne']\n  var meridiemFull = ['ujutro', 'popodne']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  // Generate formatters like 'D MMMM', where the month is in the genitive case\n  var monthsGenitiveFormatters = ['D', 'Do', 'DD']\n  monthsGenitiveFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + ' MMM'] = function (date, commonFormatters) {\n      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]\n      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Croatian locale.\n * @author Matija Marohnić [@silvenon]{@link https://github.com/silvenon}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: {\n        standalone: 'manje od 1 sekunde',\n        withPrepositionAgo: 'manje od 1 sekunde',\n        withPrepositionIn: 'manje od 1 sekundu'\n      },\n      dual: 'manje od {{count}} sekunde',\n      other: 'manje od {{count}} sekundi'\n    },\n\n    xSeconds: {\n      one: {\n        standalone: '1 sekunda',\n        withPrepositionAgo: '1 sekunde',\n        withPrepositionIn: '1 sekundu'\n      },\n      dual: '{{count}} sekunde',\n      other: '{{count}} sekundi'\n    },\n\n    halfAMinute: 'pola minute',\n\n    lessThanXMinutes: {\n      one: {\n        standalone: 'manje od 1 minute',\n        withPrepositionAgo: 'manje od 1 minute',\n        withPrepositionIn: 'manje od 1 minutu'\n      },\n      dual: 'manje od {{count}} minute',\n      other: 'manje od {{count}} minuta'\n    },\n\n    xMinutes: {\n      one: {\n        standalone: '1 minuta',\n        withPrepositionAgo: '1 minute',\n        withPrepositionIn: '1 minutu'\n      },\n      dual: '{{count}} minute',\n      other: '{{count}} minuta'\n    },\n\n    aboutXHours: {\n      one: {\n        standalone: 'oko 1 sat',\n        withPrepositionAgo: 'oko 1 sat',\n        withPrepositionIn: 'oko 1 sat'\n      },\n      dual: 'oko {{count}} sata',\n      other: 'oko {{count}} sati'\n    },\n\n    xHours: {\n      one: {\n        standalone: '1 sat',\n        withPrepositionAgo: '1 sat',\n        withPrepositionIn: '1 sat'\n      },\n      dual: '{{count}} sata',\n      other: '{{count}} sati'\n    },\n\n    xDays: {\n      one: {\n        standalone: '1 dan',\n        withPrepositionAgo: '1 dan',\n        withPrepositionIn: '1 dan'\n      },\n      dual: '{{count}} dana',\n      other: '{{count}} dana'\n    },\n\n    aboutXMonths: {\n      one: {\n        standalone: 'oko 1 mjesec',\n        withPrepositionAgo: 'oko 1 mjesec',\n        withPrepositionIn: 'oko 1 mjesec'\n      },\n      dual: 'oko {{count}} mjeseca',\n      other: 'oko {{count}} mjeseci'\n    },\n\n    xMonths: {\n      one: {\n        standalone: '1 mjesec',\n        withPrepositionAgo: '1 mjesec',\n        withPrepositionIn: '1 mjesec'\n      },\n      dual: '{{count}} mjeseca',\n      other: '{{count}} mjeseci'\n    },\n\n    aboutXYears: {\n      one: {\n        standalone: 'oko 1 godinu',\n        withPrepositionAgo: 'oko 1 godinu',\n        withPrepositionIn: 'oko 1 godinu'\n      },\n      dual: 'oko {{count}} godine',\n      other: 'oko {{count}} godina'\n    },\n\n    xYears: {\n      one: {\n        standalone: '1 godina',\n        withPrepositionAgo: '1 godine',\n        withPrepositionIn: '1 godinu'\n      },\n      dual: '{{count}} godine',\n      other: '{{count}} godina'\n    },\n\n    overXYears: {\n      one: {\n        standalone: 'preko 1 godinu',\n        withPrepositionAgo: 'preko 1 godinu',\n        withPrepositionIn: 'preko 1 godinu'\n      },\n      dual: 'preko {{count}} godine',\n      other: 'preko {{count}} godina'\n    },\n\n    almostXYears: {\n      one: {\n        standalone: 'gotovo 1 godinu',\n        withPrepositionAgo: 'gotovo 1 godinu',\n        withPrepositionIn: 'gotovo 1 godinu'\n      },\n      dual: 'gotovo {{count}} godine',\n      other: 'gotovo {{count}} godina'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      if (options.addSuffix) {\n        if (options.comparison > 0) {\n          result = distanceInWordsLocale[token].one.withPrepositionIn\n        } else {\n          result = distanceInWordsLocale[token].one.withPrepositionAgo\n        }\n      } else {\n        result = distanceInWordsLocale[token].one.standalone\n      }\n    } else if (\n      count % 10 > 1 && count % 10 < 5 && // if last digit is between 2 and 4\n      String(count).substr(-2, 1) !== '1' // unless the 2nd to last digit is \"1\"\n    ) {\n      result = distanceInWordsLocale[token].dual.replace('{{count}}', count)\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'za ' + result\n      } else {\n        return 'prije ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']\n  var monthsFull = ['كانون الثاني يناير', 'شباط فبراير', 'آذار مارس', 'نيسان أبريل', 'أيار مايو', 'حزيران يونيو', 'تموز يوليو', 'آب أغسطس', 'أيلول سبتمبر', 'تشرين الأول أكتوبر', 'تشرين الثاني نوفمبر', 'كانون الأول ديسمبر']\n  var weekdays2char = ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س']\n  var weekdays3char = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت']\n  var weekdaysFull = ['الأحد', 'الإثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']\n  var meridiemUppercase = ['صباح', 'مساء']\n  var meridiemLowercase = ['ص', 'م']\n  var meridiemFull = ['صباحاً', 'مساءاً']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return String(number)\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Arabic locale (Modern Standard Arabic - Al-fussha).\n * @author Abdallah Hassan [@AbdallahAHO]{@link https://github.com/AbdallahAHO}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'أقل من ثانية واحدة',\n      other: 'أقل من {{count}} ثواني'\n    },\n\n    xSeconds: {\n      one: 'ثانية واحدة',\n      other: '{{count}} ثواني'\n    },\n\n    halfAMinute: 'نصف دقيقة',\n\n    lessThanXMinutes: {\n      one: 'أقل من دقيقة',\n      other: 'أقل من {{count}} دقيقة'\n    },\n\n    xMinutes: {\n      one: 'دقيقة واحدة',\n      other: '{{count}} دقائق'\n    },\n\n    aboutXHours: {\n      one: 'ساعة واحدة تقريباً',\n      other: '{{count}} ساعات تقريباً'\n    },\n\n    xHours: {\n      one: 'ساعة واحدة',\n      other: '{{count}} ساعات'\n    },\n\n    xDays: {\n      one: 'يوم واحد',\n      other: '{{count}} أيام'\n    },\n\n    aboutXMonths: {\n      one: 'شهر واحد تقريباً',\n      other: '{{count}} أشهر تقريباً'\n    },\n\n    xMonths: {\n      one: 'شهر واحد',\n      other: '{{count}} أشهر'\n    },\n\n    aboutXYears: {\n      one: 'عام واحد تقريباً',\n      other: '{{count}} أعوام تقريباً'\n    },\n\n    xYears: {\n      one: 'عام واحد',\n      other: '{{count}} أعوام'\n    },\n\n    overXYears: {\n      one: 'أكثر من عام',\n      other: 'أكثر من {{count}} أعوام'\n    },\n\n    almostXYears: {\n      one: 'عام واحد تقريباً',\n      other: '{{count}} أعوام تقريباً'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'في خلال ' + result\n      } else {\n        return 'منذ ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['яну', 'фев', 'мар', 'апр', 'май', 'юни', 'юли', 'авг', 'сеп', 'окт', 'ное', 'дек']\n  var monthsFull = ['януари', 'февруари', 'март', 'април', 'май', 'юни', 'юли', 'август', 'септември', 'октомври', 'ноември', 'декември']\n  var weekdays2char = ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\n  var weekdays3char = ['нед', 'пон', 'вто', 'сря', 'чет', 'пет', 'съб']\n  var weekdaysFull = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота']\n  var meridiem = ['сутринта', 'на обяд', 'следобед', 'вечерта']\n\n  var timeOfDay = function (date) {\n    var hours = date.getHours()\n    if (hours >= 4 && hours < 12) {\n      return meridiem[0]\n    } else if (hours >= 12 && hours < 14) {\n      return meridiem[1]\n    } else if (hours >= 14 && hours < 17) {\n      return meridiem[2]\n    } else {\n      return meridiem[3]\n    }\n  }\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': timeOfDay,\n\n    // am, pm\n    'a': timeOfDay,\n\n    // a.m., p.m.\n    'aa': timeOfDay\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + '-ви'\n      case 2:\n        return number + '-ри'\n    }\n  }\n  return number + '-и'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Bulgarian locale.\n * @author Nikolay Stoynov [@arvigeus]{@link https://github.com/arvigeus}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'по-малко от секунда',\n      other: 'по-малко от {{count}} секунди'\n    },\n\n    xSeconds: {\n      one: '1 секунда',\n      other: '{{count}} секунди'\n    },\n\n    halfAMinute: 'половин минута',\n\n    lessThanXMinutes: {\n      one: 'по-малко от минута',\n      other: 'по-малко от {{count}} минути'\n    },\n\n    xMinutes: {\n      one: '1 минута',\n      other: '{{count}} минути'\n    },\n\n    aboutXHours: {\n      one: 'около час',\n      other: 'около {{count}} часа'\n    },\n\n    xHours: {\n      one: '1 час',\n      other: '{{count}} часа'\n    },\n\n    xDays: {\n      one: '1 ден',\n      other: '{{count}} дни'\n    },\n\n    aboutXMonths: {\n      one: 'около месец',\n      other: 'около {{count}} месеца'\n    },\n\n    xMonths: {\n      one: '1 месец',\n      other: '{{count}} месеца'\n    },\n\n    aboutXYears: {\n      one: 'около година',\n      other: 'около {{count}} години'\n    },\n\n    xYears: {\n      one: '1 година',\n      other: '{{count}} години'\n    },\n\n    overXYears: {\n      one: 'над година',\n      other: 'над {{count}} години'\n    },\n\n    almostXYears: {\n      one: 'почти година',\n      other: 'почти {{count}} години'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'след ' + result\n      } else {\n        return 'преди ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","function declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  if (count >= 2 && count <= 4) {\n    return scheme.twoFour\n  }\n\n  // if count === null || count === 0 || count >= 5\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction extractPreposition (token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition))\n  })\n\n  return result[0]\n}\n\nfunction prefixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'almost') {\n    translation = 'skoro'\n  }\n\n  if (preposition === 'about') {\n    translation = 'přibližně'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction suffixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'lessThan') {\n    translation = 'méně než'\n  }\n\n  if (preposition === 'over') {\n    translation = 'více než'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction lowercaseFirstLetter (string) {\n  return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    xSeconds: {\n      one: {\n        regular: 'vteřina',\n        past: 'vteřinou',\n        future: 'vteřinu'\n      },\n      twoFour: {\n        regular: '{{count}} vteřiny',\n        past: '{{count}} vteřinami',\n        future: '{{count}} vteřiny'\n      },\n      other: {\n        regular: '{{count}} vteřin',\n        past: '{{count}} vteřinami',\n        future: '{{count}} vteřin'\n      }\n    },\n\n    halfAMinute: {\n      other: {\n        regular: 'půl minuty',\n        past: 'půl minutou',\n        future: 'půl minuty'\n      }\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutou',\n        future: 'minutu'\n      },\n      twoFour: {\n        regular: '{{count}} minuty',\n        past: '{{count}} minutami',\n        future: '{{count}} minuty'\n      },\n      other: {\n        regular: '{{count}} minut',\n        past: '{{count}} minutami',\n        future: '{{count}} minut'\n      }\n    },\n\n    xHours: {\n      one: {\n        regular: 'hodina',\n        past: 'hodinou',\n        future: 'hodinu'\n      },\n      twoFour: {\n        regular: '{{count}} hodiny',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodiny'\n      },\n      other: {\n        regular: '{{count}} hodin',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodin'\n      }\n    },\n\n    xDays: {\n      one: {\n        regular: 'den',\n        past: 'dnem',\n        future: 'den'\n      },\n      twoFour: {\n        regular: '{{count}} dni',\n        past: '{{count}} dny',\n        future: '{{count}} dni'\n      },\n      other: {\n        regular: '{{count}} dní',\n        past: '{{count}} dny',\n        future: '{{count}} dní'\n      }\n    },\n\n    xMonths: {\n      one: {\n        regular: 'měsíc',\n        past: 'měsícem',\n        future: 'měsíc'\n      },\n      twoFour: {\n        regular: '{{count}} měsíce',\n        past: '{{count}} měsíci',\n        future: '{{count}} měsíce'\n      },\n      other: {\n        regular: '{{count}} měsíců',\n        past: '{{count}} měsíci',\n        future: '{{count}} měsíců'\n      }\n    },\n\n    xYears: {\n      one: {\n        regular: 'rok',\n        past: 'rokem',\n        future: 'rok'\n      },\n      twoFour: {\n        regular: '{{count}} roky',\n        past: '{{count}} roky',\n        future: '{{count}} roky'\n      },\n      other: {\n        regular: '{{count}} roků',\n        past: '{{count}} roky',\n        future: '{{count}} roků'\n      }\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var preposition = extractPreposition(token) || ''\n    var key = lowercaseFirstLetter(token.substring(preposition.length))\n    var scheme = distanceInWordsLocale[key]\n\n    if (!options.addSuffix) {\n      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')\n    }\n\n    if (options.comparison > 0) {\n      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')\n    } else {\n      return prefixPreposition(preposition) + 'před ' + suffixPreposition(preposition) + declension(scheme, count, 'past')\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['led', 'úno', 'bře', 'dub', 'kvě', 'čvn', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro']\n  var monthsFull = ['leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen', 'září', 'říjen', 'listopad', 'prosinec']\n  var weekdays2char = ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so']\n  var weekdays3char = ['ned', 'pon', 'úte', 'stř', 'čtv', 'pát', 'sob']\n  var weekdaysFull = ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota']\n  var meridiemUppercase = ['DOP.', 'ODP.']\n  var meridiemLowercase = ['dop.', 'odp.']\n  var meridiemFull = ['dopoledne', 'odpoledne']\n\n  var formatters = {\n    // Month: led, úno, ..., pro\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: leden, únor, ..., prosinec\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: ne, po, ..., so\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: ned, pon, ..., sob\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: neděle, pondělí, ..., sobota\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // DOP., ODP.\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // dop., odp.\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // dopoledne, odpoledne\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Czech locale.\n * @author David Rus [@davidrus]{@link https://github.com/davidrus}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['јан', 'фев', 'мар', 'апр', 'мај', 'јун', 'јул', 'авг', 'сеп', 'окт', 'ное', 'дек']\n  var monthsFull = ['јануари', 'февруари', 'март', 'април', 'мај', 'јуни', 'јули', 'август', 'септември', 'октомври', 'ноември', 'декември']\n  var weekdays2char = ['не', 'по', 'вт', 'ср', 'че', 'пе', 'са']\n  var weekdays3char = ['нед', 'пон', 'вто', 'сре', 'чет', 'пет', 'саб']\n  var weekdaysFull = ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота']\n  var meridiem = ['претпладне', 'попладне']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + '-ви'\n      case 2:\n        return number + '-ри'\n      case 7:\n      case 8:\n        return number + '-ми'\n    }\n  }\n  return number + '-ти'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Macedonian locale.\n * @author Petar Vlahu [@vlahupetar]{@link https://github.com/vlahupetar}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'помалку од секунда',\n      other: 'помалку од {{count}} секунди'\n    },\n\n    xSeconds: {\n      one: '1 секунда',\n      other: '{{count}} секунди'\n    },\n\n    halfAMinute: 'половина минута',\n\n    lessThanXMinutes: {\n      one: 'помалку од минута',\n      other: 'помалку од {{count}} минути'\n    },\n\n    xMinutes: {\n      one: '1 минута',\n      other: '{{count}} минути'\n    },\n\n    aboutXHours: {\n      one: 'околу 1 час',\n      other: 'околу {{count}} часа'\n    },\n\n    xHours: {\n      one: '1 час',\n      other: '{{count}} часа'\n    },\n\n    xDays: {\n      one: '1 ден',\n      other: '{{count}} дена'\n    },\n\n    aboutXMonths: {\n      one: 'околу 1 месец',\n      other: 'околу {{count}} месеци'\n    },\n\n    xMonths: {\n      one: '1 месец',\n      other: '{{count}} месеци'\n    },\n\n    aboutXYears: {\n      one: 'околу 1 година',\n      other: 'околу {{count}} години'\n    },\n\n    xYears: {\n      one: '1 година',\n      other: '{{count}} години'\n    },\n\n    overXYears: {\n      one: 'повеќе од 1 година',\n      other: 'повеќе од {{count}} години'\n    },\n\n    almostXYears: {\n      one: 'безмалку 1 година',\n      other: 'безмалку {{count}} години'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'за ' + result\n      } else {\n        return 'пред ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in Romanian language the weekdays and months should be in the lowercase.\n  var months3char = ['ian', 'feb', 'mar', 'apr', 'mai', 'iun', 'iul', 'aug', 'sep', 'oct', 'noi', 'dec']\n  var monthsFull = ['ianuarie', 'februarie', 'martie', 'aprilie', 'mai', 'iunie', 'iulie', 'august', 'septembrie', 'octombrie', 'noiembrie', 'decembrie']\n  var weekdays2char = ['du', 'lu', 'ma', 'mi', 'jo', 'vi', 'sâ']\n  var weekdays3char = ['dum', 'lun', 'mar', 'mie', 'joi', 'vin', 'sâm']\n  var weekdaysFull = ['duminică', 'luni', 'marți', 'miercuri', 'joi', 'vineri', 'sâmbăta']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number.toString()\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Romanian locale.\n * @author Sergiu Munteanu [@jsergiu]{@link https://github.com/jsergiu}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'mai puțin de o secundă',\n      other: 'mai puțin de {{count}} secunde'\n    },\n\n    xSeconds: {\n      one: '1 secundă',\n      other: '{{count}} secunde'\n    },\n\n    halfAMinute: 'jumătate de minut',\n\n    lessThanXMinutes: {\n      one: 'mai puțin de un minut',\n      other: 'mai puțin de {{count}} minute'\n    },\n\n    xMinutes: {\n      one: '1 minut',\n      other: '{{count}} minute'\n    },\n\n    aboutXHours: {\n      one: 'circa 1 oră',\n      other: 'circa {{count}} ore'\n    },\n\n    xHours: {\n      one: '1 oră',\n      other: '{{count}} ore'\n    },\n\n    xDays: {\n      one: '1 zi',\n      other: '{{count}} zile'\n    },\n\n    aboutXMonths: {\n      one: 'circa 1 lună',\n      other: 'circa {{count}} luni'\n    },\n\n    xMonths: {\n      one: '1 lună',\n      other: '{{count}} luni'\n    },\n\n    aboutXYears: {\n      one: 'circa 1 an',\n      other: 'circa {{count}} ani'\n    },\n\n    xYears: {\n      one: '1 an',\n      other: '{{count}} ani'\n    },\n\n    overXYears: {\n      one: 'peste 1 an',\n      other: 'peste {{count}} ani'\n    },\n\n    almostXYears: {\n      one: 'aproape 1 an',\n      other: 'aproape {{count}} ani'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'în ' + result\n      } else {\n        return result + ' în urmă'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","import { Locale } from './locale';\n\nimport * as en from 'date-fns/locale/en';\nimport * as ru from 'date-fns/locale/ru';\nimport * as eo from 'date-fns/locale/eo';\nimport * as zh_cn from 'date-fns/locale/zh_cn';\nimport * as de from 'date-fns/locale/de';\nimport * as ja from 'date-fns/locale/ja';\nimport * as es from 'date-fns/locale/es';\nimport * as nl from 'date-fns/locale/nl';\nimport * as zh_tw from 'date-fns/locale/zh_tw';\nimport * as nb from 'date-fns/locale/nb';\nimport * as ca from 'date-fns/locale/ca';\nimport * as id from 'date-fns/locale/id';\nimport * as it from 'date-fns/locale/it';\nimport * as pl from 'date-fns/locale/pl';\nimport * as pt from 'date-fns/locale/pt';\nimport * as sv from 'date-fns/locale/sv';\nimport * as fr from 'date-fns/locale/fr';\nimport * as tr from 'date-fns/locale/tr';\nimport * as ko from 'date-fns/locale/ko';\nimport * as el from 'date-fns/locale/el';\nimport * as sk from 'date-fns/locale/sk';\nimport * as fil from 'date-fns/locale/fil';\nimport * as da from 'date-fns/locale/da';\nimport * as is from 'date-fns/locale/is';\nimport * as fi from 'date-fns/locale/fi';\nimport * as th from 'date-fns/locale/th';\nimport * as hr from 'date-fns/locale/hr';\nimport * as ar from 'date-fns/locale/ar';\nimport * as bg from 'date-fns/locale/bg';\nimport * as cs from 'date-fns/locale/cs';\nimport * as mk from 'date-fns/locale/mk';\nimport * as ro from 'date-fns/locale/ro';\n\nconst /** @type {?} */ localeArray: Array<[Locale, any]> = [\n  [ Locale.ARABIC, ar ],\n  [ Locale.BULGARIAN, bg ],\n  [ Locale.CATALAN, ca],\n  [ Locale.CHINESE_SIMPLIFIED, zh_cn ],\n  [ Locale.CHINESE_TRADITIONAL, zh_cn ],\n  [ Locale.CROATIAN, hr ],\n  [ Locale.CZECH, cs ],\n  [ Locale.DANISH, da ],\n  [ Locale.DUTCH, nl ],\n  [ Locale.ENGLISH, en ],\n  [ Locale.ESPERANTO, eo ],\n  [ Locale.FILIPINO, fil ],\n  [ Locale.FINNISH, fi ],\n  [ Locale.FRENCH, fr ],\n  [ Locale.GERMAN, de ],\n  [ Locale.GREEK, el ],\n  [ Locale.ICELANDIC, is ],\n  [ Locale.INDONESIAN, id ],\n  [ Locale.ITALIAN, it ],\n  [ Locale.JAPANESE, ja ],\n  [ Locale.KOREAN, ko ],\n  [ Locale.MACEDONIAN, mk ],\n  [ Locale.NORWEIGAN_BOKMAL, nb ],\n  [ Locale.POLISH, pl ],\n  [ Locale.PORTUGUESE, pt ],\n  [ Locale.ROMANIAN, ro ],\n  [ Locale.RUSSIAN, ru],\n  [ Locale.SLOVAK, sk ],\n  [ Locale.SPANISH, es ],\n  [ Locale.SWEDISH, sv ],\n  [ Locale.THAI, th ],\n  [ Locale.TURKISH, tr]\n];\n\nconst /** @type {?} */ localeMap = new Map<Locale, any>(localeArray);\n/**\n * @param {?} locale\n * @return {?}\n */\nexport function getLocale(locale: Locale) {\n    return localeMap.get(locale);\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { Locale } from './locale';\nimport { getLocale } from './locale-map';\n\n// Locale Manager by Aaron Sterling\n\nexport const /** @type {?} */ DEFAULT_LOCALE_TOKEN = new InjectionToken<Locale>('default locale');\nconst /** @type {?} */ DEFAULT_LOCALE: Locale = Locale.ENGLISH;\nexport class LocaleManager {\nprivate defaultLocale = DEFAULT_LOCALE;\nprivate localeToRevertTo = DEFAULT_LOCALE;\n/**\n * @param {?} userProvidedLocale\n */\nconstructor( userProvidedLocale: Locale) {\n        if (userProvidedLocale) {\n            this.defaultLocale = userProvidedLocale;\n            this.localeToRevertTo = userProvidedLocale;\n        }\n    }\n/**\n * @param {?} newDefaultLocale\n * @return {?}\n */\nsetDefaultLocale(newDefaultLocale: Locale) {\n        this.defaultLocale = newDefaultLocale;\n    }\n/**\n * @return {?}\n */\ngetDefaultLocale(): Locale {\n        return this.defaultLocale;\n    }\n/**\n * @return {?}\n */\ngetFullLocale() {\n        return getLocale(this.defaultLocale);\n    }\n/**\n * @return {?}\n */\nresetDefaultLocale() {\n        this.defaultLocale = this.localeToRevertTo;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Locale, decorators: [{ type: Inject, args: [DEFAULT_LOCALE_TOKEN, ] }, ]},\n];\n}\n\nfunction LocaleManager_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleManager.ctorParameters;\n/** @type {?} */\nLocaleManager.prototype.defaultLocale;\n/** @type {?} */\nLocaleManager.prototype.localeToRevertTo;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport format from 'date-fns/format';\n\nimport { DatePipeManager } from '../providers/date-pipe-manager';\nimport { LocaleManager } from '../providers/locale-manager/locale-manager';\nexport class DatePipe implements PipeTransform {\n/**\n * Input can be a string, number or Date\n * Pipe returns the output of the date-fns format function\n * @param {?} manager\n * @param {?} localeManager\n */\nconstructor(private manager: DatePipeManager,\nprivate localeManager: LocaleManager) {}\n/**\n * @param {?} value\n * @param {?=} dateFormat\n * @return {?}\n */\ntransform(value: string | number | Date, dateFormat?: string) {\n    const /** @type {?} */ formatToUse = this.manager.getDefaultFormat(dateFormat);\n    const /** @type {?} */ localeToUse = this.localeManager.getFullLocale();\n    return format(value, formatToUse, {locale: localeToUse});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'date',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePipeManager, },\n{type: LocaleManager, },\n];\n}\n\nfunction DatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipe.ctorParameters;\n/** @type {?} */\nDatePipe.prototype.manager;\n/** @type {?} */\nDatePipe.prototype.localeManager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var latestTimestamp = Math.max.apply(null, dates)\n  return new Date(latestTimestamp)\n}\n\nmodule.exports = max\n","import { Pipe, PipeTransform } from '@angular/core';\nimport max from 'date-fns/max';\nimport format from 'date-fns/format';\nimport { DatePipeManager } from '../providers/date-pipe-manager';\nimport { LocaleManager } from '../providers/locale-manager/locale-manager';\nexport class MaxDatePipe implements PipeTransform {\n/**\n * Returns the max date from an array of dates\n * @param {?} manager\n * @param {?} localeManager\n */\nconstructor(private manager: DatePipeManager,\nprivate localeManager: LocaleManager) {}\n/**\n * @param {?} range\n * @param {?=} dateFormat\n * @return {?}\n */\ntransform(range: Array<string | number | Date>, dateFormat?: string) {\n    const /** @type {?} */ formatToUse = this.manager.getDefaultFormat(dateFormat);\n    const /** @type {?} */ localeToUse = this.localeManager.getFullLocale();\n    return format(max(...range), formatToUse, {locale: localeToUse});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'maxDate',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePipeManager, },\n{type: LocaleManager, },\n];\n}\n\nfunction MaxDatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nMaxDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaxDatePipe.ctorParameters;\n/** @type {?} */\nMaxDatePipe.prototype.manager;\n/** @type {?} */\nMaxDatePipe.prototype.localeManager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n","import { Pipe, PipeTransform } from '@angular/core';\nimport min from 'date-fns/min';\nimport format from 'date-fns/format';\nimport { DatePipeManager } from '../providers/date-pipe-manager';\nimport { LocaleManager } from '../providers/locale-manager/locale-manager';\nexport class MinDatePipe implements PipeTransform {\n/**\n * Returns the min date from a range of dates\n * @param {?} manager\n * @param {?} localeManager\n */\nconstructor(private manager: DatePipeManager,\nprivate localeManager: LocaleManager) {}\n/**\n * @param {?} range\n * @param {?=} dateFormat\n * @return {?}\n */\ntransform(range: Array<string | number | Date>, dateFormat?: string) {\n    const /** @type {?} */ formatToUse = this.manager.getDefaultFormat(dateFormat);\n    const /** @type {?} */ localeToUse = this.localeManager.getFullLocale();\n    return format(min(...range), formatToUse, {locale: localeToUse});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'minDate',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePipeManager, },\n{type: LocaleManager, },\n];\n}\n\nfunction MinDatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nMinDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMinDatePipe.ctorParameters;\n/** @type {?} */\nMinDatePipe.prototype.manager;\n/** @type {?} */\nMinDatePipe.prototype.localeManager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft > timeRight) {\n    return -1\n  } else if (timeLeft < timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareDesc\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getTime() - dateRight.getTime()\n}\n\nmodule.exports = differenceInMilliseconds\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\nmodule.exports = differenceInCalendarMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft < timeRight) {\n    return -1\n  } else if (timeLeft > timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareAsc\n","var parse = require('../parse/index.js')\nvar differenceInCalendarMonths = require('../difference_in_calendar_months/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastMonthNotFull)\n}\n\nmodule.exports = differenceInMonths\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar differenceInMonths = require('../difference_in_months/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_TWO_MONTHS = 86400\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWords(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 1)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = distanceInWords(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWords(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWords(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = Math.round(seconds / 60) - offset\n  var months\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return localize('lessThanXSeconds', 5, localizeOptions)\n      } else if (seconds < 10) {\n        return localize('lessThanXSeconds', 10, localizeOptions)\n      } else if (seconds < 20) {\n        return localize('lessThanXSeconds', 20, localizeOptions)\n      } else if (seconds < 40) {\n        return localize('halfAMinute', null, localizeOptions)\n      } else if (seconds < 60) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', 1, localizeOptions)\n      }\n    } else {\n      if (minutes === 0) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', minutes, localizeOptions)\n      }\n    }\n\n  // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return localize('aboutXHours', 1, localizeOptions)\n\n  // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60)\n    return localize('aboutXHours', hours, localizeOptions)\n\n  // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return localize('xDays', 1, localizeOptions)\n\n  // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('aboutXMonths', months, localizeOptions)\n  }\n\n  months = differenceInMonths(dateRight, dateLeft)\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', nearestMonth, localizeOptions)\n\n  // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12\n    var years = Math.floor(months / 12)\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return localize('aboutXYears', years, localizeOptions)\n\n    // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return localize('overXYears', years, localizeOptions)\n\n    // N years 9 months up to N year 12 months\n    } else {\n      return localize('almostXYears', years + 1, localizeOptions)\n    }\n  }\n}\n\nmodule.exports = distanceInWords\n","import { Pipe, PipeTransform } from '@angular/core';\nimport distanceInWords from 'date-fns/distance_in_words';\nimport { DatePipeManager } from '../providers/date-pipe-manager';\nimport { LocaleManager } from '../providers/locale-manager/locale-manager';\n/**\n * distance in words pipe by Aaron Sterling\n * takes as input an array of two dates\n * outputs the value of the date-fns DistanceInWords function\n */\nexport class DistanceBetweenDatesPipe implements PipeTransform {\n/**\n * @param {?} manager\n * @param {?} localeManager\n */\nconstructor (private manager: DatePipeManager,\nprivate localeManager: LocaleManager) {}\n/**\n * @param {?} dates\n * @return {?}\n */\ntransform(dates: Array<string | number | Date>) {\n    const /** @type {?} */ localeToUse = this.localeManager.getFullLocale();\n    if (this.manager.secondsIncludedInDistance()) {\n      return distanceInWords(dates[0], dates[1], {includeSeconds: true, locale: localeToUse});\n    } else {\n      return distanceInWords(dates[0], dates[1], {includeSeconds: false, locale: localeToUse});\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'distanceBetweenDates',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePipeManager, },\n{type: LocaleManager, },\n];\n}\n\nfunction DistanceBetweenDatesPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDistanceBetweenDatesPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDistanceBetweenDatesPipe.ctorParameters;\n/** @type {?} */\nDistanceBetweenDatesPipe.prototype.manager;\n/** @type {?} */\nDistanceBetweenDatesPipe.prototype.localeManager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","var distanceInWords = require('../distance_in_words/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param {Date|String|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = distanceInWordsToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = distanceInWordsToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = distanceInWordsToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = distanceInWordsToNow\n","// time ago pipe\n\n\nimport { Pipe, PipeTransform, OnDestroy } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/interval';\nimport'rxjs/add/operator/startWith';\n\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now';\n\nimport { DatePipeManager, AgoPipeOptions } from '../providers/date-pipe-manager';\nimport { LocaleManager } from '../providers/locale-manager/locale-manager';\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\nprivate refresher: Subscription = new Subscription();\nprivate refreshNow = false;\nprivate previousAgoExpression = '';\nprivate options: AgoPipeOptions;\n/**\n * @param {?} manager\n * @param {?} localeManager\n */\nconstructor(manager: DatePipeManager,\nprivate localeManager: LocaleManager) {\n        this.options = manager.getAgoPipeOptions();\n        this.refresher = Observable.interval(this.options.refreshRate).startWith(0).subscribe(_ => this.refreshNow = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.refresher.unsubscribe();\n    }\n/**\n * @param {?} inputTime\n * @return {?}\n */\ntransform(inputTime: string | number | Date) {\n        if (this.refreshNow) {\n            this.refreshNow = false;\n            const /** @type {?} */ newAgoExpression = this.agoExpression(inputTime);\n            this.previousAgoExpression = newAgoExpression;\n            return newAgoExpression;\n        } else {\n            return this.previousAgoExpression;\n        }\n    }\n/**\n * @param {?} inputTime\n * @return {?}\n */\nprivate agoExpression(inputTime: string | number | Date): string {\n        const /** @type {?} */ localeToUse = this.localeManager.getFullLocale();\n        const /** @type {?} */ timeText = distanceInWordsToNow(inputTime, {includeSeconds: this.options.includeSeconds, locale: localeToUse});\n        const /** @type {?} */ expression = this.options.prefix + timeText + this.options.suffix;\n        return expression;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'ago', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePipeManager, },\n{type: LocaleManager, },\n];\n}\n\nfunction TimeAgoPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeAgoPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeAgoPipe.ctorParameters;\n/** @type {?} */\nTimeAgoPipe.prototype.refresher;\n/** @type {?} */\nTimeAgoPipe.prototype.refreshNow;\n/** @type {?} */\nTimeAgoPipe.prototype.previousAgoExpression;\n/** @type {?} */\nTimeAgoPipe.prototype.options;\n/** @type {?} */\nTimeAgoPipe.prototype.localeManager;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DatePipe } from './date/date';\nimport { MaxDatePipe } from './max-date/max-date';\nimport { MinDatePipe } from './min-date/min-date';\nimport { DistanceBetweenDatesPipe } from './distance-between-dates/distance-between-dates';\nimport { TimeAgoPipe } from './time-ago-pipe/time-ago-pipe';\nimport { DatePipeManager, DATE_PIPE_CONFIGURATION_TOKEN, DatePipeConfiguration } from './providers/date-pipe-manager';\nimport { LocaleManager, DEFAULT_LOCALE_TOKEN } from './providers/locale-manager/locale-manager';\nimport { Locale } from './providers/locale-manager/locale';\nexport class DatePipesModule {\n/**\n * @param {?=} config\n * @param {?=} locale\n * @return {?}\n */\nstatic forRoot(config?: DatePipeConfiguration, locale?: Locale): ModuleWithProviders {\n        return {\n            ngModule: DatePipesModule,\n            providers: [\n                        {provide: DATE_PIPE_CONFIGURATION_TOKEN, useValue: config},\n                        {provide: DEFAULT_LOCALE_TOKEN, useValue: locale}\n                       ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [ DatePipe,\n                    MaxDatePipe,\n                    MinDatePipe,\n                    DistanceBetweenDatesPipe,\n                    TimeAgoPipe\n    ],\n    providers: [\n                    DatePipeManager,\n                    LocaleManager\n    ],\n    imports: [],\n    exports: [\n                    DatePipe,\n                    MaxDatePipe,\n                    MinDatePipe,\n                    DistanceBetweenDatesPipe,\n                    TimeAgoPipe\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatePipesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDatePipesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipesModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["is_date","argument","Date","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","parse_1","dirtyOptions","isDate","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","length","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","getTimezoneOffset","start_of_year","dirtyDate","cleanDate","parse","setFullYear","getFullYear","setHours","start_of_day","MILLISECONDS_IN_DAY","difference_in_calendar_days","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDay","startOfDayRight","timestampLeft","timestampRight","Math","round","get_day_of_year","differenceInCalendarDays","startOfYear","start_of_week","weekStartsOn","getDay","setDate","getDate","start_of_iso_week","startOfWeek","get_iso_year","fourthOfJanuaryOfNextYear","startOfNextYear","startOfISOWeek","fourthOfJanuaryOfThisYear","startOfThisYear","start_of_iso_year","getISOYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","get_iso_week","startOfISOYear","is_valid","isNaN","TypeError","toString","call","commonFormatterKeys","build_formatting_tokens_reg_exp","formatters","formatterKeys","key","hasOwnProperty","push","formattingTokens","concat","sort","reverse","RegExp","join","build_format_locale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","MMM","getMonth","MMMM","dd","ddd","dddd","A","getHours","a","aa","forEach","formatterToken","number","rem100","ordinal","formattingTokensRegExp","buildFormattingTokensRegExp","en","distanceInWords","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","localize","count","options","result","addSuffix","comparison","buildDistanceInWordsLocale","format","buildFormatLocale","M","MM","addLeadingZeros","Q","ceil","D","DD","DDD","getDayOfYear","DDDD","d","E","W","getISOWeek","WW","YY","substr","YYYY","GG","String","GGGG","H","HH","h","hh","m","getMinutes","mm","s","getSeconds","ss","S","floor","getMilliseconds","SS","SSS","Z","formatTimezone","ZZ","X","x","delimeter","sign","absOffset","abs","targetLength","output","format_1","dirtyFormatStr","formatStr","locale","localeFormatters","enLocale","isValid","i","formatter","input","match","Function","buildFormatFn","formatFn","DATE_PIPE_CONFIGURATION_TOKEN","InjectionToken","INITIAL_DEFAULT_DATE_FORMAT","DEFAULT_DATE_DISTANCE_INCLUDES_SECONDS","DEFAULT_AGO_PIPE_OPTIONS","refreshRate","prefix","suffix","includeSeconds","DatePipeManager","userProvidedConfig","this","agoPipeOptions","Object","assign","defaultDateFormat","initializeDefaultDateFormat","dateDistanceIncludesSeconds","optionsToRevertTo","prototype","defaultFormat","setDefaultFormat","formatToRevertTo","getDefaultFormat","overrideFormat","dateFormat","newFormat","resetDefaultFormat","includeSecondsInDistance","doNotIncludeSecondsInDistance","secondsIncludedInDistance","setAgoPipeOptions","getAgoPipeOptions","resetAgoPipeOptions","declension","scheme","undefined","rem10","singularNominative","singularGenitive","pluralGenitive","buildLocalizeTokenFn","future","regular","past","decorators","type","Injectable","ctorParameters","Inject","args","build_format_locale$2","monthsShort","monthsGenitive","meridiem","Do","Wo","commonFormatters","ru","_","build_format_locale$4","eo","build_format_locale$6","zh_cn","build_format_locale$8","de","standalone","withPreposition","usageGroup","build_format_locale$10","ja","build_format_locale$12","es","build_format_locale$14","nl","build_format_locale$16","nb","build_format_locale$18","ca","build_format_locale$20","id","build_format_locale$22","it","declension$1","group","twoFour","declensionGroup","build_format_locale$24","pl","build_format_locale$26","pt","build_format_locale$28","sv","singular","plural","wordMapping","translation","build_format_locale$30","monthToken","dayOfMonthToken","fr","build_format_locale$32","suffixes","1","2","3","4","5","6","7","8","9","10","20","30","50","60","70","80","90","100","tr","extraWordTokens","extraWord","indexOf","build_format_locale$34","ko","build_format_locale$36","ordinalGenders","el","declension$2","prefixPreposition","preposition","suffixPreposition","build_format_locale$38","sk","string","filter","substring","charAt","toLowerCase","build_format_locale$40","fil","build_format_locale$42","da","build_format_locale$44","is","build_format_locale$46","fi","futureSeconds","text","futureMinutes","futureHours","futureMonths","futureYears","futureTense","distance","build_format_locale$48","th","build_format_locale$50","hr","withPrepositionAgo","withPrepositionIn","dual","build_format_locale$52","ar","build_format_locale$54","timeOfDay","bg","declension$3","prefixPreposition$1","suffixPreposition$1","build_format_locale$56","cs","build_format_locale$58","mk","build_format_locale$60","ro","localeMap","Map","DEFAULT_LOCALE_TOKEN","DEFAULT_LOCALE","LocaleManager","userProvidedLocale","defaultLocale","localeToRevertTo","setDefaultLocale","newDefaultLocale","getDefaultLocale","getFullLocale","get","resetDefaultLocale","Locale","DatePipe","manager","localeManager","transform","value","formatToUse","localeToUse","Pipe","name","max_1","dates","Array","arguments","map","latestTimestamp","max","apply","MaxDatePipe","range","min_1","earliestTimestamp","min","MinDatePipe","compare_desc","timeLeft","timeRight","difference_in_milliseconds","dateLeft","dateRight","difference_in_seconds","differenceInMilliseconds","difference_in_calendar_months","compare_asc","difference_in_months","compareAsc","difference","differenceInCalendarMonths","setMonth","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","distance_in_words","dirtyDateToCompare","compareDesc","localizeOptions","Boolean","months","differenceInSeconds","differenceInMonths","monthsSinceStartOfYear","years","DistanceBetweenDatesPipe","distance_in_words_to_now","now","TimeAgoPipe","_this","refresher","Subscription","refreshNow","previousAgoExpression","Observable","interval","startWith","subscribe","ngOnDestroy","unsubscribe","inputTime","newAgoExpression","agoExpression","timeText","distanceInWordsToNow","pure","DatePipesModule","forRoot","config","ngModule","providers","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"+fAmBA,IAAAA,EAJA,SAAiBC,GACf,OAAOA,aAAoBC,MCdzBC,EAAuB,KACvBC,EAAyB,IACzBC,EAA4B,EAE5BC,EAA8B,OAC9BC,EAAsB,IAGtBC,EAAe,YACfC,GACF,gBACA,gBACA,iBAGEC,EAAiB,WACjBC,GACF,eACA,eACA,gBAIEC,EAAe,aACfC,EAAgB,cAChBC,EAAiB,uBACjBC,EAAgB,eAChBC,EAAiB,wBAGjBC,EAAe,sBACfC,EAAiB,+BACjBC,EAAmB,wCAGnBC,EAAqB,aACrBC,EAAsB,QACtBC,EAAuB,kBACvBC,EAAyB,2BA4Q7B,SAAAC,EAAuBC,EAASC,EAAMC,GACpCD,EAAOA,GAAQ,EACfC,EAAMA,GAAO,EACb,IAAIC,EAAO,IAAI1B,KAAK,GACpB0B,EAAKC,eAAeJ,EAAS,EAAG,GAChC,IACIK,EAAc,EAAPJ,EAAWC,EAAM,GADHC,EAAKG,aAAe,GAG7C,OADAH,EAAKI,WAAWJ,EAAKK,aAAeH,GAC7BF,EAGT,IAAAM,EApPA,SAAgBjC,EAAUkC,GACxB,GAAIC,EAAOnC,GAET,OAAO,IAAIC,KAAKD,EAASoC,WACpB,GAAwB,iBAAbpC,EAChB,OAAO,IAAIC,KAAKD,GAGlB,IACIqC,GADUH,OACiBG,iBAE7BA,EADsB,MAApBA,EACiBjC,EAEAkC,OAAOD,GAG5B,IAAIE,EA+BN,SAA0BC,GACxB,IAEIC,EAFAF,KACAG,EAAQF,EAAWG,MAAMtC,GAW7B,GARIC,EAAoBsC,KAAKF,EAAM,KACjCH,EAAYZ,KAAO,KACnBc,EAAaC,EAAM,KAEnBH,EAAYZ,KAAOe,EAAM,GACzBD,EAAaC,EAAM,IAGjBD,EAAY,CACd,IAAII,EAAQ1B,EAAmB2B,KAAKL,GAChCI,GACFN,EAAYQ,KAAON,EAAWO,QAAQH,EAAM,GAAI,IAChDN,EAAYU,SAAWJ,EAAM,IAE7BN,EAAYQ,KAAON,EAIvB,OAAOF,EAtDWW,CAAgBlD,GAE9BmD,EAuDN,SAAoBX,EAAYH,GAC9B,IAGIQ,EAHAO,EAAgB5C,EAAe6B,GAC/BgB,EAAkB3C,EAAiB2B,GAMvC,GADAQ,EAAQpC,EAAeqC,KAAKN,IAAea,EAAgBP,KAAKN,GACrD,CACT,IAAIc,EAAaT,EAAM,GACvB,OACEU,KAAMC,SAASF,EAAY,IAC3BG,eAAgBjB,EAAWkB,MAAMJ,EAAWK,SAMhD,GADAd,EAAQtC,EAAauC,KAAKN,IAAeY,EAAcN,KAAKN,GACjD,CACT,IAAIoB,EAAgBf,EAAM,GAC1B,OACEU,KAAoC,IAA9BC,SAASI,EAAe,IAC9BH,eAAgBjB,EAAWkB,MAAME,EAAcD,SAKnD,OACEJ,KAAM,MAnFcM,CAAUtB,EAAYZ,KAAMU,GAC9CkB,EAAOJ,EAAgBI,KAGvB5B,EAmFN,SAAoBa,EAAYe,GAE9B,GAAa,OAATA,EACF,OAAO,KAGT,IAAIV,EACAlB,EACAmC,EACArC,EAGJ,GAA0B,IAAtBe,EAAWmB,OAGb,OAFAhC,EAAO,IAAI1B,KAAK,IACX2B,eAAe2B,GACb5B,EAKT,GADAkB,EAAQlC,EAAamC,KAAKN,GAKxB,OAHAb,EAAO,IAAI1B,KAAK,GAChB6D,EAAQN,SAASX,EAAM,GAAI,IAAM,EACjClB,EAAKC,eAAe2B,EAAMO,GACnBnC,EAKT,GADAkB,EAAQjC,EAAckC,KAAKN,GAChB,CACTb,EAAO,IAAI1B,KAAK,GAChB,IAAI8D,EAAYP,SAASX,EAAM,GAAI,IAEnC,OADAlB,EAAKC,eAAe2B,EAAM,EAAGQ,GACtBpC,EAKT,GADAkB,EAAQhC,EAAeiC,KAAKN,GACjB,CACTb,EAAO,IAAI1B,KAAK,GAChB6D,EAAQN,SAASX,EAAM,GAAI,IAAM,EACjC,IAAInB,EAAM8B,SAASX,EAAM,GAAI,IAE7B,OADAlB,EAAKC,eAAe2B,EAAMO,EAAOpC,GAC1BC,EAKT,GADAkB,EAAQ/B,EAAcgC,KAAKN,GAGzB,OADAf,EAAO+B,SAASX,EAAM,GAAI,IAAM,EACzBtB,EAAagC,EAAM9B,GAK5B,GADAoB,EAAQ9B,EAAe+B,KAAKN,GACjB,CACTf,EAAO+B,SAASX,EAAM,GAAI,IAAM,EAChC,IAAImB,EAAYR,SAASX,EAAM,GAAI,IAAM,EACzC,OAAOtB,EAAagC,EAAM9B,EAAMuC,GAIlC,OAAO,KAjJIC,CAFUd,EAAgBM,eAEAF,GAErC,GAAI5B,EAAM,CACR,IAEIuC,EAFAC,EAAYxC,EAAKS,UACjBW,EAAO,EAeX,OAZIR,EAAYQ,OACdA,EA4IN,SAAoBN,GAClB,IAAII,EACAuB,EACAC,EAIJ,GADAxB,EAAQ7B,EAAa8B,KAAKL,GAGxB,OADA2B,EAAQE,WAAWzB,EAAM,GAAGG,QAAQ,IAAK,OACzB,GAAM9C,EAKxB,GADA2C,EAAQ5B,EAAe6B,KAAKL,GAI1B,OAFA2B,EAAQZ,SAASX,EAAM,GAAI,IAC3BwB,EAAUC,WAAWzB,EAAM,GAAGG,QAAQ,IAAK,MACnCoB,EAAQ,GAAMlE,EACpBmE,EAAUlE,EAKd,GADA0C,EAAQ3B,EAAiB4B,KAAKL,GACnB,CACT2B,EAAQZ,SAASX,EAAM,GAAI,IAC3BwB,EAAUb,SAASX,EAAM,GAAI,IAC7B,IAAI0B,EAAUD,WAAWzB,EAAM,GAAGG,QAAQ,IAAK,MAC/C,OAAQoB,EAAQ,GAAMlE,EACpBmE,EAAUlE,EACA,IAAVoE,EAIJ,OAAO,KA7KIC,CAAUjC,EAAYQ,OAG3BR,EAAYU,UA6KIwB,EA5KKlC,EAAYU,SAAnCiB,GAiLJrB,EAAQzB,EAAoB0B,KAAK2B,IAExB,GAIT5B,EAAQxB,EAAqByB,KAAK2B,KAEhCC,EAA0C,GAAzBlB,SAASX,EAAM,GAAI,IACf,MAAbA,EAAM,IAAe6B,EAAiBA,IAIhD7B,EAAQvB,EAAuBwB,KAAK2B,KAElCC,EAA0C,GAAzBlB,SAASX,EAAM,GAAI,IAAWW,SAASX,EAAM,GAAI,IAC7C,MAAbA,EAAM,IAAe6B,EAAiBA,GAGzC,IAjMHR,EAAS,IAAIjE,KAAKkE,EAAYpB,GAAM4B,oBACpCT,EAAS,IAAIjE,KAAKkE,EAAYpB,EAAOmB,EAAS/D,GAAwBwE,qBAGjE,IAAI1E,KAAKkE,EAAYpB,EAAOmB,EAAS/D,GAqKhD,IAAwBsE,EAClB5B,EACA6B,EArKF,OAAO,IAAIzE,KAAKD,IC5FpB,IAAA4E,EARA,SAAsBC,GACpB,IAAIC,EAAYC,EAAMF,GAClBlD,EAAO,IAAI1B,KAAK,GAGpB,OAFA0B,EAAKqD,YAAYF,EAAUG,cAAe,EAAG,GAC7CtD,EAAKuD,SAAS,EAAG,EAAG,EAAG,GAChBvD,GCCT,IAAAwD,EANA,SAAqBN,GACnB,IAAIlD,EAAOoD,EAAMF,GAEjB,OADAlD,EAAKuD,SAAS,EAAG,EAAG,EAAG,GAChBvD,GCnBLxB,EAAyB,IACzBiF,EAAsB,MAqC1B,IAAAC,EAfA,SAAmCC,EAAeC,GAChD,IAAIC,EAAiBC,EAAWH,GAC5BI,EAAkBD,EAAWF,GAE7BI,EAAgBH,EAAepD,UACjCoD,EAAeb,oBAAsBxE,EACnCyF,EAAiBF,EAAgBtD,UACnCsD,EAAgBf,oBAAsBxE,EAKxC,OAAO0F,KAAKC,OAAOH,EAAgBC,GAAkBR,ICXvD,IAAAW,EAPA,SAAuBlB,GACrB,IAAIlD,EAAOoD,EAAMF,GAGjB,OAFWmB,EAAyBrE,EAAMsE,EAAYtE,IAC/B,GCezB,IAAAuE,EAZA,SAAsBrB,EAAW3C,GAC/B,IAAIiE,EAAejE,GAAgBI,OAAOJ,EAAaiE,eAAsB,EAEzExE,EAAOoD,EAAMF,GACbnD,EAAMC,EAAKyE,SACXvE,GAAQH,EAAMyE,EAAe,EAAI,GAAKzE,EAAMyE,EAIhD,OAFAxE,EAAK0E,QAAQ1E,EAAK2E,UAAYzE,GAC9BF,EAAKuD,SAAS,EAAG,EAAG,EAAG,GAChBvD,GCVT,IAAA4E,EAJA,SAAyB1B,GACvB,OAAO2B,EAAY3B,GAAYsB,aAAc,KCuB/C,IAAAM,EAvBA,SAAqB5B,GACnB,IAAIlD,EAAOoD,EAAMF,GACbtB,EAAO5B,EAAKsD,cAEZyB,EAA4B,IAAIzG,KAAK,GACzCyG,EAA0B1B,YAAYzB,EAAO,EAAG,EAAG,GACnDmD,EAA0BxB,SAAS,EAAG,EAAG,EAAG,GAC5C,IAAIyB,EAAkBC,EAAeF,GAEjCG,EAA4B,IAAI5G,KAAK,GACzC4G,EAA0B7B,YAAYzB,EAAM,EAAG,GAC/CsD,EAA0B3B,SAAS,EAAG,EAAG,EAAG,GAC5C,IAAI4B,EAAkBF,EAAeC,GAErC,OAAIlF,EAAKS,WAAauE,EAAgBvE,UAC7BmB,EAAO,EACL5B,EAAKS,WAAa0E,EAAgB1E,UACpCmB,EAEAA,EAAO,GCTlB,IAAAwD,EATA,SAAyBlC,GACvB,IAAItB,EAAOyD,EAAWnC,GAClBoC,EAAkB,IAAIhH,KAAK,GAI/B,OAHAgH,EAAgBjC,YAAYzB,EAAM,EAAG,GACrC0D,EAAgB/B,SAAS,EAAG,EAAG,EAAG,GACvB0B,EAAeK,ICvBxBC,EAAuB,OA6B3B,IAAAC,EAVA,SAAqBtC,GACnB,IAAIlD,EAAOoD,EAAMF,GACbhD,EAAO+E,EAAejF,GAAMS,UAAYgF,EAAezF,GAAMS,UAKjE,OAAOyD,KAAKC,MAAMjE,EAAOqF,GAAwB,GCInD,IAAAG,EARA,SAAkBxC,GAChB,GAAI1C,EAAO0C,GACT,OAAQyC,MAAMzC,GAEd,MAAM,IAAI0C,UAAUC,SAASC,KAAK5C,GAAa,gCCoEnD,IClGI6C,GACF,IAAK,KAAM,IAAK,IAAK,KAAM,MAAO,OAAQ,IAC1C,IAAK,IAAK,KAAM,KAAM,OAAQ,KAAM,OACpC,IAAK,KAAM,IAAK,KAAM,IAAK,KAC3B,IAAK,KAAM,IAAK,KAAM,MACtB,IAAK,KAAM,IAAK,KAsBlB,IAAAC,EAnBA,SAAsCC,GACpC,IAAIC,KACJ,IAAK,IAAIC,KAAOF,EACVA,EAAWG,eAAeD,IAC5BD,EAAcG,KAAKF,GAIvB,IAAIG,EAAmBP,EACpBQ,OAAOL,GACPM,OACAC,UAKH,OAJ6B,IAAIC,OAC/B,2BAAkCJ,EAAiBK,KAAK,KAAO,MAAO,MCkE1E,IAAAC,EArFA,WAKE,IAAIC,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC5HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAClFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,IAAIC,EAASD,EAAS,IACtB,GAAIC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOD,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAGtB,OAAOA,EAAS,KAtBLE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC7DxDqC,GACEC,gBHRF,WACE,IAAIC,GACFC,kBACEC,IAAK,qBACLC,MAAO,+BAGTC,UACEF,IAAK,WACLC,MAAO,qBAGTE,YAAa,gBAEbC,kBACEJ,IAAK,qBACLC,MAAO,+BAGTI,UACEL,IAAK,WACLC,MAAO,qBAGTK,aACEN,IAAK,eACLC,MAAO,yBAGTM,QACEP,IAAK,SACLC,MAAO,mBAGTO,OACER,IAAK,QACLC,MAAO,kBAGTQ,cACET,IAAK,gBACLC,MAAO,0BAGTS,SACEV,IAAK,UACLC,MAAO,oBAGTU,aACEX,IAAK,eACLC,MAAO,yBAGTW,QACEZ,IAAK,SACLC,MAAO,mBAGTY,YACEb,IAAK,cACLC,MAAO,wBAGTa,cACEd,IAAK,gBACLC,MAAO,2BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAERA,EAAS,OAIbA,IGlFQG,GACjBC,OAAQC,sDC2GV,IAAIhE,GAEFiE,EAAK,SAAUlK,GACb,OAAOA,EAAKsH,WAAa,GAI3B6C,GAAM,SAAUnK,GACd,OAAOoK,EAAgBpK,EAAKsH,WAAa,EAAG,IAI9C+C,EAAK,SAAUrK,GACb,OAAOkE,KAAKoG,MAAMtK,EAAKsH,WAAa,GAAK,IAI3CiD,EAAK,SAAUvK,GACb,OAAOA,EAAK2E,WAId6F,GAAM,SAAUxK,GACd,OAAOoK,EAAgBpK,EAAK2E,UAAW,IAIzC8F,IAAO,SAAUzK,GACf,OAAO0K,EAAa1K,IAItB2K,KAAQ,SAAU3K,GAChB,OAAOoK,EAAgBM,EAAa1K,GAAO,IAI7C4K,EAAK,SAAU5K,GACb,OAAOA,EAAKyE,UAIdoG,EAAK,SAAU7K,GACb,OAAOA,EAAKyE,UAAY,GAI1BqG,EAAK,SAAU9K,GACb,OAAO+K,EAAW/K,IAIpBgL,GAAM,SAAUhL,GACd,OAAOoK,EAAgBW,EAAW/K,GAAO,IAI3CiL,GAAM,SAAUjL,GACd,OAAOoK,EAAgBpK,EAAKsD,cAAe,GAAG4H,OAAO,IAIvDC,KAAQ,SAAUnL,GAChB,OAAOoK,EAAgBpK,EAAKsD,cAAe,IAI7C8H,GAAM,SAAUpL,GACd,OAAOqL,OAAOhG,EAAWrF,IAAOkL,OAAO,IAIzCI,KAAQ,SAAUtL,GAChB,OAAOqF,EAAWrF,IAIpBuL,EAAK,SAAUvL,GACb,OAAOA,EAAK4H,YAId4D,GAAM,SAAUxL,GACd,OAAOoK,EAAgBpK,EAAK4H,WAAY,IAI1C6D,EAAK,SAAUzL,GACb,IAAIyC,EAAQzC,EAAK4H,WACjB,OAAc,IAAVnF,EACK,GACEA,EAAQ,GACVA,EAAQ,GAERA,GAKXiJ,GAAM,SAAU1L,GACd,OAAOoK,EAAgBnE,EAAc,EAAEjG,GAAO,IAIhD2L,EAAK,SAAU3L,GACb,OAAOA,EAAK4L,cAIdC,GAAM,SAAU7L,GACd,OAAOoK,EAAgBpK,EAAK4L,aAAc,IAI5CE,EAAK,SAAU9L,GACb,OAAOA,EAAK+L,cAIdC,GAAM,SAAUhM,GACd,OAAOoK,EAAgBpK,EAAK+L,aAAc,IAI5CE,EAAK,SAAUjM,GACb,OAAOkE,KAAKgI,MAAMlM,EAAKmM,kBAAoB,MAI7CC,GAAM,SAAUpM,GACd,OAAOoK,EAAgBlG,KAAKgI,MAAMlM,EAAKmM,kBAAoB,IAAK,IAIlEE,IAAO,SAAUrM,GACf,OAAOoK,EAAgBpK,EAAKmM,kBAAmB,IAIjDG,EAAK,SAAUtM,GACb,OAAOuM,EAAevM,EAAKgD,oBAAqB,MAIlDwJ,GAAM,SAAUxM,GACd,OAAOuM,EAAevM,EAAKgD,sBAI7ByJ,EAAK,SAAUzM,GACb,OAAOkE,KAAKgI,MAAMlM,EAAKS,UAAY,MAIrCiM,EAAK,SAAU1M,GACb,OAAOA,EAAKS,YAuChB,SAAA8L,EAAyBhK,EAAQoK,GAC/BA,EAAYA,GAAa,GACzB,IAAIC,EAAOrK,EAAS,EAAI,IAAM,IAC1BsK,EAAY3I,KAAK4I,IAAIvK,GAErBG,EAAUmK,EAAY,GAC1B,OAAOD,EAAOxC,EAFFlG,KAAKgI,MAAMW,EAAY,IAEE,GAAKF,EAAYvC,EAAgB1H,EAAS,GAGjF,SAAA0H,EAA0BnC,EAAQ8E,GAEhC,IADA,IAAIC,EAAS9I,KAAK4I,IAAI7E,GAAQpC,WACvBmH,EAAOhL,OAAS+K,GACrBC,EAAS,IAAMA,EAEjB,OAAOA,EAGT,IAAAC,EA7OA,SAAiB/J,EAAWgK,EAAgB3M,GAC1C,IAAI4M,EAAYD,EAAiB7B,OAAO6B,GAAkB,2BAGtDE,GAFU7M,OAEO6M,OACjBC,EAAmBC,EAAStD,OAAO/D,WACnCmC,EAAyBkF,EAAStD,OAAO5B,uBACzCgF,GAAUA,EAAOpD,QAAUoD,EAAOpD,OAAO/D,aAC3CoH,EAAmBD,EAAOpD,OAAO/D,WAE7BmH,EAAOpD,OAAO5B,yBAChBA,EAAyBgF,EAAOpD,OAAO5B,yBAI3C,IAAIpI,EAAOoD,EAAMF,GAEjB,OAAKqK,EAAQvN,GAwKf,SAAwBmN,EAAWE,EAAkBjF,GACnD,IAGIoF,EACAC,EAuB2BC,EA3B3B3M,EAAQoM,EAAUQ,MAAMvF,GACxBpG,EAASjB,EAAMiB,OAInB,IAAKwL,EAAI,EAAGA,EAAIxL,EAAQwL,IACtBC,EAAYJ,EAAiBtM,EAAMyM,KAAOvH,EAAWlF,EAAMyM,IAEzDzM,EAAMyM,GADJC,KAoByBC,EAjBO3M,EAAMyM,IAkBlCG,MAAM,YACPD,EAAMrM,QAAQ,UAAW,IAE3BqM,EAAMrM,QAAQ,MAAO,KAjB5B,OAAO,SAAUrB,GAEf,IADA,IAAIgN,EAAS,GACJQ,EAAI,EAAGA,EAAIxL,EAAQwL,IACtBzM,EAAMyM,aAAcI,SACtBZ,GAAUjM,EAAMyM,GAAGxN,EAAMiG,GAEzB+G,GAAUjM,EAAMyM,GAGpB,OAAOR,GA5LMa,CAAcV,EAAWE,EAAkBjF,EAEnD0F,CAAS9N,GALP,gBC7FE+N,EAAgC,IAAIC,EAAAA,eAAqC,2BAIhFC,EAA8B,gBAC9BC,GAAyC,EACzCC,GACFC,YAAa,KACbC,OAAQ,GACRC,OAAQ,OACRC,gBAAgB,GAEpBC,GAAA,WASA,SAAAA,EAGiBC,GANLC,KAAZH,eAA6BL,EACjBQ,KAAZC,eAA6BC,OAAOC,UAAWV,GAInCM,GAAsBA,EAAmBK,kBACzCJ,KAAKK,4BAA4BN,EAAmBK,mBAEpDJ,KAAKK,4BAA4Bd,GAGjCQ,GAAsBA,EAAmBO,8BACgC,IAAnDP,EAAmBO,4BACzCN,KAAKH,eAAiBE,EAAmBO,4BAClCP,GAAgF,kBAAnDA,EAAmBO,8BACyB,IAAnDP,EAAmBO,8BAChDN,KAAKH,gBAAiB,GAGtBE,GAAsBA,EAAmBE,iBACzCD,KAAKC,eAAiBC,OAAOC,UAAWH,KAAKC,eAAgBF,EAAmBE,gBAChFD,KAAKO,kBAAoBL,OAAOC,UAAWH,KAAKC,wBAOvDH,EAALU,UAAAH,4BAAK,SAAAI,GACGT,KAAKU,iBAAiBD,GACtBT,KAAKW,iBAAmBF,GAMhCX,EAAAU,UAAAI,iBAAA,SADKC,GAEG,OAAIA,GAEOb,KAAKc,YAQxBhB,EAAAU,UAAAE,iBAAA,SAJKK,GAKGf,KAJKc,WAAaC,GAS1BjB,EAAAU,UAAAQ,mBAAA,WACQhB,KANKc,WAAad,KAAKW,kBAW/Bb,EAAAU,UAAAS,yBAAA,WACQjB,KANKH,gBAAiB,GAW9BC,EAAAU,UAAAU,8BAAA,WACQlB,KARKH,gBAAiB,GAa9BC,EAAAU,UAAAW,0BAAA,WACQ,OAVOnB,KAAKH,gBAgBpBC,EAAAU,UAAAY,kBAAA,SAXKnG,GAYG+E,KAXKC,eAAiBC,OAAOC,UAAWH,KAAKC,eAAgBhF,IAgBrE6E,EAAAU,UAAAa,kBAAA,WANE,OANarB,KAAKC,gBAkBpBH,EAAAU,UAAAc,oBAAA,WACQtB,KAfKC,eAAiBC,OAAOC,UAAWH,KAAKO,sBAlFrD,GC3BA,SAAAgB,GAAqBC,EAAQxG,GAE3B,GAAIwG,EAAOxH,MAAQyH,WAAuB,IAAVzG,EAC9B,OAAOwG,EAAOxH,IAGhB,IAAI0H,EAAQ1G,EAAQ,GAChBxB,EAASwB,EAAQ,IAGrB,OAAc,IAAV0G,GAA0B,KAAXlI,EACVgI,EAAOG,mBAAmBhP,QAAQ,YAAaqI,GAG5C0G,GAAS,GAAKA,GAAS,IAAOlI,EAAS,IAAMA,EAAS,IACzDgI,EAAOI,iBAAiBjP,QAAQ,YAAaqI,GAI7CwG,EAAOK,eAAelP,QAAQ,YAAaqI,GAItD,SAAA8G,GAA+BN,GAC7B,OAAO,SAAUxG,EAAOC,GACtB,OAAIA,EAAQE,UACNF,EAAQG,WAAa,EACnBoG,EAAOO,OACFR,GAAWC,EAAOO,OAAQ/G,GAE1B,SAAWuG,GAAWC,EAAOQ,QAAShH,GAG3CwG,EAAOS,KACFV,GAAWC,EAAOS,KAAMjH,GAExBuG,GAAWC,EAAOQ,QAAShH,GAAS,SAIxCuG,GAAWC,EAAOQ,QAAShH,IDuEjC8E,GAAPoC,aACEC,KAAMC,EAAAA,aAGPtC,GAADuC,eAAC,WAAA,QAkBAF,KAAMV,UAAWS,aAAeC,KAAMG,EAAAA,OAAQC,MAAOlD,QE7CtD,IAAAmD,GAtFA,WAEE,IAAIC,GAAe,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAAS,QACxGrK,GAAc,SAAU,UAAW,OAAQ,SAAU,MAAO,OAAQ,OAAQ,SAAU,WAAY,UAAW,SAAU,WACvHsK,GAAkB,SAAU,UAAW,QAAS,SAAU,MAAO,OAAQ,OAAQ,UAAW,WAAY,UAAW,SAAU,WAC7HrK,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,cAAe,cAAe,UAAW,QAAS,UAAW,UAAW,WACxFoK,GAAY,OAAQ,OAAQ,MAAO,UAEnCpL,GAEFoB,IAAO,SAAUrH,GACf,OAAOmR,EAAYnR,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,IAAIyC,EAAQzC,EAAK4H,WACjB,OAAInF,GAAS,GACJ4O,EAAS,GACP5O,GAAS,GACX4O,EAAS,GACP5O,GAAS,EACX4O,EAAS,GAETA,EAAS,IAIpBC,GAAM,SAAUtR,EAAMiG,GACpB,OAAOA,EAAWsE,EAAEvK,GAAQ,MAG9BuR,GAAM,SAAUvR,EAAMiG,GACpB,OAAOA,EAAW6E,EAAE9K,GAAQ,OAyBhC,OArBAiG,EAAW4B,EAAI5B,EAAW0B,EAC1B1B,EAAW6B,GAAK7B,EAAW0B,GAGF,IAAK,MAAO,IAAK,KACxBI,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAOA,EAAW+B,GAAgBhI,GAAQ,SAMd,IAAK,KAAM,MAClB+H,QAAQ,SAAUC,GACzC/B,EAAW+B,EAAiB,SAAW,SAAUhI,EAAMwR,GAErD,OADgBvL,EAAW+B,IAAmBwJ,EAAiBxJ,IAC9ChI,EAAMwR,GAAoB,IAAMJ,EAAepR,EAAKsH,gBAKvErB,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC7ExDwL,IACElJ,gBFqCF,WACE,IAAIC,GACFC,iBAAkB+H,IAChBE,SACEhI,IAAK,iBACL2H,mBAAoB,2BACpBC,iBAAkB,0BAClBC,eAAgB,2BAElBE,QACE/H,IAAK,4BACL2H,mBAAoB,sCACpBC,iBAAkB,sCAClBC,eAAgB,wCAIpB3H,SAAU4H,IACRE,SACEL,mBAAoB,oBACpBC,iBAAkB,oBAClBC,eAAgB,oBAElBI,MACEN,mBAAoB,0BACpBC,iBAAkB,0BAClBC,eAAgB,0BAElBE,QACEJ,mBAAoB,0BACpBC,iBAAkB,0BAClBC,eAAgB,4BAIpB1H,YAAa,SAAU6I,EAAG/H,GACxB,OAAIA,EAAQE,UACNF,EAAQG,WAAa,EAChB,kBAEA,kBAIJ,aAGThB,iBAAkB0H,IAChBE,SACEhI,IAAK,gBACL2H,mBAAoB,0BACpBC,iBAAkB,yBAClBC,eAAgB,0BAElBE,QACE/H,IAAK,2BACL2H,mBAAoB,qCACpBC,iBAAkB,qCAClBC,eAAgB,uCAIpBxH,SAAUyH,IACRE,SACEL,mBAAoB,mBACpBC,iBAAkB,mBAClBC,eAAgB,mBAElBI,MACEN,mBAAoB,yBACpBC,iBAAkB,yBAClBC,eAAgB,yBAElBE,QACEJ,mBAAoB,yBACpBC,iBAAkB,yBAClBC,eAAgB,2BAIpBvH,YAAawH,IACXE,SACEL,mBAAoB,uBACpBC,iBAAkB,wBAClBC,eAAgB,yBAElBE,QACEJ,mBAAoB,qCACpBC,iBAAkB,sCAClBC,eAAgB,0CAIpBtH,OAAQuH,IACNE,SACEL,mBAAoB,gBACpBC,iBAAkB,iBAClBC,eAAgB,qBAIpBrH,MAAOsH,IACLE,SACEL,mBAAoB,iBACpBC,iBAAkB,gBAClBC,eAAgB,oBAIpBpH,aAAcqH,IACZE,SACEL,mBAAoB,yBACpBC,iBAAkB,0BAClBC,eAAgB,2BAElBE,QACEJ,mBAAoB,uCACpBC,iBAAkB,wCAClBC,eAAgB,4CAIpBnH,QAASoH,IACPE,SACEL,mBAAoB,kBACpBC,iBAAkB,mBAClBC,eAAgB,uBAIpBlH,YAAamH,IACXE,SACEL,mBAAoB,uBACpBC,iBAAkB,sBAClBC,eAAgB,uBAElBE,QACEJ,mBAAoB,qCACpBC,iBAAkB,sCAClBC,eAAgB,wCAIpBjH,OAAQkH,IACNE,SACEL,mBAAoB,gBACpBC,iBAAkB,iBAClBC,eAAgB,mBAIpBhH,WAAYiH,IACVE,SACEL,mBAAoB,wBACpBC,iBAAkB,uBAClBC,eAAgB,wBAElBE,QACEJ,mBAAoB,kCACpBC,iBAAkB,mCAClBC,eAAgB,qCAIpB/G,aAAcgH,IACZE,SACEL,mBAAoB,sBACpBC,iBAAkB,uBAClBC,eAAgB,uBAElBE,QACEJ,mBAAoB,4BACpBC,iBAAkB,6BAClBC,eAAgB,gCAUtB,OACE9G,SANF,SAAmBvI,EAAOwI,EAAOC,GAE/B,OADAA,EAAUA,MACHnB,EAAsBtH,GAAOwI,EAAOC,KEzN5BI,GACjBC,OAAQC,0DC2DV,IAAA0H,GAlEA,WACE,IAAI9K,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,QAAS,SAAU,OAAQ,QAAS,QAAS,UAAW,YAAa,UAAW,WAAY,YACjIC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,UAAW,QAAS,QAAS,WAAY,QAAS,WAAY,UAC9EC,GAAqB,SAAU,UAC/BC,GAAqB,SAAU,UAC/BC,GAAgB,eAAgB,eAEhCnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAOA,EAAW+B,GAAgBhI,GAAQ,SAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCzDxD2L,IACErJ,gBCRF,WACE,IAAIC,GACFC,kBACEC,IAAK,oBACLC,MAAO,gCAGTC,UACEF,IAAK,YACLC,MAAO,sBAGTE,YAAa,aAEbC,kBACEJ,IAAK,mBACLC,MAAO,+BAGTI,UACEL,IAAK,WACLC,MAAO,qBAGTK,aACEN,IAAK,oBACLC,MAAO,8BAGTM,QACEP,IAAK,SACLC,MAAO,mBAGTO,OACER,IAAK,SACLC,MAAO,mBAGTQ,cACET,IAAK,sBACLC,MAAO,gCAGTS,SACEV,IAAK,WACLC,MAAO,qBAGTU,aACEX,IAAK,oBACLC,MAAO,8BAGTW,QACEZ,IAAK,SACLC,MAAO,mBAGTY,YACEb,IAAK,gBACLC,MAAO,0BAGTa,cACEd,IAAK,iBACLC,MAAO,4BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,QAAUF,EAEV,SAAWA,EAIfA,IDlFQG,GACjBC,OAAQC,0DEmDV,IAAA4H,GA1DA,WACE,IAAIhL,GAAe,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OACnFC,GAAc,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,OACjFC,GAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/CC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAgB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DG,GAAgB,KAAM,MAEtBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,YAiB7B,OAZAwB,EAAW4B,EAAI5B,EAAW6B,GAAK7B,EAAW0B,EAAI,SAAU3H,GACtD,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAI7C,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAWhC6F,eANZI,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC3CxD6L,IACEvJ,gBCVF,WACE,IAAIC,GACFC,kBACEC,IAAK,SACLC,MAAO,kBAGTC,UACEF,IAAK,MACLC,MAAO,eAGTE,YAAa,MAEbC,kBACEJ,IAAK,UACLC,MAAO,mBAGTI,UACEL,IAAK,OACLC,MAAO,gBAGTM,QACEP,IAAK,OACLC,MAAO,gBAGTK,aACEN,IAAK,UACLC,MAAO,mBAGTO,OACER,IAAK,MACLC,MAAO,eAGTQ,cACET,IAAK,UACLC,MAAO,mBAGTS,SACEV,IAAK,OACLC,MAAO,gBAGTU,aACEX,IAAK,SACLC,MAAO,kBAGTW,QACEZ,IAAK,MACLC,MAAO,eAGTY,YACEb,IAAK,SACLC,MAAO,kBAGTa,cACEd,IAAK,SACLC,MAAO,mBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChBF,EAAS,IAETA,EAAS,IAIbA,IDhFQG,GACjBC,OAAQC,0DEiEV,IAAA8H,GA1EA,WAKE,IAAIlL,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,SAAU,UAAW,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACzHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,UAAW,SAAU,WAAY,WAAY,aAAc,UAAW,WACtFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC3DxD+L,IACEzJ,gBCVF,WACE,IAAIC,GACFC,kBACEwJ,YACEvJ,IAAK,2BACLC,MAAO,kCAETuJ,iBACExJ,IAAK,4BACLC,MAAO,mCAIXC,UACEqJ,YACEvJ,IAAK,eACLC,MAAO,sBAETuJ,iBACExJ,IAAK,gBACLC,MAAO,uBAIXE,aACEoJ,WAAY,oBACZC,gBAAiB,uBAGnBpJ,kBACEmJ,YACEvJ,IAAK,0BACLC,MAAO,iCAETuJ,iBACExJ,IAAK,2BACLC,MAAO,kCAIXI,UACEkJ,YACEvJ,IAAK,cACLC,MAAO,qBAETuJ,iBACExJ,IAAK,eACLC,MAAO,sBAIXK,aACEiJ,YACEvJ,IAAK,mBACLC,MAAO,0BAETuJ,iBACExJ,IAAK,oBACLC,MAAO,2BAIXM,QACEgJ,YACEvJ,IAAK,cACLC,MAAO,qBAETuJ,iBACExJ,IAAK,eACLC,MAAO,sBAIXO,OACE+I,YACEvJ,IAAK,UACLC,MAAO,kBAETuJ,iBACExJ,IAAK,YACLC,MAAO,oBAKXQ,cACE8I,YACEvJ,IAAK,iBACLC,MAAO,yBAETuJ,iBACExJ,IAAK,mBACLC,MAAO,2BAIXS,SACE6I,YACEvJ,IAAK,YACLC,MAAO,oBAETuJ,iBACExJ,IAAK,cACLC,MAAO,sBAIXU,aACE4I,YACEvJ,IAAK,gBACLC,MAAO,wBAETuJ,iBACExJ,IAAK,kBACLC,MAAO,0BAIXW,QACE2I,YACEvJ,IAAK,WACLC,MAAO,mBAETuJ,iBACExJ,IAAK,aACLC,MAAO,qBAIXY,YACE0I,YACEvJ,IAAK,oBACLC,MAAO,4BAETuJ,iBACExJ,IAAK,sBACLC,MAAO,8BAIXa,cACEyI,YACEvJ,IAAK,gBACLC,MAAO,wBAETuJ,iBACExJ,IAAK,kBACLC,MAAO,2BAgCb,OACEc,SA5BF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAIIC,EAJAuI,GAFJxI,EAAUA,OAEeE,UACrBrB,EAAsBtH,GAAOgR,gBAC7B1J,EAAsBtH,GAAO+Q,WAWjC,OAPErI,EADwB,iBAAfuI,EACAA,EACU,IAAVzI,EACAyI,EAAWzJ,IAEXyJ,EAAWxJ,MAAMtH,QAAQ,YAAaqI,GAG7CC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAER,OAASA,EAIbA,IDtKQG,GACjBC,OAAQC,0DE6DV,IAAAmI,GAtEA,WACE,IAAIvL,GAAe,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OACnFC,GAAc,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,OACjFC,GAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/CC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAgB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,KAAM,MAEtBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCvDxDoM,IACE9J,gBCVF,WACE,IAAIC,GACFC,kBACEC,IAAK,OACLC,MAAO,gBAGTC,UACEF,IAAK,KACLC,MAAO,cAGTE,YAAa,SAEbC,kBACEJ,IAAK,OACLC,MAAO,gBAGTI,UACEL,IAAK,KACLC,MAAO,cAGTK,aACEN,IAAK,SACLC,MAAO,kBAGTM,QACEP,IAAK,MACLC,MAAO,eAGTO,OACER,IAAK,KACLC,MAAO,cAGTQ,cACET,IAAK,SACLC,MAAO,kBAGTS,SACEV,IAAK,MACLC,MAAO,eAGTU,aACEX,IAAK,QACLC,MAAO,iBAGTW,QACEZ,IAAK,KACLC,MAAO,cAGTY,YACEb,IAAK,OACLC,MAAO,gBAGTa,cACEd,IAAK,OACLC,MAAO,iBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChBF,EAAS,IAETA,EAAS,IAIbA,IDhFQG,GACjBC,OAAQC,0DE6DV,IAAAqI,GAtEA,WACE,IAAIzL,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAW,YAAa,aAC9HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,UAAW,QAAS,SAAU,YAAa,SAAU,UAAW,UAChFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCtDxDsM,IACEhK,gBCXF,WACE,IAAIC,GACFC,kBACEC,IAAK,sBACLC,MAAO,+BAGTC,UACEF,IAAK,YACLC,MAAO,sBAGTE,YAAa,eAEbC,kBACEJ,IAAK,qBACLC,MAAO,8BAGTI,UACEL,IAAK,WACLC,MAAO,qBAGTK,aACEN,IAAK,sBACLC,MAAO,gCAGTM,QACEP,IAAK,SACLC,MAAO,mBAGTO,OACER,IAAK,QACLC,MAAO,kBAGTQ,cACET,IAAK,qBACLC,MAAO,gCAGTS,SACEV,IAAK,QACLC,MAAO,mBAGTU,aACEX,IAAK,qBACLC,MAAO,+BAGTW,QACEZ,IAAK,QACLC,MAAO,kBAGTY,YACEb,IAAK,eACLC,MAAO,yBAGTa,cACEd,IAAK,aACLC,MAAO,wBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAER,QAAUA,EAIdA,ID/EQG,GACjBC,OAAQC,0DE4DV,IAAAuI,GAtEA,WACE,IAAI3L,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,WAAY,YAAa,UAAW,WAAY,YAC9HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,UAAW,UAAW,WAAY,YAAa,UAAW,YACpFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCvDxDwM,IACElK,gBCVF,WACE,IAAIC,GACFC,kBACEC,IAAK,yBACLC,MAAO,iCAGTC,UACEF,IAAK,YACLC,MAAO,sBAGTE,YAAa,mBAEbC,kBACEJ,IAAK,wBACLC,MAAO,gCAGTI,UACEL,IAAK,aACLC,MAAO,qBAGTK,aACEN,IAAK,iBACLC,MAAO,0BAGTM,QACEP,IAAK,QACLC,MAAO,iBAGTO,OACER,IAAK,QACLC,MAAO,mBAGTQ,cACET,IAAK,mBACLC,MAAO,8BAGTS,SACEV,IAAK,UACLC,MAAO,qBAGTU,aACEX,IAAK,kBACLC,MAAO,2BAGTW,QACEZ,IAAK,SACLC,MAAO,kBAGTY,YACEb,IAAK,kBACLC,MAAO,2BAGTa,cACEd,IAAK,eACLC,MAAO,yBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,QAAUF,EAEVA,EAAS,WAIbA,IDhFQG,GACjBC,OAAQC,0DE6DV,IAAAyI,GAtEA,WACE,IAAI7L,GAAe,OAAQ,OAAQ,OAAQ,QAAS,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACvGC,GAAc,SAAU,UAAW,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACzHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,UAC9EC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxD0M,IACEpK,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,wBACLC,MAAO,iCAGTC,UACEF,IAAK,aACLC,MAAO,sBAGTE,YAAa,kBAEbC,kBACEJ,IAAK,wBACLC,MAAO,iCAGTI,UACEL,IAAK,aACLC,MAAO,sBAGTK,aACEN,IAAK,gBACLC,MAAO,yBAGTM,QACEP,IAAK,UACLC,MAAO,mBAGTO,OACER,IAAK,SACLC,MAAO,mBAGTQ,cACET,IAAK,iBACLC,MAAO,2BAGTS,SACEV,IAAK,WACLC,MAAO,qBAGTU,aACEX,IAAK,eACLC,MAAO,sBAGTW,QACEZ,IAAK,SACLC,MAAO,gBAGTY,YACEb,IAAK,cACLC,MAAO,qBAGTa,cACEd,IAAK,gBACLC,MAAO,wBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAERA,EAAS,SAIbA,IDjFQG,GACjBC,OAAQC,0DEyEV,IAAA2I,GAjFA,WACE,IAAI/L,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,QAAS,SAAU,OAAQ,QAAS,OAAQ,OAAQ,SAAU,QAAS,WAAY,UAAW,WAAY,YACxHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,WAAY,UAAW,UAAW,WAAY,SAAU,YAAa,YACrFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,OAAQA,GACN,KAAK,EACH,MAAO,KACT,KAAK,EACH,MAAO,KACT,KAAK,EACH,MAAO,KACT,KAAK,EACH,MAAO,KACT,QACE,OAAOA,EAAS,KArBTE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxD4M,IACEtK,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,mBACLC,MAAO,6BAGTC,UACEF,IAAK,UACLC,MAAO,oBAGTE,YAAa,YAEbC,kBACEJ,IAAK,mBACLC,MAAO,6BAGTI,UACEL,IAAK,UACLC,MAAO,oBAGTK,aACEN,IAAK,0BACLC,MAAO,kCAGTM,QACEP,IAAK,SACLC,MAAO,mBAGTO,OACER,IAAK,QACLC,MAAO,kBAGTQ,cACET,IAAK,wBACLC,MAAO,kCAGTS,SACEV,IAAK,QACLC,MAAO,mBAGTU,aACEX,IAAK,wBACLC,MAAO,iCAGTW,QACEZ,IAAK,QACLC,MAAO,kBAGTY,YACEb,IAAK,eACLC,MAAO,yBAGTa,cACEd,IAAK,iBACLC,MAAO,2BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAER,MAAQA,EAIZA,IDjFQG,GACjBC,OAAQC,0DE2EV,IAAA6I,GAnFA,WAKE,IAAIjM,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,UAAW,YAAa,UAAW,WAAY,YAC7HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,QAAS,SAAU,OAAQ,QAAS,QAAS,SACvEC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,OAAQA,GACN,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,QACE,MAAO,MAAQA,GAnBRE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC3DxD8M,IACExK,gBCVF,WACE,IAAIC,GACFC,kBACEC,IAAK,sBACLC,MAAO,+BAGTC,UACEF,IAAK,UACLC,MAAO,mBAGTE,YAAa,iBAEbC,kBACEJ,IAAK,sBACLC,MAAO,+BAGTI,UACEL,IAAK,UACLC,MAAO,mBAGTK,aACEN,IAAK,gBACLC,MAAO,yBAGTM,QACEP,IAAK,QACLC,MAAO,iBAGTO,OACER,IAAK,SACLC,MAAO,kBAGTQ,cACET,IAAK,kBACLC,MAAO,2BAGTS,SACEV,IAAK,UACLC,MAAO,mBAGTU,aACEX,IAAK,kBACLC,MAAO,2BAGTW,QACEZ,IAAK,UACLC,MAAO,mBAGTY,YACEb,IAAK,qBACLC,MAAO,8BAGTa,cACEd,IAAK,iBACLC,MAAO,2BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,eAAiBF,EAEjBA,EAAS,aAIbA,IDhFQG,GACjBC,OAAQC,0DE6DV,IAAA+I,GAtEA,WACE,IAAInM,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,YAAa,UAAW,WAAY,YACpIC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,WAAY,SAAU,UAAW,YAAa,UAAW,UAAW,UACpFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxDgN,IACE1K,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,qBACLC,MAAO,6BAGTC,UACEF,IAAK,aACLC,MAAO,qBAGTE,YAAa,iBAEbC,kBACEJ,IAAK,oBACLC,MAAO,4BAGTI,UACEL,IAAK,YACLC,MAAO,oBAGTK,aACEN,IAAK,eACLC,MAAO,uBAGTM,QACEP,IAAK,SACLC,MAAO,iBAGTO,OACER,IAAK,YACLC,MAAO,oBAGTQ,cACET,IAAK,gBACLC,MAAO,wBAGTS,SACEV,IAAK,UACLC,MAAO,kBAGTU,aACEX,IAAK,gBACLC,MAAO,wBAGTW,QACEZ,IAAK,UACLC,MAAO,kBAGTY,YACEb,IAAK,iBACLC,MAAO,yBAGTa,cACEd,IAAK,gBACLC,MAAO,yBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,OAASF,EAETA,EAAS,MAIbA,IDjFQG,GACjBC,OAAQC,0DEYV,SAAAiJ,GAAqBhD,EAAQxG,EAAOtI,GAClCA,EAAOA,GAAQ,UACf,IAAI+R,EAxBN,SAA0BjD,EAAQxG,GAChC,GAAc,IAAVA,EACF,OAAOwG,EAAOxH,IAGhB,IAAIR,EAASwB,EAAQ,IAGrB,GAAIxB,GAAU,IAAMA,EAAS,GAC3B,OAAOgI,EAAOvH,MAGhB,IAAIyH,EAAQlI,EAAS,GAGrB,OAAIkI,GAAS,GAAKA,GAAS,EAClBF,EAAOkD,QAGTlD,EAAOvH,MAKF0K,CAAgBnD,EAAQxG,GAEpC,OADgByJ,EAAM/R,IAAS+R,GACd9R,QAAQ,YAAaqI,GC2CxC,IAAA4J,GAnEA,WACE,IAAIzM,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,OAAQ,SAAU,WAAY,MAAO,WAAY,SAAU,WAAY,WAAY,cAAe,WAAY,YACvIC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,SAAU,OAAQ,MAAO,MAAO,OAAQ,QAAS,QAClEC,GAAgB,YAAa,eAAgB,SAAU,QAAS,WAAY,SAAU,UACtFoK,GAAY,SAAU,OAAQ,cAAe,aAE7CpL,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,IAAIyC,EAAQzC,EAAK4H,WACjB,OAAInF,GAAS,GACJ4O,EAAS,GACP5O,GAAS,GACX4O,EAAS,GACP5O,GAAS,EACX4O,EAAS,GAETA,EAAS,KAiBtB,OAZApL,EAAW4B,EAAI5B,EAAW0B,EAC1B1B,EAAW6B,GAAK7B,EAAW0B,GAGF,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCI,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GAEjD,OAAOA,EAAW+B,GAAgBhI,GAAM6F,eAK1CI,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxDsN,IACEhL,gBFmBF,WACE,IAAIC,GACFC,kBACEC,KACEgI,QAAS,oBACTC,KAAM,oBACNF,OAAQ,qBAEV2C,QAAS,8BACTzK,MAAO,8BAGTC,UACEF,KACEgI,QAAS,UACTC,KAAM,UACNF,OAAQ,WAEV2C,QAAS,oBACTzK,MAAO,oBAGTE,aACEH,IAAK,aACL0K,QAAS,aACTzK,MAAO,cAGTG,kBACEJ,KACEgI,QAAS,mBACTC,KAAM,mBACNF,OAAQ,oBAEV2C,QAAS,6BACTzK,MAAO,6BAGTI,UACEL,KACEgI,QAAS,SACTC,KAAM,SACNF,OAAQ,UAEV2C,QAAS,mBACTzK,MAAO,mBAGTK,aACEN,KACEgI,QAAS,gBACTC,KAAM,gBACNF,OAAQ,iBAEV2C,QAAS,0BACTzK,MAAO,0BAGTM,QACEP,KACEgI,QAAS,UACTC,KAAM,UACNF,OAAQ,WAEV2C,QAAS,oBACTzK,MAAO,oBAGTO,OACER,KACEgI,QAAS,QACTC,KAAM,QACNF,OAAQ,WAEV2C,QAAS,gBACTzK,MAAO,iBAGTQ,cACET,IAAK,gBACL0K,QAAS,2BACTzK,MAAO,4BAGTS,SACEV,IAAK,UACL0K,QAAS,qBACTzK,MAAO,sBAGTU,aACEX,IAAK,YACL0K,QAAS,uBACTzK,MAAO,uBAGTW,QACEZ,IAAK,MACL0K,QAAS,iBACTzK,MAAO,iBAGTY,YACEb,IAAK,YACL0K,QAAS,uBACTzK,MAAO,uBAGTa,cACEd,IAAK,aACL0K,QAAS,wBACTzK,MAAO,yBAmBX,OACEc,SAhBF,SAAmBvI,EAAOwI,EAAOC,GAC/BA,EAAUA,MAEV,IAAIuG,EAAS1H,EAAsBtH,GACnC,OAAKyI,EAAQE,UAITF,EAAQG,WAAa,EAChB,MAAQmG,GAAWC,EAAQxG,EAAO,UAElCuG,GAAWC,EAAQxG,EAAO,QAAU,QANpCuG,GAAWC,EAAQxG,KE3IbK,GACjBC,OAAQC,0DC6DV,IAAAuJ,GAtEA,WACE,IAAI3M,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,YAAa,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,WAAY,UAAW,WAAY,YAC/HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,UAAW,gBAAiB,cAAe,eAAgB,eAAgB,cAAe,UAC1GC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxDwN,IACElL,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,sBACLC,MAAO,+BAGTC,UACEF,IAAK,YACLC,MAAO,sBAGTE,YAAa,cAEbC,kBACEJ,IAAK,qBACLC,MAAO,8BAGTI,UACEL,IAAK,WACLC,MAAO,qBAGTK,aACEN,IAAK,yBACLC,MAAO,mCAGTM,QACEP,IAAK,SACLC,MAAO,mBAGTO,OACER,IAAK,QACLC,MAAO,kBAGTQ,cACET,IAAK,wBACLC,MAAO,mCAGTS,SACEV,IAAK,QACLC,MAAO,mBAGTU,aACEX,IAAK,wBACLC,MAAO,kCAGTW,QACEZ,IAAK,QACLC,MAAO,kBAGTY,YACEb,IAAK,gBACLC,MAAO,0BAGTa,cACEd,IAAK,cACLC,MAAO,yBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,WAAaF,EAEb,MAAQA,EAIZA,IDjFQG,GACjBC,OAAQC,0DE6DV,IAAAyJ,GArEA,WACE,IAAI7M,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,OAAQ,QAAS,MAAO,OAAQ,OAAQ,UAAW,YAAa,UAAW,WAAY,YAC5HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,SAAU,SAAU,SAAU,UAAW,SAAU,UAC7EG,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BqD,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAexE,OAXAnB,EAAW0B,EAAI1B,EAAW6B,GAC1B7B,EAAW4B,EAAI5B,EAAW6B,IAGD,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCC,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,IAAIC,EAASD,EAAS,IACtB,GAAIC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACL,KAAK,EACH,OAAOD,EAAS,KAGtB,OAAOA,EAAS,KAnBLE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC/CxD0N,IACEpL,gBCTF,WACE,IAAIC,GACFC,kBACEmL,SAAU,sBACVC,OAAQ,gCAGVjL,UACEgL,SAAU,YACVC,OAAQ,sBAGVhL,YAAa,gBAEbC,kBACE8K,SAAU,qBACVC,OAAQ,+BAGV9K,UACE6K,SAAU,WACVC,OAAQ,qBAGV7K,aACE4K,SAAU,mBACVC,OAAQ,4BAGV5K,QACE2K,SAAU,WACVC,OAAQ,oBAGV3K,OACE0K,SAAU,SACVC,OAAQ,mBAGV1K,cACEyK,SAAU,mBACVC,OAAQ,6BAGVzK,SACEwK,SAAU,WACVC,OAAQ,qBAGVxK,aACEuK,SAAU,iBACVC,OAAQ,wBAGVvK,QACEsK,SAAU,SACVC,OAAQ,gBAGVtK,YACEqK,SAAU,cACVC,OAAQ,qBAGVrK,cACEoK,SAAU,gBACVC,OAAQ,wBAIRC,GACF,OACA,KACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,QA2BF,OACErK,SAzBF,SAAmBvI,EAAOwI,EAAOC,GAC/BA,EAAUA,MAEV,IACIC,EADAmK,EAAcvL,EAAsBtH,GAUxC,OAPE0I,EADyB,iBAAhBmK,EACAA,EACU,IAAVrK,GAAeA,EAAQ,EACvBqK,EAAYF,OAAOxS,QAAQ,YAAaqI,EAAQ,GAAKoK,EAAYpK,GAASA,GAE1EqK,EAAYH,SAGnBjK,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAERA,EAAS,SAIbA,IDlGQG,GACjBC,OAAQC,0DE+GV,IAAA+J,GAvHA,WACE,IAAInN,GAAe,QAAS,QAAS,OAAQ,OAAQ,MAAO,OAAQ,SAAU,OAAQ,QAAS,OAAQ,OAAQ,QAC3GC,GAAc,UAAW,UAAW,OAAQ,QAAS,MAAO,OAAQ,UAAW,OAAQ,YAAa,UAAW,WAAY,YAC3HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACjEC,GAAgB,WAAY,QAAS,QAAS,WAAY,QAAS,WAAY,UAC/EC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,WAAY,kBAAmB,WAE/CnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,IAAIyC,EAAQzC,EAAK4H,WAEjB,OAAInF,GAAS,GACJ2E,EAAa,GAGlB3E,GAAS,GACJ2E,EAAa,GAGfA,EAAa,IAKtBmK,GAAM,SAAUvR,EAAMiG,GACpB,OAgDW,KADSgC,EA/CGhC,EAAW6E,EAAE9K,IAiD/B,MAGFiI,EAAS,IALlB,IAA0BA,IAdxB,OA3BuB,IAAK,IAAK,MAAO,IAAK,KAC7BF,QAAQ,SAAUC,GAChC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OA+BW,KADUgC,EA9BGhC,EAAW+B,GAAgBhI,IAgC9C,MAGFiI,EAAS,IALlB,IAA2BA,MAlBL,MAAO,QACdF,QAAQ,SAAUkM,GAC7BhO,EAAW,MAAQgO,GAAc,SAAUjU,EAAMwR,GAC/C,IAAI0C,EAAqC,IAAnBlU,EAAK2E,UACvB,KACA,IAGJ,OAF0BsB,EAAWiO,IAAoB1C,EAAiB0C,IAE/ClU,EAAMwR,GAAoB,IAAMvL,EAAWgO,GAAYjU,OAKpFiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC5FxDkO,IACE5L,gBCVF,WACE,IAAIC,GACFC,kBACEC,IAAK,sBACLC,MAAO,+BAGTC,UACEF,IAAK,YACLC,MAAO,sBAGTE,YAAa,cAEbC,kBACEJ,IAAK,qBACLC,MAAO,8BAGTI,UACEL,IAAK,WACLC,MAAO,qBAGTK,aACEN,IAAK,kBACLC,MAAO,4BAGTM,QACEP,IAAK,UACLC,MAAO,oBAGTO,OACER,IAAK,SACLC,MAAO,mBAGTQ,cACET,IAAK,iBACLC,MAAO,0BAGTS,SACEV,IAAK,SACLC,MAAO,kBAGTU,aACEX,IAAK,eACLC,MAAO,yBAGTW,QACEZ,IAAK,OACLC,MAAO,iBAGTY,YACEb,IAAK,eACLC,MAAO,yBAGTa,cACEd,IAAK,eACLC,MAAO,0BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,QAAUF,EAEV,UAAYA,EAIhBA,IDhFQG,GACjBC,OAAQC,0DE8FV,IAAAmK,GAvGA,WAKE,IAAIvN,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,OAAQ,QAAS,OAAQ,QAAS,QAAS,UAAW,SAAU,UAAW,QAAS,OAAQ,QAAS,UACnHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,QAAS,YAAa,OAAQ,WAAY,WAAY,OAAQ,aAC9EC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,IAAIoM,GACFC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,IAAK,SAGP,GAAe,IAAXtN,EACF,MAAO,SAGT,IAAIyE,EAAIzE,EAAS,GAIjB,OAAOA,GAAUoM,EAAS3H,IAAM2H,EAHxBpM,EAAS,IAAMyE,IAGwB2H,EAFvCpM,GAAU,IAAM,IAAM,OAtCnBE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC5DxDuP,IACEjN,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,mBACLC,MAAO,0BAGTC,UACEF,IAAK,WACLC,MAAO,oBAGTE,YAAa,eAEbC,kBACEJ,IAAK,mBACLC,MAAO,0BAGTI,UACEL,IAAK,WACLC,MAAO,oBAGTK,aACEN,IAAK,kBACLC,MAAO,2BAGTM,QACEP,IAAK,SACLC,MAAO,kBAGTO,OACER,IAAK,QACLC,MAAO,iBAGTQ,cACET,IAAK,gBACLC,MAAO,yBAGTS,SACEV,IAAK,OACLC,MAAO,gBAGTU,aACEX,IAAK,iBACLC,MAAO,0BAGTW,QACEZ,IAAK,QACLC,MAAO,iBAGTY,YACEb,IAAK,iBACLC,MAAO,0BAGTa,cACEd,IAAK,kBACLC,MAAO,4BAIP8M,GACF,mBACA,mBACA,cA+BF,OACEhM,SA7BF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,GAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UAAW,CACrB,IAAI6L,EAAY,GAKhB,OAJID,EAAgBE,QAAQzU,IAAU,IACpCwU,EAAY,aAGV/L,EAAQG,WAAa,EAChBF,EAAS8L,EAAY,UAErB9L,EAAS8L,EAAY,QAIhC,OAAO9L,ID5FQG,GACjBC,OAAQC,0DE8DV,IAAA2L,GAtEA,WACE,IAAI/O,GAAe,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OACnFC,GAAc,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OAClFC,GAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/CC,GAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/CC,GAAgB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,KAAM,MAEtBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxD4P,IACEtN,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,QACLC,MAAO,iBAGTC,UACEF,IAAK,KACLC,MAAO,cAGTE,YAAa,MAEbC,kBACEJ,IAAK,QACLC,MAAO,iBAGTI,UACEL,IAAK,KACLC,MAAO,cAGTK,aACEN,IAAK,QACLC,MAAO,iBAGTM,QACEP,IAAK,MACLC,MAAO,eAGTO,OACER,IAAK,KACLC,MAAO,cAGTQ,cACET,IAAK,QACLC,MAAO,iBAGTS,SACEV,IAAK,MACLC,MAAO,eAGTU,aACEX,IAAK,OACLC,MAAO,gBAGTW,QACEZ,IAAK,KACLC,MAAO,cAGTY,YACEb,IAAK,QACLC,MAAO,iBAGTa,cACEd,IAAK,QACLC,MAAO,kBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChBF,EAAS,KAETA,EAAS,KAIbA,IDjFQG,GACjBC,OAAQC,0DE4EV,IAAA6L,GApFA,WACE,IAAIjP,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,OAC9FC,GAAc,aAAc,cAAe,UAAW,WAAY,QAAS,UAAW,UAAW,YAAa,cAAe,YAAa,YAAa,cACvJsK,GAAkB,aAAc,cAAe,UAAW,WAAY,QAAS,UAAW,UAAW,YAAa,cAAe,YAAa,YAAa,cAC3JrK,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,UAAW,UAAW,QAAS,UAAW,SAAU,YAAa,WACjFC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAKpE2O,GACF7L,EAAK,KACLK,EAAK,IACLE,IAAO,IACPG,EAAK,IACLP,EAAK,IACLS,EAAK,KAkBP,OAhBmB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClC/C,QAAQ,SAAUC,GAC5B/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAOA,EAAW+B,GAAgBhI,GAAQ+V,EAAe/N,OAKlC,IAAK,KAAM,MAClBD,QAAQ,SAAUC,GACpC/B,EAAW+B,EAAiB,SAAW,SAAUhI,EAAMwR,GAErD,OADgBvL,EAAW+B,IAAmBwJ,EAAiBxJ,IAC9ChI,EAAMwR,GAAoB,IAAMJ,EAAepR,EAAKsH,gBAKvErB,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC1ExD+P,IACEzN,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,gCACLC,MAAO,uCAGTC,UACEF,IAAK,iBACLC,MAAO,0BAGTE,YAAa,aAEbC,kBACEJ,IAAK,yBACLC,MAAO,gCAGTI,UACEL,IAAK,UACLC,MAAO,mBAGTK,aACEN,IAAK,gBACLC,MAAO,0BAGTM,QACEP,IAAK,QACLC,MAAO,kBAGTO,OACER,IAAK,UACLC,MAAO,oBAGTQ,cACET,IAAK,kBACLC,MAAO,2BAGTS,SACEV,IAAK,UACLC,MAAO,mBAGTU,aACEX,IAAK,kBACLC,MAAO,4BAGTW,QACEZ,IAAK,UACLC,MAAO,oBAGTY,YACEb,IAAK,mBACLC,MAAO,6BAGTa,cACEd,IAAK,kBACLC,MAAO,6BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAERA,EAAS,QAIbA,IDjFQG,GACjBC,OAAQC,0DEGV,SAAAgM,GAAqB/F,EAAQxG,EAAOtI,GAClC,IAdwB8O,EAAQxG,EAc5ByJ,GAdoBjD,EAcIA,EAbd,KADkBxG,EAcIA,GAZ3BwG,EAAOxH,IAGZgB,GAAS,GAAKA,GAAS,EAClBwG,EAAOkD,QAITlD,EAAOvH,OAMd,OADgBwK,EAAM/R,IAAS+R,GACd9R,QAAQ,YAAaqI,GAWxC,SAAAwM,GAA4BC,GAC1B,IAAIpC,EAAc,GAUlB,MARoB,WAAhBoC,IACFpC,EAAc,UAGI,UAAhBoC,IACFpC,EAAc,aAGTA,EAAY/R,OAAS,EAAI+R,EAAc,IAAM,GAGtD,SAAAqC,GAA4BD,GAC1B,IAAIpC,EAAc,GAUlB,MARoB,aAAhBoC,IACFpC,EAAc,aAGI,SAAhBoC,IACFpC,EAAc,YAGTA,EAAY/R,OAAS,EAAI+R,EAAc,IAAM,GCoBtD,IAAAsC,GAtEA,WACE,IAAIxP,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,SAAU,UAAW,QAAS,QAAS,MAAO,MAAO,MAAO,SAAU,YAAa,UAAW,WAAY,YACxHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,WAAY,SAAU,SAAU,UAAW,SAAU,UAC/EC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxDqQ,IACE/N,gBFkDF,WACE,IAAIC,GACFI,UACEF,KACEgI,QAAS,UACTC,KAAM,WACNF,OAAQ,WAEV2C,SACE1C,QAAS,oBACTC,KAAM,sBACNF,OAAQ,qBAEV9H,OACE+H,QAAS,mBACTC,KAAM,sBACNF,OAAQ,qBAIZ5H,aACEF,OACE+H,QAAS,aACTC,KAAM,cACNF,OAAQ,eAIZ1H,UACEL,KACEgI,QAAS,SACTC,KAAM,UACNF,OAAQ,UAEV2C,SACE1C,QAAS,mBACTC,KAAM,qBACNF,OAAQ,oBAEV9H,OACE+H,QAAS,kBACTC,KAAM,qBACNF,OAAQ,oBAIZxH,QACEP,KACEgI,QAAS,SACTC,KAAM,UACNF,OAAQ,UAEV2C,SACE1C,QAAS,mBACTC,KAAM,qBACNF,OAAQ,oBAEV9H,OACE+H,QAAS,kBACTC,KAAM,qBACNF,OAAQ,oBAIZvH,OACER,KACEgI,QAAS,MACTC,KAAM,OACNF,OAAQ,OAEV2C,SACE1C,QAAS,gBACTC,KAAM,kBACNF,OAAQ,iBAEV9H,OACE+H,QAAS,gBACTC,KAAM,kBACNF,OAAQ,kBAIZrH,SACEV,KACEgI,QAAS,SACTC,KAAM,WACNF,OAAQ,UAEV2C,SACE1C,QAAS,oBACTC,KAAM,qBACNF,OAAQ,qBAEV9H,OACE+H,QAAS,qBACTC,KAAM,qBACNF,OAAQ,uBAIZnH,QACEZ,KACEgI,QAAS,MACTC,KAAM,QACNF,OAAQ,OAEV2C,SACE1C,QAAS,iBACTC,KAAM,kBACNF,OAAQ,kBAEV9H,OACE+H,QAAS,kBACTC,KAAM,kBACNF,OAAQ,qBAuBd,OACEhH,SAnBF,SAAmBvI,EAAOwI,EAAOC,GAC/BA,EAAUA,MAEV,IAlKyBzI,EAoCEqV,EA8HvBJ,GAlKqBjV,EAkKYA,GAjKzB,WAAY,QAAS,OAAQ,UAAUsV,OAAO,SAAUL,GACpE,QAASjV,EAAMyM,MAAM,IAAIjH,OAAO,IAAMyP,MAG1B,IA6JmC,IAC3ChQ,GA/HuBoQ,EA+HIrV,EAAMuV,UAAUN,EAAYnU,SA9H/C0U,OAAO,GAAGC,cAAgBJ,EAAOxU,MAAM,GA+H/CmO,EAAS1H,EAAsBrC,GAEnC,OAAKwD,EAAQE,UAITF,EAAQG,WAAa,EAChBoM,GAAkBC,GAAe,MAAQC,GAAkBD,GAAelG,GAAWC,EAAQxG,EAAO,UAEpGwM,GAAkBC,GAAe,QAAUC,GAAkBD,GAAelG,GAAWC,EAAQxG,EAAO,QANtGwM,GAAkBC,GAAeC,GAAkBD,GAAelG,GAAWC,EAAQxG,EAAO,aEjLtFK,GACjBC,OAAQC,0DC+FV,IAAA2M,GAvGA,WACE,IAAI/P,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,YAAa,UAAW,YAAa,aAC7HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,QAAS,SAAU,aAAc,UAAW,WAAY,UAClFC,GAAqB,KAAM,KAAM,KAAM,MACvCC,GAAqB,KAAM,KAAM,KAAM,MACvCC,GAAgB,WAAY,cAAe,WAAY,WAEvDnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAIA,EAAK4H,WAAa,GACP5H,EAAK4H,WAAa,GAClB,EACJV,EAAkB,GAElBA,EAAkB,GAElBlH,EAAK4H,WAAa,GACpBV,EAAkB,GAElBA,EAAkB,IAK7BW,EAAK,SAAU7H,GACb,OAAIA,EAAK4H,WAAa,GACP5H,EAAK4H,WAAa,GAClB,EACJT,EAAkB,GAElBA,EAAkB,GAElBnH,EAAK4H,WAAa,GACpBT,EAAkB,GAElBA,EAAkB,IAK7BW,GAAM,SAAU9H,GACd,OAAIA,EAAK4H,WAAa,GACP5H,EAAK4H,WAAa,GAClB,EACJR,EAAa,GAEbA,EAAa,GAEbpH,EAAK4H,WAAa,GACpBR,EAAa,GAEbA,EAAa,KAa1B,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,MAWG,OAXYA,EAAW+B,GAAgBhI,OAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCzFxD4Q,IACEtO,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,8BACLC,MAAO,mCAGTC,UACEF,IAAK,YACLC,MAAO,qBAGTE,YAAa,oBAEbC,kBACEJ,IAAK,6BACLC,MAAO,kCAGTI,UACEL,IAAK,WACLC,MAAO,oBAGTK,aACEN,IAAK,aACLC,MAAO,sBAGTM,QACEP,IAAK,SACLC,MAAO,kBAGTO,OACER,IAAK,SACLC,MAAO,kBAGTQ,cACET,IAAK,cACLC,MAAO,uBAGTS,SACEV,IAAK,UACLC,MAAO,mBAGTU,aACEX,IAAK,aACLC,MAAO,sBAGTW,QACEZ,IAAK,SACLC,MAAO,kBAGTY,YACEb,IAAK,kBACLC,MAAO,2BAGTa,cACEd,IAAK,eACLC,MAAO,yBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,cAAgBF,EAEhBA,EAAS,iBAIbA,IDjFQG,GACjBC,OAAQC,0DE8DV,IAAA6M,GAtEA,WACE,IAAIjQ,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,SAAU,UAAW,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC1HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,UAC9EC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCvDxD8Q,IACExO,gBCVF,WACE,IAAIC,GACFC,kBACEC,IAAK,uBACLC,MAAO,iCAGTC,UACEF,IAAK,WACLC,MAAO,sBAGTE,YAAa,iBAEbC,kBACEJ,IAAK,sBACLC,MAAO,iCAGTI,UACEL,IAAK,UACLC,MAAO,sBAGTK,aACEN,IAAK,eACLC,MAAO,yBAGTM,QACEP,IAAK,SACLC,MAAO,mBAGTO,OACER,IAAK,QACLC,MAAO,kBAGTQ,cACET,IAAK,gBACLC,MAAO,2BAGTS,SACEV,IAAK,UACLC,MAAO,qBAGTU,aACEX,IAAK,aACLC,MAAO,sBAGTW,QACEZ,IAAK,OACLC,MAAO,gBAGTY,YACEb,IAAK,YACLC,MAAO,qBAGTa,cACEd,IAAK,cACLC,MAAO,wBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAERA,EAAS,SAIbA,IDhFQG,GACjBC,OAAQC,0DE6DV,IAAA+M,GAtEA,WACE,IAAInQ,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,SAAU,UAAW,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,YAAa,UAAW,WAAY,YACxHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,cAAe,aAAc,eAAgB,gBAAiB,eAAgB,cAAe,gBAC7GC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,MAWG,GAXYA,EAAW+B,GAAgBhI,OAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxDgR,IACE1O,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,qBACLC,MAAO,+BAGTC,UACEF,IAAK,YACLC,MAAO,sBAGTE,YAAa,cAEbC,kBACEJ,IAAK,oBACLC,MAAO,8BAGTI,UACEL,IAAK,WACLC,MAAO,qBAGTK,aACEN,IAAK,uBACLC,MAAO,kCAGTM,QACEP,IAAK,gBACLC,MAAO,2BAGTO,OACER,IAAK,UACLC,MAAO,mBAGTQ,cACET,IAAK,mBACLC,MAAO,4BAGTS,SACEV,IAAK,YACLC,MAAO,qBAGTU,aACEX,IAAK,cACLC,MAAO,uBAGTW,QACEZ,IAAK,OACLC,MAAO,gBAGTY,YACEb,IAAK,gBACLC,MAAO,yBAGTa,cACEd,IAAK,cACLC,MAAO,wBA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,KAAOF,EAEPA,EAAS,SAIbA,IDjFQG,GACjBC,OAAQC,0DEuDV,IAAAiN,GA/DA,WACE,IAAIrQ,GAAe,QAAS,QAAS,SAAU,QAAS,QAAS,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,SAC/GC,GAAc,WAAY,WAAY,YAAa,WAAY,WAAY,UAAW,WAAY,SAAU,UAAW,UAAW,YAAa,YAC/IC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDE,GAAgB,YAAa,YAAa,UAAW,cAAe,UAAW,YAAa,YAIhG,SAAFoK,EAAqBrR,GACjB,OAAOA,EAAK4H,WAAa,GAAK,KAAO,KAGvC,IAAI3B,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GAEf,OAAO+G,EAAc/G,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK0J,EAGLxJ,EAAKwJ,EAGLvJ,GAAMuJ,GAWR,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCtJ,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAOA,EAAW+B,GAAgBhI,GAAM6F,WAAa,QAKvDI,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCrDxDkR,IACE5O,gBCTF,WACE,SAAF6O,EAA0BC,GACtB,OAAOA,EAAKhW,QAAQ,YAAa,YAGnC,SAAFiW,EAA0BD,GACtB,OAAOA,EAAKhW,QAAQ,aAAc,YAGpC,SAAFkW,EAAwBF,GACpB,OAAOA,EAAKhW,QAAQ,UAAW,UAOjC,SAAFmW,EAAyBH,GACrB,OAAOA,EAAKhW,QAAQ,uBAAwB,aAG9C,SAAFoW,EAAwBJ,GACpB,OAAOA,EAAKhW,QAAQ,iBAAkB,UAGxC,IAAImH,GACFC,kBACEC,IAAK,eACLC,MAAO,0BACP+O,YAAaN,GAGfxO,UACEF,IAAK,UACLC,MAAO,qBACP+O,YAAaN,GAGfvO,aACEH,IAAK,kBACLC,MAAO,kBACP+O,YAAa,SAAUL,GACrB,MAAO,oBAIXvO,kBACEJ,IAAK,gBACLC,MAAO,2BACP+O,YAAaJ,GAGfvO,UACEL,IAAK,WACLC,MAAO,sBACP+O,YAAaJ,GAGftO,aACEN,IAAK,aACLC,MAAO,wBACP+O,YAAaH,GAGftO,QACEP,IAAK,QACLC,MAAO,mBACP+O,YAAaH,GAGfrO,OACER,IAAK,QACLC,MAAO,mBACP+O,YA5DJ,SAAqBL,GACnB,OAAOA,EAAKhW,QAAQ,UAAW,YA8D/B8H,cACET,IAAK,gBACLC,MAAO,2BACP+O,YAAaF,GAGfpO,SACEV,IAAK,WACLC,MAAO,sBACP+O,YAAaF,GAGfnO,aACEX,IAAK,aACLC,MAAO,wBACP+O,YAAaD,GAGfnO,QACEZ,IAAK,QACLC,MAAO,mBACP+O,YAAaD,GAGflO,YACEb,IAAK,YACLC,MAAO,uBACP+O,YAAaD,GAGfjO,cACEd,IAAK,cACLC,MAAO,yBACP+O,YAAaD,IAqBjB,OACEhO,SAlBF,SAAmBvI,EAAOwI,EAAOC,GAC/BA,EAAUA,MAEV,IAAIgO,EAAWnP,EAAsBtH,GACjC0I,EAAmB,IAAVF,EAAciO,EAASjP,IAAMiP,EAAShP,MAAMtH,QAAQ,YAAaqI,GAE9E,OAAIC,EAAQE,UACNF,EAAQG,WAAa,EAChB6N,EAASD,YAAY9N,GAAU,YAE/BA,EAAS,UAIbA,IDtHQG,GACjBC,OAAQC,0DEkDV,IAAA2N,GA1DA,WACE,IAAI/Q,GAAe,OAAQ,OAAQ,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAC1GC,GAAc,UAAW,aAAc,SAAU,SAAU,UAAW,WAAY,UAAW,UAAW,UAAW,SAAU,YAAa,WAC1IC,GAAiB,MAAO,KAAM,KAAM,KAAM,MAAO,KAAM,MACvDC,GAAiB,MAAO,KAAM,KAAM,KAAM,MAAO,KAAM,MACvDC,GAAgB,UAAW,SAAU,SAAU,MAAO,WAAY,QAAS,SAC3EC,GAAqB,MACrBC,GAAqB,MACrBC,GAAgB,UAEhBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAOkH,EAAkB,IAI3BW,EAAK,SAAU7H,GACb,OAAOmH,EAAkB,IAI3BW,GAAM,SAAU9H,GACd,OAAOoH,EAAa,KAIxB,OACEnB,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KChDxD4R,IACEtP,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,oBACLC,MAAO,6BAGTC,UACEF,IAAK,WACLC,MAAO,oBAGTE,YAAa,YAEbC,kBACEJ,IAAK,kBACLC,MAAO,2BAGTI,UACEL,IAAK,SACLC,MAAO,kBAGTK,aACEN,IAAK,mBACLC,MAAO,4BAGTM,QACEP,IAAK,YACLC,MAAO,qBAGTO,OACER,IAAK,QACLC,MAAO,iBAGTQ,cACET,IAAK,iBACLC,MAAO,0BAGTS,SACEV,IAAK,UACLC,MAAO,mBAGTU,aACEX,IAAK,cACLC,MAAO,uBAGTW,QACEZ,IAAK,OACLC,MAAO,gBAGTY,YACEb,IAAK,eACLC,MAAO,wBAGTa,cACEd,IAAK,aACLC,MAAO,uBA+BX,OACEc,SA5BF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EACT,gBAAV5I,EACK,KAAO0I,EAEP,MAAQA,EAGVA,EAAS,YAIbA,IDrFQG,GACjBC,OAAQC,0DEwEV,IAAA6N,GAhFA,WACE,IAAIjR,GAAe,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC7FC,GAAc,WAAY,UAAW,SAAU,UAAW,UAAW,SAAU,SAAU,UAAW,QAAS,WAAY,UAAW,YACpIsK,GAAkB,WAAY,UAAW,SAAU,UAAW,UAAW,SAAU,SAAU,WAAY,QAAS,YAAa,WAAY,YAC3IrK,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,WAAY,cAAe,SAAU,UAAW,WAAY,QAAS,UACrFC,GAAqB,SAAU,WAC/BC,GAAqB,SAAU,WAC/BC,GAAgB,SAAU,WAE1BnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAqBxE,OAhByB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAoB9B,QAfgB,IAAK,KAAM,MAClB+H,QAAQ,SAAUC,GACzC/B,EAAW+B,EAAiB,QAAU,SAAUhI,EAAMwR,GAEpD,OADgBvL,EAAW+B,IAAmBwJ,EAAiBxJ,IAC9ChI,EAAMwR,GAAoB,IAAMJ,EAAepR,EAAKsH,gBAKvErB,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KClExD8R,IACExP,gBCTF,WACE,IAAIC,GACFC,kBACEC,KACEuJ,WAAY,qBACZ+F,mBAAoB,qBACpBC,kBAAmB,sBAErBC,KAAM,6BACNvP,MAAO,8BAGTC,UACEF,KACEuJ,WAAY,YACZ+F,mBAAoB,YACpBC,kBAAmB,aAErBC,KAAM,oBACNvP,MAAO,qBAGTE,YAAa,cAEbC,kBACEJ,KACEuJ,WAAY,oBACZ+F,mBAAoB,oBACpBC,kBAAmB,qBAErBC,KAAM,4BACNvP,MAAO,6BAGTI,UACEL,KACEuJ,WAAY,WACZ+F,mBAAoB,WACpBC,kBAAmB,YAErBC,KAAM,mBACNvP,MAAO,oBAGTK,aACEN,KACEuJ,WAAY,YACZ+F,mBAAoB,YACpBC,kBAAmB,aAErBC,KAAM,qBACNvP,MAAO,sBAGTM,QACEP,KACEuJ,WAAY,QACZ+F,mBAAoB,QACpBC,kBAAmB,SAErBC,KAAM,iBACNvP,MAAO,kBAGTO,OACER,KACEuJ,WAAY,QACZ+F,mBAAoB,QACpBC,kBAAmB,SAErBC,KAAM,iBACNvP,MAAO,kBAGTQ,cACET,KACEuJ,WAAY,eACZ+F,mBAAoB,eACpBC,kBAAmB,gBAErBC,KAAM,wBACNvP,MAAO,yBAGTS,SACEV,KACEuJ,WAAY,WACZ+F,mBAAoB,WACpBC,kBAAmB,YAErBC,KAAM,oBACNvP,MAAO,qBAGTU,aACEX,KACEuJ,WAAY,eACZ+F,mBAAoB,eACpBC,kBAAmB,gBAErBC,KAAM,uBACNvP,MAAO,wBAGTW,QACEZ,KACEuJ,WAAY,WACZ+F,mBAAoB,WACpBC,kBAAmB,YAErBC,KAAM,mBACNvP,MAAO,oBAGTY,YACEb,KACEuJ,WAAY,iBACZ+F,mBAAoB,iBACpBC,kBAAmB,kBAErBC,KAAM,yBACNvP,MAAO,0BAGTa,cACEd,KACEuJ,WAAY,kBACZ+F,mBAAoB,kBACpBC,kBAAmB,mBAErBC,KAAM,0BACNvP,MAAO,4BAyCX,OACEc,SAtCF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EAuBJ,OAzBAD,EAAUA,MAKRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACLC,EAAQE,UACNF,EAAQG,WAAa,EACdtB,EAAsBtH,GAAOwH,IAAIuP,kBAEjCzP,EAAsBtH,GAAOwH,IAAIsP,mBAGnCxP,EAAsBtH,GAAOwH,IAAIuJ,WAG5CvI,EAAQ,GAAK,GAAKA,EAAQ,GAAK,GACC,MAAhC2B,OAAO3B,GAAOwB,QAAQ,EAAG,GAEhB1C,EAAsBtH,GAAOgX,KAAK7W,QAAQ,YAAaqI,GAEvDlB,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAER,SAAWA,EAIfA,IDhKQG,GACjBC,OAAQC,0DE8DV,IAAAkO,GAtEA,WACE,IAAItR,GAAe,QAAS,SAAU,OAAQ,QAAS,OAAQ,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,UACpHC,GAAc,qBAAsB,cAAe,YAAa,cAAe,YAAa,eAAgB,aAAc,WAAY,eAAgB,qBAAsB,sBAAuB,sBACnMC,GAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/CC,GAAiB,MAAO,QAAS,SAAU,SAAU,OAAQ,OAAQ,OACrEC,GAAgB,QAAS,UAAW,WAAY,WAAY,SAAU,SAAU,SAChFC,GAAqB,OAAQ,QAC7BC,GAAqB,IAAK,KAC1BC,GAAgB,SAAU,UAE1BnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUYgC,EAVGhC,EAAW+B,GAAgBhI,GAWvCqL,OAAOpD,GADhB,IAAkBA,MALdhC,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxDmS,IACE7P,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,qBACLC,MAAO,0BAGTC,UACEF,IAAK,cACLC,MAAO,mBAGTE,YAAa,YAEbC,kBACEJ,IAAK,eACLC,MAAO,0BAGTI,UACEL,IAAK,cACLC,MAAO,mBAGTK,aACEN,IAAK,qBACLC,MAAO,2BAGTM,QACEP,IAAK,aACLC,MAAO,mBAGTO,OACER,IAAK,WACLC,MAAO,kBAGTQ,cACET,IAAK,mBACLC,MAAO,0BAGTS,SACEV,IAAK,WACLC,MAAO,kBAGTU,aACEX,IAAK,mBACLC,MAAO,2BAGTW,QACEZ,IAAK,WACLC,MAAO,mBAGTY,YACEb,IAAK,cACLC,MAAO,2BAGTa,cACEd,IAAK,mBACLC,MAAO,4BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,WAAaF,EAEb,OAASA,EAIbA,IDjFQG,GACjBC,OAAQC,0DE4EV,IAAAoO,GApFA,WACE,IAAIxR,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,SAAU,WAAY,OAAQ,QAAS,MAAO,MAAO,MAAO,SAAU,YAAa,WAAY,UAAW,YACxHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,aAAc,UAAW,QAAS,YAAa,QAAS,UAClFoK,GAAY,WAAY,UAAW,WAAY,WAE/CiH,EAAY,SAAUtY,GACxB,IAAIyC,EAAQzC,EAAK4H,WACjB,OAAInF,GAAS,GAAKA,EAAQ,GACjB4O,EAAS,GACP5O,GAAS,IAAMA,EAAQ,GACzB4O,EAAS,GACP5O,GAAS,IAAMA,EAAQ,GACzB4O,EAAS,GAETA,EAAS,IAIhBpL,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK2Q,EAGLzQ,EAAKyQ,EAGLxQ,GAAMwQ,GAWR,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCvQ,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,IAAIC,EAASD,EAAS,IACtB,GAAIC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOD,EAAS,MAClB,KAAK,EACH,OAAOA,EAAS,MAGtB,OAAOA,EAAS,KApBLE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KC7DxDsS,IACEhQ,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,sBACLC,MAAO,iCAGTC,UACEF,IAAK,YACLC,MAAO,qBAGTE,YAAa,iBAEbC,kBACEJ,IAAK,qBACLC,MAAO,gCAGTI,UACEL,IAAK,WACLC,MAAO,oBAGTK,aACEN,IAAK,YACLC,MAAO,wBAGTM,QACEP,IAAK,QACLC,MAAO,kBAGTO,OACER,IAAK,QACLC,MAAO,iBAGTQ,cACET,IAAK,cACLC,MAAO,0BAGTS,SACEV,IAAK,UACLC,MAAO,oBAGTU,aACEX,IAAK,eACLC,MAAO,0BAGTW,QACEZ,IAAK,WACLC,MAAO,oBAGTY,YACEb,IAAK,aACLC,MAAO,wBAGTa,cACEd,IAAK,eACLC,MAAO,2BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,QAAUF,EAEV,SAAWA,EAIfA,IDjFQG,GACjBC,OAAQC,0DEGV,SAAAuO,GAAqBtI,EAAQxG,EAAOtI,GAClC,IAdwB8O,EAAQxG,EAc5ByJ,GAdoBjD,EAcIA,EAbd,KADkBxG,EAcIA,GAZ3BwG,EAAOxH,IAGZgB,GAAS,GAAKA,GAAS,EAClBwG,EAAOkD,QAITlD,EAAOvH,OAMd,OADgBwK,EAAM/R,IAAS+R,GACd9R,QAAQ,YAAaqI,GAWxC,SAAA+O,GAA4BtC,GAC1B,IAAIpC,EAAc,GAUlB,MARoB,WAAhBoC,IACFpC,EAAc,SAGI,UAAhBoC,IACFpC,EAAc,aAGTA,EAAY/R,OAAS,EAAI+R,EAAc,IAAM,GAGtD,SAAA2E,GAA4BvC,GAC1B,IAAIpC,EAAc,GAUlB,MARoB,aAAhBoC,IACFpC,EAAc,YAGI,SAAhBoC,IACFpC,EAAc,YAGTA,EAAY/R,OAAS,EAAI+R,EAAc,IAAM,GCoBtD,IAAA4E,GAtEA,WACE,IAAI9R,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,QAAS,OAAQ,SAAU,QAAS,SAAU,SAAU,WAAY,QAAS,OAAQ,QAAS,WAAY,YACxHC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,UAAW,QAAS,SAAU,UAAW,QAAS,UAC5EC,GAAqB,OAAQ,QAC7BC,GAAqB,OAAQ,QAC7BC,GAAgB,YAAa,aAE7BnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAW9B,QANdiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCxDxD2S,IACErQ,gBFkDF,WACE,IAAIC,GACFI,UACEF,KACEgI,QAAS,UACTC,KAAM,WACNF,OAAQ,WAEV2C,SACE1C,QAAS,oBACTC,KAAM,sBACNF,OAAQ,qBAEV9H,OACE+H,QAAS,mBACTC,KAAM,sBACNF,OAAQ,qBAIZ5H,aACEF,OACE+H,QAAS,aACTC,KAAM,cACNF,OAAQ,eAIZ1H,UACEL,KACEgI,QAAS,SACTC,KAAM,UACNF,OAAQ,UAEV2C,SACE1C,QAAS,mBACTC,KAAM,qBACNF,OAAQ,oBAEV9H,OACE+H,QAAS,kBACTC,KAAM,qBACNF,OAAQ,oBAIZxH,QACEP,KACEgI,QAAS,SACTC,KAAM,UACNF,OAAQ,UAEV2C,SACE1C,QAAS,mBACTC,KAAM,qBACNF,OAAQ,oBAEV9H,OACE+H,QAAS,kBACTC,KAAM,qBACNF,OAAQ,oBAIZvH,OACER,KACEgI,QAAS,MACTC,KAAM,OACNF,OAAQ,OAEV2C,SACE1C,QAAS,gBACTC,KAAM,gBACNF,OAAQ,iBAEV9H,OACE+H,QAAS,gBACTC,KAAM,gBACNF,OAAQ,kBAIZrH,SACEV,KACEgI,QAAS,QACTC,KAAM,UACNF,OAAQ,SAEV2C,SACE1C,QAAS,mBACTC,KAAM,mBACNF,OAAQ,oBAEV9H,OACE+H,QAAS,mBACTC,KAAM,mBACNF,OAAQ,qBAIZnH,QACEZ,KACEgI,QAAS,MACTC,KAAM,QACNF,OAAQ,OAEV2C,SACE1C,QAAS,iBACTC,KAAM,iBACNF,OAAQ,kBAEV9H,OACE+H,QAAS,iBACTC,KAAM,iBACNF,OAAQ,oBAuBd,OACEhH,SAnBF,SAAmBvI,EAAOwI,EAAOC,GAC/BA,EAAUA,MAEV,IAlKyBzI,EAoCEqV,EA8HvBJ,GAlKqBjV,EAkKYA,GAjKzB,WAAY,QAAS,OAAQ,UAAUsV,OAAO,SAAUL,GACpE,QAASjV,EAAMyM,MAAM,IAAIjH,OAAO,IAAMyP,MAG1B,IA6JmC,IAC3ChQ,GA/HuBoQ,EA+HIrV,EAAMuV,UAAUN,EAAYnU,SA9H/C0U,OAAO,GAAGC,cAAgBJ,EAAOxU,MAAM,GA+H/CmO,EAAS1H,EAAsBrC,GAEnC,OAAKwD,EAAQE,UAITF,EAAQG,WAAa,EAChBoM,GAAkBC,GAAe,MAAQC,GAAkBD,GAAelG,GAAWC,EAAQxG,EAAO,UAEpGwM,GAAkBC,GAAe,QAAUC,GAAkBD,GAAelG,GAAWC,EAAQxG,EAAO,QANtGwM,GAAkBC,GAAeC,GAAkBD,GAAelG,GAAWC,EAAQxG,EAAO,aEjLtFK,GACjBC,OAAQC,0DCwEV,IAAA4O,GAhFA,WACE,IAAIhS,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,UAAW,WAAY,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAAY,UAAW,YAC3HC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,SAAU,aAAc,UAAW,QAAS,WAAY,QAAS,UACjFoK,GAAY,aAAc,YAE1BpL,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIyJ,EAAS,GAAKA,EAAS,IAI9DxJ,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIyJ,EAAS,GAAKA,EAAS,IAI9DvJ,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIyJ,EAAS,GAAKA,EAAS,KAYhE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCtJ,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAUN,SAAkBgC,GAChB,IAAIC,EAASD,EAAS,IACtB,GAAIC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOD,EAAS,MAClB,KAAK,EACH,OAAOA,EAAS,MAClB,KAAK,EACL,KAAK,EACH,OAAOA,EAAS,MAGtB,OAAOA,EAAS,MAvBLE,CAAQlC,EAAW+B,GAAgBhI,QAK5CiG,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCtDxD6S,IACEvQ,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,qBACLC,MAAO,gCAGTC,UACEF,IAAK,YACLC,MAAO,qBAGTE,YAAa,kBAEbC,kBACEJ,IAAK,oBACLC,MAAO,+BAGTI,UACEL,IAAK,WACLC,MAAO,oBAGTK,aACEN,IAAK,cACLC,MAAO,wBAGTM,QACEP,IAAK,QACLC,MAAO,kBAGTO,OACER,IAAK,QACLC,MAAO,kBAGTQ,cACET,IAAK,gBACLC,MAAO,0BAGTS,SACEV,IAAK,UACLC,MAAO,oBAGTU,aACEX,IAAK,iBACLC,MAAO,0BAGTW,QACEZ,IAAK,WACLC,MAAO,oBAGTY,YACEb,IAAK,qBACLC,MAAO,8BAGTa,cACEd,IAAK,oBACLC,MAAO,8BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAER,QAAUA,EAIdA,IDjFQG,GACjBC,OAAQC,0DE+DV,IAAA8O,GAvEA,WAEE,IAAIlS,GAAe,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5FC,GAAc,WAAY,YAAa,SAAU,UAAW,MAAO,QAAS,QAAS,SAAU,aAAc,YAAa,YAAa,aACvIC,GAAiB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrDC,GAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3DC,GAAgB,WAAY,OAAQ,QAAS,WAAY,MAAO,SAAU,WAC1EC,GAAqB,KAAM,MAC3BC,GAAqB,KAAM,MAC3BC,GAAgB,OAAQ,QAExBnB,GAEFoB,IAAO,SAAUrH,GACf,OAAO6G,EAAY7G,EAAKsH,aAI1BC,KAAQ,SAAUvH,GAChB,OAAO8G,EAAW9G,EAAKsH,aAIzBE,GAAM,SAAUxH,GACd,OAAO+G,EAAc/G,EAAKyE,WAI5BgD,IAAO,SAAUzH,GACf,OAAOgH,EAAchH,EAAKyE,WAI5BiD,KAAQ,SAAU1H,GAChB,OAAOiH,EAAajH,EAAKyE,WAI3BkD,EAAK,SAAU3H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIV,EAAkB,GAAKA,EAAkB,IAIhFW,EAAK,SAAU7H,GACb,OAAQA,EAAK4H,WAAa,IAAO,EAAIT,EAAkB,GAAKA,EAAkB,IAIhFW,GAAM,SAAU9H,GACd,OAAQA,EAAK4H,WAAa,IAAO,EAAIR,EAAa,GAAKA,EAAa,KAYxE,OAPyB,IAAK,IAAK,MAAO,IAAK,IAAK,KAClCW,QAAQ,SAAUC,GAClC/B,EAAW+B,EAAiB,KAAO,SAAUhI,EAAMiG,GACjD,OAAeA,EAAW+B,GAAgBhI,GAWhC6F,eANZI,WAAYA,EACZmC,uBAAwBC,EAA4BpC,KCzDxD+S,IACEzQ,gBCTF,WACE,IAAIC,GACFC,kBACEC,IAAK,yBACLC,MAAO,kCAGTC,UACEF,IAAK,YACLC,MAAO,qBAGTE,YAAa,oBAEbC,kBACEJ,IAAK,wBACLC,MAAO,iCAGTI,UACEL,IAAK,UACLC,MAAO,oBAGTK,aACEN,IAAK,cACLC,MAAO,uBAGTM,QACEP,IAAK,QACLC,MAAO,iBAGTO,OACER,IAAK,OACLC,MAAO,kBAGTQ,cACET,IAAK,eACLC,MAAO,wBAGTS,SACEV,IAAK,SACLC,MAAO,kBAGTU,aACEX,IAAK,aACLC,MAAO,uBAGTW,QACEZ,IAAK,OACLC,MAAO,iBAGTY,YACEb,IAAK,aACLC,MAAO,uBAGTa,cACEd,IAAK,eACLC,MAAO,0BA2BX,OACEc,SAxBF,SAAmBvI,EAAOwI,EAAOC,GAG/B,IAAIC,EASJ,OAXAD,EAAUA,MAIRC,EAD0C,iBAAjCpB,EAAsBtH,GACtBsH,EAAsBtH,GACZ,IAAVwI,EACAlB,EAAsBtH,GAAOwH,IAE7BF,EAAsBtH,GAAOyH,MAAMtH,QAAQ,YAAaqI,GAG/DC,EAAQE,UACNF,EAAQG,WAAa,EAChB,MAAQF,EAERA,EAAS,WAIbA,IDjFQG,GACjBC,OAAQC,0DE4DJgP,GAAY,IAAIC,MAlCtB,SAAmBd,KACnB,YAAsBG,KACtB,UAAoB1F,KACpB,qBAA+Bf,KAC/B,sBAAgCA,KAChC,WAAqBiG,KACrB,QAAkBa,KAClB,SAAmB7B,KACnB,QAAkBtE,KAClB,UAAoBnK,IACpB,YAAsBsJ,KACtB,WAAqBiF,KACrB,UAAoBM,KACpB,SAAmBhD,KACnB,SAAmBnC,KACnB,QAAkBgE,KAClB,YAAsBiB,KACtB,aAAuBlE,KACvB,UAAoBE,KACpB,WAAqBZ,KACrB,SAAmBwD,KACnB,aAAuBiD,KACvB,mBAA6BnG,KAC7B,SAAmBY,KACnB,aAAuBE,KACvB,WAAqBuF,KACrB,UAAoBvH,KACpB,SAAmB6E,KACnB,UAAoB/D,KACpB,UAAoBoB,KACpB,OAAiBkE,KACjB,UAAoBrC,MC5DpB,IAAa2D,GAAuB,IAAInL,EAAAA,eAAsB,kBACxDoL,GAAN,UACAC,GAAA,WAMA,SAAAA,EACiBC,GAHL5K,KAAZ6K,cAA4BH,GAChB1K,KAAZ8K,iBAA+BJ,GAEnBE,IACA5K,KAAK6K,cAAgBD,EACrB5K,KAAK8K,iBAAmBF,UAOpCD,EAAAnK,UAAAuK,iBAAA,SAFKC,GAGGhL,KAFK6K,cAAgBG,GAO7BL,EAAAnK,UAAAyK,iBAAA,WACQ,OAJOjL,KAAK6K,eASpBF,EAAAnK,UAAA0K,cAAA,WACQ,ODkCPxM,ECxCwBsB,KAAK6K,cDyCnBN,GAAUY,IAAIzM,GAEzB,IAHCA,GC7BDiM,EAAAnK,UAAA4K,mBAAA,WACQpL,KARK6K,cAAgB7K,KAAK8K,oBA3BlC,GA8BOH,GAAPzI,aACEC,KAAMC,EAAAA,aAGPuI,GAADtI,eAAC,WAAA,QAWAF,KAAMkJ,OAAQnJ,aAAeC,KAAMG,EAAAA,OAAQC,MAAOkI,SCjDnD,IAAAa,GAAA,WAOA,SAAAA,EAMsBC,EAAkCC,GAAlCxL,KAAtBuL,QAAsBA,EAAkCvL,KAAxDwL,cAAwDA,SACxDF,EAAA9K,UAAAiL,UAAA,SACGC,EAAA5K,GAAC,IACM6K,EAAc3L,KAAKuL,QAAQ3K,iBAAiBE,GAC5C8K,EAAc5L,KAAKwL,cAAcN,gBAAvC,OACO5P,EAAOoQ,EAAOC,GAAajN,OAASkN,OAlB/C,GAoBON,GAAPpJ,aACEC,KAAM0J,EAAAA,KAAMtJ,OAAZuJ,KACM,WAIPR,GAADjJ,eAAC,WAAA,QAEAF,KAAMrC,KACNqC,KAAMwI,MCHP,IAAAoB,GATA,WACE,IACIC,EADaC,MAAMzL,UAAUnN,MAAM+D,KAAK8U,WACrBC,IAAI,SAAU3X,GACnC,OAAOE,EAAMF,KAEX4X,EAAkB5W,KAAK6W,IAAIC,MAAM,KAAMN,GAC3C,OAAO,IAAIpc,KAAKwc,ICvBlBG,GAAA,WAMA,SAAAA,EAGsBhB,EAAkCC,GAAlCxL,KAAtBuL,QAAsBA,EAAkCvL,KAAxDwL,cAAwDA,SAIxDe,EAAA/L,UAAAiL,UAAA,SAFGe,EAAA1L,GAGC,IAFM6K,EAAc3L,KAAKuL,QAAQ3K,iBAAiBE,GAC5C8K,EAAc5L,KAAKwL,cAAcN,gBAGvC,OAFO5P,EAAO+Q,GAElBC,WAAA,EAFuBE,GAAUb,GAAajN,OAASkN,OAdvD,GAgBOW,GAAPrK,aACEC,KAAM0J,EAAAA,KAAMtJ,OAGZuJ,KAFM,cAIPS,GAADlK,eAAC,WAAA,QAKAF,KAAMrC,KACNqC,KAAMwI,MCFP,IAAA8B,GATA,WACE,IACIT,EADaC,MAAMzL,UAAUnN,MAAM+D,KAAK8U,WACrBC,IAAI,SAAU3X,GACnC,OAAOE,EAAMF,KAEXkY,EAAoBlX,KAAKmX,IAAIL,MAAM,KAAMN,GAC7C,OAAO,IAAIpc,KAAK8c,ICvBlBE,GAAA,WAMA,SAAAA,EAGsBrB,EAAkCC,GAAlCxL,KAAtBuL,QAAsBA,EAAkCvL,KAAxDwL,cAAwDA,SAIxDoB,EAAApM,UAAAiL,UAAA,SAFGe,EAAA1L,GAGC,IAFM6K,EAAc3L,KAAKuL,QAAQ3K,iBAAiBE,GAC5C8K,EAAc5L,KAAKwL,cAAcN,gBAGvC,OAFO5P,EAAOqR,GAElBL,WAAA,EAFuBE,GAAUb,GAAajN,OAASkN,OAdvD,GAgBOgB,GAAP1K,aACEC,KAAM0J,EAAAA,KAAMtJ,OAGZuJ,KAFM,cAIPc,GAADvK,eAAC,WAAA,QAKAF,KAAMrC,KACNqC,KAAMwI,MCiBP,IAAAkC,GAfA,SAAsB5X,EAAeC,GACnC,IACI4X,EADWpY,EAAMO,GACGlD,UAEpBgb,EADYrY,EAAMQ,GACInD,UAE1B,OAAI+a,EAAWC,GACL,EACCD,EAAWC,EACb,EAEA,GClBX,IAAAC,GANA,SAAmC/X,EAAeC,GAChD,IAAI+X,EAAWvY,EAAMO,GACjBiY,EAAYxY,EAAMQ,GACtB,OAAO+X,EAASlb,UAAYmb,EAAUnb,WCExC,IAAAob,GALA,SAA8BlY,EAAeC,GAC3C,IAAI1D,EAAO4b,GAAyBnY,EAAeC,GAAkB,IACrE,OAAO1D,EAAO,EAAIgE,KAAKgI,MAAMhM,GAAQgE,KAAKoG,KAAKpK,ICOjD,IAAA6b,GAVA,SAAqCpY,EAAeC,GAClD,IAAI+X,EAAWvY,EAAMO,GACjBiY,EAAYxY,EAAMQ,GAKtB,OAAkB,IAHH+X,EAASrY,cAAgBsY,EAAUtY,gBAClCqY,EAASrU,WAAasU,EAAUtU,aCwBlD,IAAA0U,GAfA,SAAqBrY,EAAeC,GAClC,IACI4X,EADWpY,EAAMO,GACGlD,UAEpBgb,EADYrY,EAAMQ,GACInD,UAE1B,OAAI+a,EAAWC,GACL,EACCD,EAAWC,EACb,EAEA,GCTX,IAAAQ,GAdA,SAA6BtY,EAAeC,GAC1C,IAAI+X,EAAWvY,EAAMO,GACjBiY,EAAYxY,EAAMQ,GAElBgJ,EAAOsP,GAAWP,EAAUC,GAC5BO,EAAajY,KAAK4I,IAAIsP,GAA2BT,EAAUC,IAM/D,OALAD,EAASU,SAASV,EAASrU,WAAasF,EAAOuP,GAKxCvP,GAAQuP,GADUD,GAAWP,EAAUC,MAAgBhP,KC3B5D0P,GAAiB,KACjBC,GAA6B,KAC7BC,GAAmB,MACnBC,GAAwB,MAiM5B,IAAAC,GA7GA,SAA0BC,EAAoBzZ,EAAW3C,GACvD,IAAIoJ,EAAUpJ,MAEVuJ,EAAa8S,GAAYD,EAAoBzZ,GAE7CkK,EAASzD,EAAQyD,OACjB3D,EAAW6D,EAAS/E,gBAAgBkB,SACpC2D,GAAUA,EAAO7E,iBAAmB6E,EAAO7E,gBAAgBkB,WAC7DA,EAAW2D,EAAO7E,gBAAgBkB,UAGpC,IAKIkS,EAAUC,EALViB,GACFhT,UAAWiT,QAAQnT,EAAQE,WAC3BC,WAAYA,GAIVA,EAAa,GACf6R,EAAWvY,EAAMuZ,GACjBf,EAAYxY,EAAMF,KAElByY,EAAWvY,EAAMF,GACjB0Y,EAAYxY,EAAMuZ,IAGpB,IAGII,EAHAna,EAAUoa,GAAoBpB,EAAWD,GACzCpZ,EAASqZ,EAAU5Y,oBAAsB2Y,EAAS3Y,oBAClDN,EAAUwB,KAAKC,MAAMvB,EAAU,IAAML,EAIzC,GAAIG,EAAU,EACZ,OAAIiH,EAAQ4E,eACN3L,EAAU,EACL6G,EAAS,mBAAoB,EAAGoT,GAC9Bja,EAAU,GACZ6G,EAAS,mBAAoB,GAAIoT,GAC/Bja,EAAU,GACZ6G,EAAS,mBAAoB,GAAIoT,GAC/Bja,EAAU,GACZ6G,EAAS,cAAe,KAAMoT,GAE9BpT,EADE7G,EAAU,GACH,mBAEA,WAFoB,EAAGia,GAKzB,IAAZna,EACK+G,EAAS,mBAAoB,EAAGoT,GAEhCpT,EAAS,WAAY/G,EAASma,GAKpC,GAAIna,EAAU,GACnB,OAAO+G,EAAS,WAAY/G,EAASma,GAGhC,GAAIna,EAAU,GACnB,OAAO+G,EAAS,cAAe,EAAGoT,GAG7B,GAAIna,EAAU4Z,GAEnB,OAAO7S,EAAS,cADJvF,KAAKC,MAAMzB,EAAU,IACKma,GAGjC,GAAIna,EAAU6Z,GACnB,OAAO9S,EAAS,QAAS,EAAGoT,GAGvB,GAAIna,EAAU8Z,GAEnB,OAAO/S,EAAS,QADLvF,KAAKC,MAAMzB,EAAU4Z,IACDO,GAG1B,GAAIna,EAAU+Z,GAEnB,OAAOhT,EAAS,eADhBsT,EAAS7Y,KAAKC,MAAMzB,EAAU8Z,IACUK,GAM1C,IAHAE,EAASE,GAAmBrB,EAAWD,IAG1B,GAEX,OAAOlS,EAAS,UADGvF,KAAKC,MAAMzB,EAAU8Z,IACCK,GAIzC,IAAIK,EAAyBH,EAAS,GAClCI,EAAQjZ,KAAKgI,MAAM6Q,EAAS,IAGhC,OAAIG,EAAyB,EACpBzT,EAAS,cAAe0T,EAAON,GAG7BK,EAAyB,EAC3BzT,EAAS,aAAc0T,EAAON,GAI9BpT,EAAS,eAAgB0T,EAAQ,EAAGN,IC5LjDO,GAAA,WAKA,SAAAA,EADuBnD,EAAkCC,GAAlCxL,KAAvBuL,QAAuBA,EAAkCvL,KAAzDwL,cAAyDA,SAOzDkD,EAAAlO,UAAAiL,UAAA,SALGO,GAMC,IALMJ,EAAc5L,KAAKwL,cAAcN,gBAMvC,OAAIlL,KALKuL,QAAQpK,4BACRtH,GAAgBmS,EAAM,GAAIA,EAAM,IAAInM,gBAAiB,EAAMnB,OAAQkN,IAEnE/R,GAAgBmS,EAAM,GAAIA,EAAM,IAAInM,gBAAiB,EAAOnB,OAAQkN,OAXjF,GAcO8C,GAAPxM,aACEC,KAAM0J,EAAAA,KAAMtJ,OAMZuJ,KALM,2BAIP4C,GAADrM,eAAC,WAAA,QAQAF,KAAMrC,KACNqC,KAAMwI,MC8CP,IAAAgE,GAJA,SAA+Bna,EAAW3C,GACxC,OAAOgI,GAAgBjK,KAAKgf,MAAOpa,EAAW3C,IC9EhDgd,GAAA,WAoBA,SAAAA,EADKtD,EAA6CC,GAClD,IAAAsD,EAAA9O,KADkDA,KAAlDwL,cAAkDA,EALtCxL,KAAZ+O,UAAsC,IAAIC,EAAAA,aAC9BhP,KAAZiP,YAAyB,EACbjP,KAAZkP,sBAAoC,GAM5BlP,KAAK/E,QAAUsQ,EAAQlK,oBACvBrB,KAAK+O,UAAYI,EAAAA,WAAWC,SAASpP,KAAK/E,QAAQyE,aAAa2P,UAAU,GAAGC,UAAU,SAAAtM,GAAK,OAAA8L,EAAKG,YAAa,WAKrHJ,EAAArO,UAAA+O,YAAA,WACQvP,KAJK+O,UAAUS,eAUvBX,EAAArO,UAAAiL,UAAA,SAPKgE,GAQG,GAAIzP,KAPKiP,WAAY,CAQjBjP,KAPKiP,YAAa,EAQlB,IAPMS,EAAmB1P,KAAK2P,cAAcF,GAS5C,OADAzP,KAPKkP,sBAAwBQ,EACtBA,EASP,OAPO1P,KAAKkP,uBAInBL,EAALrO,UAAAmP,cAAK,SAAAF,GAWG,IAVM7D,EAAc5L,KAAKwL,cAAcN,gBACjC0E,EAAWC,GAAqBJ,GAAW5P,eAAiBG,KAAK/E,QAAQ4E,eAAgBnB,OAAQkN,IAI7G,OAHyB5L,KAAK/E,QAAQ0E,OAASiQ,EAAW5P,KAAK/E,QAAQ2E,UA1CzE,GA6COiP,GAAP3M,aACEC,KAAM0J,EAAAA,KAAMtJ,OAAQuJ,KAAM,MAAOgE,MAAM,MAGxCjB,GAADxM,eAAC,WAAA,QAaAF,KAAMrC,KACNqC,KAAMwI,MCzDP,IAAAoF,GAAA,WAAA,SAAAA,YAKKA,EAALC,QACA,SADKC,EAAAvR,GAEG,OACIwR,SADUH,EAEVI,YACaC,QADS/Q,EAA+BgR,SAAUJ,IAElDG,QADS3F,GAAsB4F,SAAU3R,QAVlE,GAcOqR,GAAP7N,aACEC,KAAMmO,EAAAA,SAAU/N,OAEdgO,cADgBjF,GAEAiB,GACAK,GACA8B,GACAG,IAEhBsB,WACgBrQ,GACA6K,IAEhB6F,WACAC,SACgBnF,GACAiB,GACAK,GACA8B,GACAG,QAInBkB,GAAD1N,eAAC,WAAA"}
