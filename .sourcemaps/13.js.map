{"version":3,"sources":["../../src/pages/request/request.module.ts","../../src/pages/request/request.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AAUxC;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAR7B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACtC;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AACgC;AACS;AAInF,iEAAiE;AACjE,qDAAqD;AACkB;AACP;AAQhE;IAOE,qBACS,OAAsB,EACtB,SAAoB,EACnB,QAA4B,EAC5B,KAAoB,EACrB,SAA0B,EACzB,IAAiB;QALlB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,aAAQ,GAAR,QAAQ,CAAoB;QAC5B,UAAK,GAAL,KAAK,CAAe;QACrB,cAAS,GAAT,SAAS,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAa;QAX3B,iBAAY,GAAG,EAAE,CAAC;IAelB,CAAC;IAED,2BAA2B;IAC3B,sCAAgB,GAAhB;QAAA,iBAeC;QAdC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,+DAA+D;QAC/D,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YACvD,qBAAqB;YACrB,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAClB,oDAAoD;gBACpD,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,qBAAW;oBAC7E,IAAI,WAAW,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;oBAChC,WAAW,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;oBACxC,WAAW,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC;oBACzC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACtC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;IAChB,+BAAS,GAAT,UAAU,SAAS;QAAnB,iBAUC;QATC,wBAAwB;QACxB,UAAU,CAAC;YACT,6BAA6B;YAC7B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,kCAAkC;YAClC,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,2BAA2B;YAC3B,SAAS,CAAC,QAAQ,EAAE,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,sBAAsB;IACtB,+BAAS,GAAT,UAAU,OAAO;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,EAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC,CAAC;QACxG,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,KAAK,CAAC,YAAY,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAvDU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;6EAS+B;YACX,oGAAS;YACT,uFAAkB;YACrB,sEAAa;YACV,mFAAe;YACnB,QAAW;OAbhB,WAAW,CAyDvB;IAAD,CAAC;AAAA;SAzDY,WAAW,e","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RequestPage } from './request';\n\n@NgModule({\n  declarations: [\n    RequestPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RequestPage),\n  ],\n})\nexport class RequestPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/request/request.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ModalController } from 'ionic-angular';\r\nimport { RequestListService } from '../../providers/request/request-list.services';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Request } from '../../models/request/request.model';\r\nimport { Profile } from '../../models/profile/profile.interface';\r\n//import { EditItemPage } from \"../../pages/edit-item/edit-item\";\r\n//import { AdditemPage } from '../add-item/add-item';\r\nimport { ToastService2 } from './../../providers/toast/toast.services';\r\nimport { DataService } from '../../providers/data/data.service';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-request',\r\n  templateUrl: 'request.html'\r\n})\r\nexport class RequestPage {\r\n  \r\n  requestList$ = [];\r\n  profileList$: Observable<Profile[]>;\r\n  \r\n  public request: any;\r\n  \r\n  constructor(\r\n    public navCtrl: NavController,  \r\n    public navParams: NavParams,\r\n    private requests: RequestListService, \r\n    private toast: ToastService2,\r\n    public modalCtrl: ModalController,\r\n    private data: DataService\r\n  ) \r\n  {\r\n    \r\n  }\r\n  \r\n  // Au chargement de la page\r\n  ionViewWillEnter() {\r\n    this.requestList$ = [];\r\n    // Appel de la fonction dans mon service qui liste les besoins \r\n    this.requests.getRequestListRef().once('value').then(snap => {\r\n      // Pour chaque besoin\r\n      snap.forEach(element => {\r\n        // On réccupère l'ID du profil qui à posté le besoin\r\n        this.data.getUid(element.val().uidProfile).valueChanges().subscribe(profileData => {\r\n          let userRequest = element.val();\r\n          userRequest['uidRequest'] = element.key;\r\n          userRequest['userRequest'] = profileData;\r\n          this.requestList$.push(userRequest);\r\n        });\r\n      });\r\n    });  \r\n  }\r\n  \r\n  // Refresher    \r\n  doRefresh(refresher) {\r\n    // Délai de 2,5 secondes\r\n    setTimeout(() => {\r\n      // Vide le tableau de données\r\n      this.requestList$ = [];\r\n      // Recharge les données de la page\r\n      this.ionViewWillEnter();\r\n      // Disparition du refresher\r\n      refresher.complete();\r\n    }, 2500); \r\n  }\r\n  \r\n  // Ouverture du modal \r\n  openModal(request) { \r\n    let modal = this.modalCtrl.create('RequestModalPage', {request: request} , { cssClass: 'inset-modal' });\r\n    modal.present();\r\n    modal.onDidDismiss(data => console.log(data));\r\n  } \r\n  \r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/request/request.ts"],"sourceRoot":""}